(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1240300,      27748]
NotebookOptionsPosition[   1217095,      27048]
NotebookOutlinePosition[   1217629,      27067]
CellTagsIndexPosition[   1217586,      27064]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Steering distillation", "Subsubsection",
 CellChangeTimes->{{3.77657633879941*^9, 3.776576364109633*^9}, {
  3.7781600370381403`*^9, 3.778160044444928*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"\[Sigma]", ",", "4", ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "0", "]"}], "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "1", "]"}], "=", 
   RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "2", "]"}], "=", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "3", "]"}], "=", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]4", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7402944357689247`*^9, 3.740294468180982*^9}, 
   3.7402949636652184`*^9, {3.7402951014251537`*^9, 3.740295106805131*^9}, {
   3.740468195322576*^9, 3.740468203989627*^9}, {3.740468340063477*^9, 
   3.740468398378311*^9}, 3.740468441348179*^9, {3.7407822677446117`*^9, 
   3.74078230704842*^9}, {3.749887022275769*^9, 3.749887022792706*^9}, {
   3.796814304346128*^9, 3.796814313535191*^9}, {3.7985314538139353`*^9, 
   3.798531464231789*^9}, {3.798701670378132*^9, 3.7987016815535927`*^9}, {
   3.798801121738215*^9, 3.7988011291817636`*^9}, {3.7989538410565577`*^9, 
   3.79895385238435*^9}, {3.799925348928034*^9, 3.79992535848919*^9}, {
   3.800963227515649*^9, 3.8009632378955*^9}, {3.803152041452053*^9, 
   3.803152070272848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
    RowBox[{"\[Sigma]", "[", "1", "]"}], ",", 
    RowBox[{"\[Sigma]", "[", "2", "]"}], ",", 
    RowBox[{"\[Sigma]", "[", "3", "]"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.797933370350649*^9, 3.798954313679329*^9, 
  3.799637216324242*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u1", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u4", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", "=", 
   RowBox[{"ConjugateTranspose", "[", "u", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"ConjugateTranspose", "[", "d", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pt", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "p", "]"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mt", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "m", "]"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.739864260622671*^9, 3.739864294355277*^9}, {
   3.740094033275511*^9, 3.740094110571589*^9}, {3.740212469852973*^9, 
   3.74021247718215*^9}, {3.740212520839993*^9, 3.7402125726654243`*^9}, {
   3.740294332327229*^9, 3.7402943562960863`*^9}, {3.740781976522053*^9, 
   3.740782096782011*^9}, {3.749887058128124*^9, 3.749887058686844*^9}, {
   3.7498978767462873`*^9, 3.749897888369153*^9}, {3.778165837509357*^9, 
   3.7781658925277367`*^9}, 3.7781659718880587`*^9, {3.77816612927106*^9, 
   3.7781661435750103`*^9}, {3.7781662428691263`*^9, 3.778166286433877*^9}, {
   3.778166323726159*^9, 3.77816634460492*^9}, {3.803151448870551*^9, 
   3.803151553136263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]g", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", "d"}], "]"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]gT", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]g", "]"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]g", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Psi]g", ".", "\[Psi]gT"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]g", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0", "0", "0", "0", "0", 
      "0", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", "0", "0", "0", "0", 
      
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798531749164216*^9, 3.79870169702383*^9, 
  3.798800225784457*^9, 3.798953863445545*^9, 3.7989543155747633`*^9, 
  3.7993649282336884`*^9, 3.7996372181855507`*^9, 3.7997245197833967`*^9, 
  3.7999253718124733`*^9, 3.800963252810462*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]g4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "u", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", "d", ",", "d"}], "]"}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]g4T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]g4", "]"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]g4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Psi]g4", ".", "\[Psi]g4T"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "\[Rho]g4", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8009632726271763`*^9, 3.800963301140671*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]w", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"c0", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "d"}], "]"}], ")"}]}], "+", 
     RowBox[{"c1", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{"c2", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", "u"}], "]"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]wT", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]w", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c1", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}], ",", 
       RowBox[{"0", "<", "c0", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]w", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Psi]w", ".", "\[Psi]wT"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]w", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0", 
      RowBox[{"c0", " ", "c2"}], "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0", 
      RowBox[{"c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c2"}], 
      RowBox[{"c1", " ", "c2"}], "0", 
      SuperscriptBox["c2", "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.79853175099364*^9, 3.79870170259237*^9, 
  3.798800228801259*^9, 3.798953868347959*^9, 3.799364931984043*^9, 
  3.799637219519771*^9, 3.79972452140055*^9, 3.799925374825844*^9, 
  3.8000227412213573`*^9, 3.8012230166873083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]w4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"c0", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "u", ",", "d"}], "]"}], ")"}]}], "+", 
     RowBox[{"c1", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "d", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{"c2", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", "u", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{"c3", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", "u", ",", "u"}], "]"}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]w4T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]w4", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c0", "<", "1"}], ",", 
       RowBox[{"0", "<", "c1", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}], ",", 
       RowBox[{"0", "<", "c3", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]w4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Psi]w4", ".", "\[Psi]w4T"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]w4", "]"}]}], "Input",
 CellChangeTimes->{{3.801186800951187*^9, 3.8011868836452713`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0", 
      RowBox[{"c0", " ", "c2"}], "0", "0", "0", 
      RowBox[{"c0", " ", "c3"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0", 
      RowBox[{"c1", " ", "c2"}], "0", "0", "0", 
      RowBox[{"c1", " ", "c3"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c2"}], 
      RowBox[{"c1", " ", "c2"}], "0", 
      SuperscriptBox["c2", "2"], "0", "0", "0", 
      RowBox[{"c2", " ", "c3"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c3"}], 
      RowBox[{"c1", " ", "c3"}], "0", 
      RowBox[{"c2", " ", "c3"}], "0", "0", "0", 
      SuperscriptBox["c3", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.80118688447742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"k0", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u1", ",", "u1"}], "]"}], ")"}]}], "+", 
     RowBox[{"k1", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u2", ",", "u2"}], "]"}], ")"}]}], "+", 
     RowBox[{"k2", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u3", ",", "u3"}], "]"}], ")"}]}], "+", 
     RowBox[{"k3", 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u4", ",", "u4"}], "]"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]4T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]4", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "k0", "<", "1"}], ",", 
       RowBox[{"0", "<", "k1", "<", "1"}], ",", 
       RowBox[{"0", "<", "k2", "<", "1"}], ",", 
       RowBox[{"0", "<", "k3", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Psi]4", ".", "\[Psi]4T"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]4", "]"}]}], "Input",
 CellChangeTimes->{{3.803151604388378*^9, 3.8031517110634604`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["k0", "2"], "0", "0", "0", "0", 
      RowBox[{"k0", " ", "k1"}], "0", "0", "0", "0", 
      RowBox[{"k0", " ", "k2"}], "0", "0", "0", "0", 
      RowBox[{"k0", " ", "k3"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {
      RowBox[{"k0", " ", "k1"}], "0", "0", "0", "0", 
      SuperscriptBox["k1", "2"], "0", "0", "0", "0", 
      RowBox[{"k1", " ", "k2"}], "0", "0", "0", "0", 
      RowBox[{"k1", " ", "k3"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {
      RowBox[{"k0", " ", "k2"}], "0", "0", "0", "0", 
      RowBox[{"k1", " ", "k2"}], "0", "0", "0", "0", 
      SuperscriptBox["k2", "2"], "0", "0", "0", "0", 
      RowBox[{"k2", " ", "k3"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {
      RowBox[{"k0", " ", "k3"}], "0", "0", "0", "0", 
      RowBox[{"k1", " ", "k3"}], "0", "0", "0", "0", 
      RowBox[{"k2", " ", "k3"}], "0", "0", "0", "0", 
      SuperscriptBox["k3", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.803151712387089*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lf0", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "k0"}], "0", "0", "0"},
       {"0", 
        RowBox[{"1", "/", "k1"}], "0", "0"},
       {"0", "0", 
        RowBox[{"1", "/", "k2"}], "0"},
       {"0", "0", "0", 
        RowBox[{"1", "/", "k3"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"lf1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0", "0"},
       {"0", "b", "0", "0"},
       {"0", "0", "c", "0"},
       {"0", "0", "0", "d"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"\[Sigma]4", "[", "0", "]"}], ",", "lf0"}], "]"}], ".", 
    "\[Rho]4", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"\[Sigma]4", "[", "0", "]"}], ",", "lf0"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8031517673330793`*^9, 3.803151999988596*^9}, {
  3.8031520836550817`*^9, 3.803152134555876*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.803151967977887*^9, 3.803152000741383*^9}, 
   3.803152087907012*^9, 3.803152135714795*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"Distillation", " ", "of", " ", "GGHZ", " ", "state"}], 
   TraditionalForm]], "Section"],
 ", untrusted party is Alice(1SDI) and A and B in (2SDI)"
}], "Subsubsection",
 CellChangeTimes->{{3.7985317618435907`*^9, 3.798531826935176*^9}}],

Cell[CellGroupData[{

Cell["Assemblages in 1SDI", "Subsubsection",
 CellChangeTimes->{{3.798531845388616*^9, 3.798531849573454*^9}, {
  3.798531885420947*^9, 3.798531888119549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"(*", 
   RowBox[{"s100", "+", "s110", "+"}], "*)"}], "s111", 
  RowBox[{"(*", 
   RowBox[{"+", "s111"}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.798532105810561*^9, 3.79853212192656*^9}, 
   3.798532161864356*^9, 3.7985321933340816`*^9, 3.7985326677362347`*^9, 
   3.7987018046859293`*^9, 3.7987018478082*^9, {3.7987019363326683`*^9, 
   3.798701966049646*^9}, 3.798702357789977*^9, 3.798702427611555*^9, 
   3.798702458817813*^9, 3.79880023561884*^9, 3.798953875212852*^9, {
   3.798954308311767*^9, 3.798954321041363*^9}, 3.799364955090198*^9, 
   3.7996372246198997`*^9, 3.799925380132316*^9, 3.800963314293954*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g100", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "2"}], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g101", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], "0", "0", 
        FractionBox["1", "4"]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {
        FractionBox["1", "4"], "0", "0", 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g110", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g111", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], "0", "0", 
        FractionBox[
         RowBox[{"-", "1"}], "4"]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{"-", "1"}], "4"], "0", "0", 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.798701786745184*^9, 3.798702059649722*^9}, {
  3.798702090628312*^9, 3.7987022604384537`*^9}, {3.798702290940653*^9, 
  3.798702483468904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assemblages", " ", "in", " ", "2", "SDI"}]], "Code",
 CellChangeTimes->{{3.799652589837966*^9, 3.7996525994690123`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "Assemblages", " ", "in", " ", "SDI"}]], "Output",
 CellChangeTimes->{3.7999253641735773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S20000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20000", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21000", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20011", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20111", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21011", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21111", "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}, {3.799652699580895*^9, 
   3.7996527225139933`*^9}, {3.799652762166793*^9, 3.7996528786255693`*^9}, {
   3.7996529282142067`*^9, 3.799653312058942*^9}, {3.7996533454350157`*^9, 
   3.799653369420042*^9}, {3.799653459486372*^9, 3.7996537346007833`*^9}, {
   3.799666251183893*^9, 3.799666268866477*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963324928248*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963324952045*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.8009633249714737`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.80096332498629*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "4"], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963324995885*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "4"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963325005042*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "4"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963325012534*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "4"], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799653370672922*^9, 3.7996537361041317`*^9, 
  3.799666270668693*^9, 3.799925387547566*^9, 3.800963325019925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S20001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S20110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s20110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S21110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s21110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20001", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20101", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21001", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21101", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20010", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s20110", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21010", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "s21110", "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}, {3.799652699580895*^9, 
   3.7996527225139933`*^9}, {3.799652762166793*^9, 3.7996528786255693`*^9}, {
   3.7996529282142067`*^9, 3.799653312058942*^9}, {3.7996533454350157`*^9, 
   3.799653369420042*^9}, {3.799653459486372*^9, 3.7996537346007833`*^9}, {
   3.799654525285103*^9, 3.7996548220375338`*^9}, {3.799654861281454*^9, 
   3.799654875151907*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.800963329493635*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.800963329505303*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.8009633295143013`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.8009633295240107`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.8009633295349483`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.800963329548017*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.800963329555735*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799654822896681*^9, 3.799654881515973*^9, 
  3.799925392493729*^9, 3.800963329562978*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g20000", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20100", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g21000", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g21100", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20011", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], 
        FractionBox["1", "4"]},
       {
        FractionBox["1", "4"], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20111", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], 
        FractionBox[
         RowBox[{"-", "1"}], "4"]},
       {
        FractionBox[
         RowBox[{"-", "1"}], "4"], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g21011", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], 
        FractionBox[
         RowBox[{"-", "1"}], "4"]},
       {
        FractionBox[
         RowBox[{"-", "1"}], "4"], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g21111", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], 
        FractionBox["1", "4"]},
       {
        FractionBox["1", "4"], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7996537790120173`*^9, 3.79965413090032*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g20001", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20101", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g21001", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g21101", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20010", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g20110", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g21010", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g21110", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799654915139311*^9, 3.7996550528391542`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Local filtering operation by Bob and Charlie in 1SDI scenario\
\>", "Subsubsection",
 CellChangeTimes->{{3.798532242686329*^9, 3.798532263554929*^9}, {
   3.798534139294364*^9, 3.798534142197034*^9}, {3.798701728665721*^9, 
   3.798701734677203*^9}, 3.798953881359844*^9, 3.799652560358056*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Strategy", " ", "1", " ", 
  RowBox[{"(", 
   RowBox[{"one", " ", "party", " ", "contribution"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.798532764037341*^9, 3.798532814356468*^9}}],

Cell[BoxData[
 RowBox[{"contribution", " ", "one", " ", "party", " ", 
  "Strategy"}]], "Output",
 CellChangeTimes->{3.7987016872722807`*^9, 3.7999253643933372`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K0", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tan", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "K0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K0T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "K0", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "K0T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "K1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "K1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "K1T", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"K0T", ".", "K0"}], "+", 
   RowBox[{"K1T", ".", "K1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.778204645330646*^9, 3.778204877498444*^9}, {
  3.778204941045549*^9, 3.778204976682846*^9}, {3.7789937216266108`*^9, 
  3.778993725080093*^9}, {3.779002062037552*^9, 3.779002083418212*^9}, {
  3.798184176119326*^9, 3.7981842152388*^9}, {3.798532288569111*^9, 
  3.798532373203246*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Tan", "[", "\[Theta]", "]"}], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.798800249451689*^9, 3.7989538846478157`*^9, 
   3.799364963655641*^9, 3.799637231052293*^9, 3.8009634175991*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Tan", "[", "\[Theta]", "]"}], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.798800249451689*^9, 3.7989538846478157`*^9, 
   3.799364963655641*^9, 3.799637231052293*^9, 3.8009634176123343`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.798800249451689*^9, 3.7989538846478157`*^9, 
   3.799364963655641*^9, 3.799637231052293*^9, 3.800963417621809*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.798800249451689*^9, 3.7989538846478157`*^9, 
   3.799364963655641*^9, 3.799637231052293*^9, 3.800963417634985*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.798800249451689*^9, 3.7989538846478157`*^9, 
   3.799364963655641*^9, 3.799637231052293*^9, 3.8009634176454773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Strategy", " ", "2", " ", 
  RowBox[{"(", 
   RowBox[{"Equal", " ", "contribution"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.798532780246071*^9, 3.7985327961426*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "contribution", " ", "Equal", " ", "Strategy"}]], "Output",\

 CellChangeTimes->{3.7987016874206123`*^9, 3.7993649648574247`*^9, 
  3.799925364457284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "E0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "E0", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "E0T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "E1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "E1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "E1T", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"E0T", ".", "E0"}], "+", 
   RowBox[{"E1T", ".", "E1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.798532842638873*^9, 3.798532908209435*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798532908922043*^9, 3.7988002529830713`*^9, 
  3.798953888814592*^9, 3.799364966988328*^9, 3.79963723367063*^9, 
  3.80096342209835*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798532908922043*^9, 3.7988002529830713`*^9, 
  3.798953888814592*^9, 3.799364966988328*^9, 3.79963723367063*^9, 
  3.80096342211028*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798532908922043*^9, 3.7988002529830713`*^9, 
  3.798953888814592*^9, 3.799364966988328*^9, 3.79963723367063*^9, 
  3.8009634221224623`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.798532908922043*^9, 3.7988002529830713`*^9, 
  3.798953888814592*^9, 3.799364966988328*^9, 3.79963723367063*^9, 
  3.800963422133402*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.798532908922043*^9, 3.7988002529830713`*^9, 
  3.798953888814592*^9, 3.799364966988328*^9, 3.79963723367063*^9, 
  3.8009634221431847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Strategy", " ", "3", " ", 
  RowBox[{"(", 
   RowBox[{"Unequal", " ", "contribution"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.798533028371491*^9, 3.798533044046639*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", "contribution", " ", "Strategy", " ", 
  "Unequal"}]], "Output",
 CellChangeTimes->{3.798701687487645*^9, 3.799925364542131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], ")"}], 
       RowBox[{"1", "/", "n"}]], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "F0", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}], ",", 
       RowBox[{"0", "<", "n", "<", "500"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F0T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], ")"}], 
        RowBox[{"2", "/", "n"}]]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "F1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ","}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"0", "<", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}], ","}], "*)"}], 
      RowBox[{"0", "<", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Theta]", "]"}], 
        RowBox[{"2", "/", "n"}]], "<", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F1T", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"F0T", ".", "F0"}], "+", 
   RowBox[{"F1T", ".", "F1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "F2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
       RowBox[{"0", "<", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}], ",", 
       RowBox[{"0", "<", "n", "<", "500"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F2T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F3", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], ")"}], 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]}]]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F3T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "F3", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ","}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"0", "<", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "<", "1"}], ","}], "*)"}], 
      RowBox[{"0", "<", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Theta]", "]"}], 
        RowBox[{"2", "/", "n"}]], "<", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "F3T", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"F2T", ".", "F2"}], "+", 
   RowBox[{"F3T", ".", "F3"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.798533055531704*^9, 3.798533307624338*^9}, {
  3.798533390543077*^9, 3.7985334630744867`*^9}, {3.798533664455481*^9, 
  3.7985337655420523`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       FractionBox["1", "n"]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.80096347235244*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       FractionBox["1", "n"]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.8009634723635483`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], 
         RowBox[{"2", "/", "n"}]]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.8009634723716793`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Conjugate", "[", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "/", "n"}]]}]], "]"}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472379899*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       RowBox[{"2", "/", "n"}]], "+", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], 
           RowBox[{"2", "/", "n"}]]}]], "]"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "/", "n"}]]}]]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472389221*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], "n"]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472395805*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], "n"]], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472404255*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], 
         RowBox[{"2", "-", 
          FractionBox["2", "n"]}]]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.8009634724130583`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Conjugate", "[", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "-", 
           FractionBox["2", "n"]}]]}]], "]"}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472470645*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], 
       RowBox[{"2", "-", 
        FractionBox["2", "n"]}]], "+", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]", "]"}], 
           RowBox[{"2", "-", 
            FractionBox["2", "n"]}]]}]], "]"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "-", 
           FractionBox["2", "n"]}]]}]]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7985331594781227`*^9, 3.7985331941353827`*^9}, 
   3.798533238823708*^9, {3.7985332927444277`*^9, 3.7985333083115253`*^9}, {
   3.798533398434476*^9, 3.79853346394305*^9}, 3.798533766052661*^9, 
   3.7988002555726013`*^9, 3.798953894135457*^9, 3.7989543298599787`*^9, 
   3.7993649701052427`*^9, 3.799637235704121*^9, 3.800963472592173*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Success", " ", "probability", " ", "1", "SDI"}]], "Code",
 CellChangeTimes->{{3.798532412661648*^9, 3.798532419562791*^9}, {
  3.799657960744198*^9, 3.7996579681040363`*^9}}],

Cell[BoxData[
 RowBox[{"probability", " ", "SDI", " ", "Success"}]], "Output",
 CellChangeTimes->{3.798701687571362*^9, 3.799925364604537*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P11SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K0", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"s101", "+", "s111"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K0T", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7985324291962233`*^9, 3.798532477783437*^9}, {
  3.798532686426423*^9, 3.798532734612468*^9}, {3.798532928596262*^9, 
  3.798532942233399*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.798532723663177*^9, 3.7985327355498943`*^9}, 
   3.7985329431162233`*^9, 3.798800338862306*^9, 3.799364980442768*^9, 
   3.799637237975478*^9, 3.800963485285225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P21SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"E0", ",", "E0"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"s100", "+", "s110"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"E0T", ",", "E0T"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798532962550317*^9, 3.7985330122720833`*^9}, {
  3.79880066277061*^9, 3.7988006628850393`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.7985329868070717`*^9, 3.798533013244377*^9}, 
   3.79880039089892*^9, 3.798800663921927*^9, 3.799364981691557*^9, 
   3.7996372387752542`*^9, 3.8009634872520514`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P31SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"F0", ",", "F2"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"s101", "+", "s111"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"F0T", ",", "F2T"}], "]"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"+", 
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"F0", ",", "F2"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"s101", "+", "s111"}], ")"}], ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"F0T", ",", "F2T"}], "]"}]}], "]"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7985334865151443`*^9, 3.798533508255794*^9}, {
   3.798533783316242*^9, 3.7985337907089033`*^9}, {3.798533822163424*^9, 
   3.798533824991682*^9}, {3.798800871857913*^9, 3.7988008803995047`*^9}, {
   3.798954529538074*^9, 3.798954542342948*^9}, 3.799364996740939*^9, {
   3.800963494563961*^9, 3.800963502947794*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.798533508915678*^9, 3.798533791506613*^9, 3.798533825717811*^9, 
   3.798800701880054*^9, 3.7988008812738028`*^9, {3.798954543497568*^9, 
   3.798954561786251*^9}, {3.799364982658679*^9, 3.799364998260707*^9}, 
   3.79963723953916*^9, {3.800963491058261*^9, 3.800963503397532*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Success", " ", "probability", " ", "2", "SDI"}]], "Code",
 CellChangeTimes->{{3.799657979014027*^9, 3.799657994746426*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "probability", " ", "SDI", " ", "Success"}]], "Output",
 CellChangeTimes->{3.799925364688897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"P12SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{"K0", ".", 
     RowBox[{"(", 
      RowBox[{"s20000", "+", "s20100", "+", "s21000", "+", "s21100"}], ")"}], 
     ".", "K0T"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"P22SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{"K0", ".", 
     RowBox[{"(", 
      RowBox[{"s20001", "+", "s20101", "+", "s21001", "+", "s21101"}], ")"}], 
     ".", "K0T"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"P32SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{"K0", ".", 
     RowBox[{"(", 
      RowBox[{"s20010", "+", "s20110", "+", "s21010", "+", "s21110"}], ")"}], 
     ".", "K0T"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"P42SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{"K0", ".", 
     RowBox[{"(", 
      RowBox[{"s20011", "+", "s20111", "+", "s21011", "+", "s21111"}], ")"}], 
     ".", "K0T"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.799658036665834*^9, 3.7996582451275463`*^9}, {
  3.7996582777383413`*^9, 3.7996583499159203`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7996581970274963`*^9, 3.799658247130031*^9, 
  3.79965835116247*^9, 3.800963535612809*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7996581970274963`*^9, 3.799658247130031*^9, 
  3.79965835116247*^9, 3.800963535633315*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7996581970274963`*^9, 3.799658247130031*^9, 
  3.79965835116247*^9, 3.800963535648703*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7996581970274963`*^9, 3.799658247130031*^9, 
  3.79965835116247*^9, 3.800963535664337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Failure", " ", "probability"}]], "Code",
 CellChangeTimes->{{3.7988002723803177`*^9, 3.798800279698167*^9}}],

Cell[BoxData[
 RowBox[{"Failure", " ", "probability"}]], "Output",
 CellChangeTimes->{3.799925364817183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pf11SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K1", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"s101", "+", "s111"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K1T", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.79880028676552*^9, 3.798800324862225*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"2", " ", "\[Theta]"}], "]"}]], "Output",
 CellChangeTimes->{3.798800325993278*^9, 3.799365020579254*^9, 
  3.799637243492955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pf21SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E1", ",", "E1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s100", "+", "s110"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E1", ",", "E1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E0", ",", "E1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s100", "+", "s110"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E0", ",", "E1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E1", ",", "E0"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s100", "+", "s110"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"E1", ",", "E0"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798800385603291*^9, 3.79880040969879*^9}, {
  3.798800510075624*^9, 3.798800512623005*^9}, {3.7988005791105824`*^9, 
  3.7988006358535833`*^9}, {3.798800669662962*^9, 3.79880067649365*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"2", " ", "\[Theta]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7988004373409986`*^9, 3.798800514142639*^9, {3.798800598550173*^9, 
   3.7988006367376738`*^9}, 3.798800677423327*^9, 3.7993650219952097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pf31SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F3"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F3"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F0"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F0"}], "]"}]}], "]"}], "+", "\[IndentingNewLine]", 
    
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F2"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F2"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F3"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F3"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F3"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F3"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F0"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F0"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F2"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F2"}], "]"}]}], "]"}], "+", "\[IndentingNewLine]", 
    
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F0"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F0", ",", "F0"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F3"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F3", ",", "F3"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F1"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F1", ",", "F1"}], "]"}]}], "]"}], "+", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F2"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"s101", "+", "s111"}], ")"}], ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"F2", ",", "F2"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.798800698952037*^9, {3.798800730881322*^9, 3.798800804217957*^9}, {
   3.798800928223794*^9, 3.7988009572205153`*^9}, 3.7988009891672077`*^9, {
   3.7988011008176727`*^9, 3.798801108443349*^9}, {3.798953934324758*^9, 
   3.798954003794746*^9}, {3.798954055161169*^9, 3.798954293617797*^9}, {
   3.7989544095344048`*^9, 3.798954450503851*^9}, {3.7989544897227087`*^9, 
   3.798954502491015*^9}, {3.798954678377845*^9, 3.79895468848563*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.7988009908252296`*^9, 3.798801109209293*^9, 3.798954005246772*^9, {
   3.79895429502332*^9, 3.798954300326313*^9}, 3.798954335927335*^9, 
   3.798954451990459*^9, 3.798954503045683*^9, {3.79895467950443*^9, 
   3.798954690999789*^9}, 3.799365023161351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"P11SGHZ", "+", "Pf11SGHZ"}], "]"}]], "Input",
 CellChangeTimes->{{3.798800345736916*^9, 3.798800361258911*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.798800362365066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"P21SGHZ", "+", "Pf21SGHZ"}], "]"}]], "Input",
 CellChangeTimes->{{3.798800457889336*^9, 3.798800462262535*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.798800463372143*^9, 3.798800522550865*^9, 
  3.798800602082754*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"P31SGHZ", "+", "Pf31SGHZ"}], "]"}]], "Input",
 CellChangeTimes->{{3.798801071760442*^9, 3.798801075384555*^9}, {
  3.7989545944733973`*^9, 3.79895464907434*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.7988010759594803`*^9, {3.7989545715864897`*^9, 3.798954650126911*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assemblage fidelity for finite copy 1SDI", "Subsubsection",
 CellChangeTimes->{{3.798543640461687*^9, 3.7985436461878138`*^9}, {
  3.7985446871424723`*^9, 3.798544692255147*^9}, {3.799654171195589*^9, 
  3.7996541740152683`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u00", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u01", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u10", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u11", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut00", "=", 
   RowBox[{"ConjugateTranspose", "[", "u00", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut01", "=", 
   RowBox[{"ConjugateTranspose", "[", "u01", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut10", "=", 
   RowBox[{"ConjugateTranspose", "[", "u10", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut11", "=", 
   RowBox[{"ConjugateTranspose", "[", "u11", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pgf", "=", 
   RowBox[{"Simplify", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"(", 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
     RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
  RowBox[{"Pgs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
      RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g100"}], "+", 
     RowBox[{"Pgf", "*", "s100"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g101"}], "+", 
     RowBox[{"Pgf", "*", "s101"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g110"}], "+", 
     RowBox[{"Pgf", "*", "s110"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g111"}], "+", 
     RowBox[{"Pgf", "*", "s111"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7985447007726173`*^9, 3.798544756238171*^9}, {
  3.798545103328763*^9, 3.7985451997121696`*^9}, {3.798545364223391*^9, 
  3.798545480612451*^9}, {3.798546421788785*^9, 3.798546444486211*^9}, {
  3.7987025926467*^9, 3.798702725661028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg0", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{"ut00", ".", "gD100", ".", "u00"}], ")"}], ")"}]], "+", 
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"ut11", ".", "gD110", ".", "u11"}], ")"}]]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7985452239572887`*^9, 3.798545229150564*^9}, {
  3.798545531202086*^9, 3.798545598612916*^9}, {3.79854563187805*^9, 
  3.798545708257635*^9}, {3.7985457475822277`*^9, 3.79854579865405*^9}, {
  3.798545838052738*^9, 3.798545853647735*^9}, {3.7987027442218647`*^9, 
  3.7987027449606457`*^9}, {3.798702784158371*^9, 3.798702835106638*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.798545602045557*^9, {3.7985457825057297`*^9, 3.798545803549575*^9}, {
   3.7985458399328747`*^9, 3.798545854381093*^9}, 3.798546448546913*^9, 
   3.798702842951527*^9, 3.799365042979247*^9, 3.799637196717053*^9, 
   3.799637256043536*^9, 3.799925415616145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"Tr", "[", 
     RowBox[{"g100", ".", "gD100"}], "]"}]], "+", 
   SqrtBox[
    RowBox[{"Tr", "[", 
     RowBox[{"g110", ".", "gD110"}], "]"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7996553910185966`*^9, 3.7996554817190866`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.799655484226471*^9, 3.79992541661353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["4"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ut00", ".", "gD101", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "gD101", ".", "u11"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut11", ".", "gD101", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut11", ".", "gD101", ".", "u11"}], ")"}]}], ")"}]}], "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ut00", ".", "gD111", ".", "u00"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "gD111", ".", "u11"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut11", ".", "gD111", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut11", ".", "gD111", ".", "u11"}], ")"}]}], ")"}]}]}], 
     ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798545904619815*^9, 3.79854627644672*^9}, {
  3.7987028616823874`*^9, 3.798703086236946*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "cp"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7987030902079973`*^9, 3.799365044929472*^9, 
  3.799637259543583*^9, 3.799925422191037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"Tr", "[", 
     RowBox[{"g101", ".", "gD101"}], "]"}]], "+", 
   SqrtBox[
    RowBox[{"Tr", "[", 
     RowBox[{"g111", ".", "gD111"}], "]"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7996555233015537`*^9, 3.7996555333687897`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   RowBox[{"4", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.799655534572098*^9, 3.799925427968322*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "1.5"}], ";", 
  RowBox[{"cp", "=", "356"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", "Fg0", "]"}], "//", "N"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simplify", "[", "Fg1", "]"}], "//", "N"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "cp"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7987031207587767`*^9, 3.7987031987078943`*^9}, {
   3.79936506869746*^9, 3.7993650807283907`*^9}, {3.7993652363114233`*^9, 
   3.799365266472365*^9}, {3.799365301968841*^9, 3.799365444127687*^9}, {
   3.7993656675996304`*^9, 3.7993657812230787`*^9}, {3.7993658217132807`*^9, 
   3.7993658632880793`*^9}, {3.799365940011709*^9, 3.799365984272935*^9}, {
   3.799366032344489*^9, 3.7993661317215242`*^9}, {3.7993661736754293`*^9, 
   3.79936623632224*^9}, {3.799366355813266*^9, 3.799366356433123*^9}, {
   3.799366447812935*^9, 3.79936644914495*^9}, {3.799366600483574*^9, 
   3.7993666011706457`*^9}, {3.799366647541047*^9, 3.7993666556133204`*^9}, {
   3.79936669704915*^9, 3.799366707802231*^9}, {3.799366879672613*^9, 
   3.7993668802564783`*^9}, {3.799366946595127*^9, 3.799366988113615*^9}, {
   3.7996372702430143`*^9, 3.799637271568439*^9}, {3.799665772451179*^9, 
   3.799665806234839*^9}, {3.799666095296788*^9, 3.799666134738608*^9}, {
   3.799925443560993*^9, 3.799925454442439*^9}, {3.799925612144846*^9, 
   3.799925666381069*^9}, {3.799925708523676*^9, 3.799925868355544*^9}, {
   3.799934411833519*^9, 3.79993502682819*^9}, 3.7999350788982983`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.9999029645784016`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.798703187040435*^9, 3.798703199508505*^9}, 
   3.799365081948658*^9, {3.799365238347118*^9, 3.7993652673125896`*^9}, 
   3.799365306470099*^9, {3.799365336772657*^9, 3.799365408527747*^9}, 
   3.799365445463931*^9, {3.799365669863921*^9, 3.799365782693321*^9}, {
   3.799365827046955*^9, 3.799365864283483*^9}, {3.799365942290946*^9, 
   3.79936598534021*^9}, {3.7993660375951443`*^9, 3.799366132653275*^9}, {
   3.799366179592606*^9, 3.7993662371624413`*^9}, 3.799366450332283*^9, 
   3.7993666023970747`*^9, {3.7993666491834297`*^9, 3.7993666567491503`*^9}, 
   3.799366709036762*^9, 3.7993668815682373`*^9, {3.799366948340446*^9, 
   3.799366968392907*^9}, 3.7993670052401743`*^9, 3.799637272061681*^9, {
   3.799665777797943*^9, 3.799665807224718*^9}, {3.799666097421226*^9, 
   3.799666135453452*^9}, 3.799925455554481*^9, {3.7999256133363857`*^9, 
   3.799925666725609*^9}, {3.7999257098436613`*^9, 3.799925869245454*^9}, {
   3.799934413061584*^9, 3.7999344794682283`*^9}, {3.799934531623742*^9, 
   3.7999350272872066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1.006024096274722`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.798703187040435*^9, 3.798703199508505*^9}, 
   3.799365081948658*^9, {3.799365238347118*^9, 3.7993652673125896`*^9}, 
   3.799365306470099*^9, {3.799365336772657*^9, 3.799365408527747*^9}, 
   3.799365445463931*^9, {3.799365669863921*^9, 3.799365782693321*^9}, {
   3.799365827046955*^9, 3.799365864283483*^9}, {3.799365942290946*^9, 
   3.79936598534021*^9}, {3.7993660375951443`*^9, 3.799366132653275*^9}, {
   3.799366179592606*^9, 3.7993662371624413`*^9}, 3.799366450332283*^9, 
   3.7993666023970747`*^9, {3.7993666491834297`*^9, 3.7993666567491503`*^9}, 
   3.799366709036762*^9, 3.7993668815682373`*^9, {3.799366948340446*^9, 
   3.799366968392907*^9}, 3.7993670052401743`*^9, 3.799637272061681*^9, {
   3.799665777797943*^9, 3.799665807224718*^9}, {3.799666097421226*^9, 
   3.799666135453452*^9}, 3.799925455554481*^9, {3.7999256133363857`*^9, 
   3.799925666725609*^9}, {3.7999257098436613`*^9, 3.799925869245454*^9}, {
   3.799934413061584*^9, 3.7999344794682283`*^9}, {3.799934531623742*^9, 
   3.799935027299358*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GHZ", " ", "1", "SDI"}]], "Code",
 CellChangeTimes->{{3.79993509016819*^9, 3.799935094773533*^9}}],

Cell[BoxData[{GridBox[{
   {"\[Theta]", 
    RowBox[{"cp", "=", "2"}], "5", "10", "50", "100", "380", "\[Placeholder]",
     "\[Placeholder]", "\[Placeholder]"},
   {"0.1", "0.779308", "0.793939", "0.81593", "0.922288", "0.972324", 
    "0.999903", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.2", 
    RowBox[{"cp", "=", "2"}], "5", "10", "50", "91", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.2", "0.847826", "0.88335", "0.924311", "0.997281", "0.999907", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.3", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "20", "38", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.3", "0.905727", "0.948154", "0.980469", "0.99716", "0.99991", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.4", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "20", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.4", "0.949495", "0.98321", "0.997263", "0.999926", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.5", "\[Placeholder]", "\[Placeholder]", "10", "11", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.5", "0.978352", "0.996617", "0.999844", "0.999916", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.6", "\[Placeholder]", "\[Placeholder]", "7", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.6", "0.993824", "0.999707", "0.999962", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.7", "\[Placeholder]", "4", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.7", "0.999382", "0.999982", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.8", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.8", "1", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.9", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.9", "0.999667", 
    RowBox[{"4", "/", "0.99998"}], "1", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"}
  }], "\n", GridBox[{
   {"1", "0.9962", "0.99932", 
    RowBox[{"7", "/", "0.9998"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.1", "0.9844", "0.9942", 
    RowBox[{"8", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.2", "0.959", "0.975717", 
    RowBox[{"12", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.3", "0.9162", "0.932413", "0.994223", 
    RowBox[{"24", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"}
  }], "\n", GridBox[{
   {"1.4", "0.854477", "0.85903", "0.957649", 
    RowBox[{"60", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.5", "0.774137", "0.766482", "0.84465", "0.947733", "0.982525", 
    RowBox[{"356", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.9", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.9", "0.999667", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"}
  }]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyU0ogwEAh/FZseWgFg7aYeO0tLRyG9pHZGGbVhSyTPbRCrEDiZlaS7MV
KWWMGWUlUbPt4sK2WiI0STMia632cVkmzfD+38PT7/DUj04q1FQKhcIkgi6H
N+yXZUQ6VucLVDpXE9A47/uC1nRjCdoKUUaA0B5O1sI4T8uG2cQFFzIj6ib4
ZlhphkIFgw91E0YBrFwqCKG3rtQO3VsaCfSnB3qgcrFPCjueKFoonlknvbc8
miCd1muGknGpDTq6u+zw9eR4G1boz0hPOR9uyBbs7EPVQvgQ8q9CHtKUbiQi
z4ioPL0KSjhDGqhpCBqgkz88CzlHljlYXswbYSD3R8pNhizkn1bZYE5e470m
3Gu1+uDGp/gcVlelg3B5re0OeqYuozDGeo7D79jtO9TJTCnIHnvIwv6ygzxs
2XT9wp/iIO2GcNfMocN/8Jjo1w==
  "],
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"GHZ", " ", "2", "SDI"}]], "Code",
 CellChangeTimes->{{3.7999351006977253`*^9, 3.799935104967011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "1.5"}], ";", 
  RowBox[{"cp", "=", "356"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", "Fg0", "]"}], "//", "N"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simplify", "[", "Fg1", "]"}], "//", "N"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "cp"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7987031207587767`*^9, 3.7987031987078943`*^9}, {
   3.79936506869746*^9, 3.7993650807283907`*^9}, {3.7993652363114233`*^9, 
   3.799365266472365*^9}, {3.799365301968841*^9, 3.799365444127687*^9}, {
   3.7993656675996304`*^9, 3.7993657812230787`*^9}, {3.7993658217132807`*^9, 
   3.7993658632880793`*^9}, {3.799365940011709*^9, 3.799365984272935*^9}, {
   3.799366032344489*^9, 3.7993661317215242`*^9}, {3.7993661736754293`*^9, 
   3.79936623632224*^9}, {3.799366355813266*^9, 3.799366356433123*^9}, {
   3.799366447812935*^9, 3.79936644914495*^9}, {3.799366600483574*^9, 
   3.7993666011706457`*^9}, {3.799366647541047*^9, 3.7993666556133204`*^9}, {
   3.79936669704915*^9, 3.799366707802231*^9}, {3.799366879672613*^9, 
   3.7993668802564783`*^9}, {3.799366946595127*^9, 3.799366988113615*^9}, {
   3.7996372702430143`*^9, 3.799637271568439*^9}, {3.799665772451179*^9, 
   3.799665806234839*^9}, {3.799666095296788*^9, 3.799666134738608*^9}, {
   3.799925443560993*^9, 3.799925454442439*^9}, {3.799925612144846*^9, 
   3.799925666381069*^9}, {3.799925708523676*^9, 3.799925868355544*^9}, {
   3.799934411833519*^9, 3.79993502682819*^9}, 3.7999350788982983`*^9, {
   3.799935138228055*^9, 3.799935159573802*^9}, {3.7999352567724533`*^9, 
   3.799935481567493*^9}, {3.799935515310907*^9, 3.799935869251862*^9}, {
   3.799935900962968*^9, 3.799935903803913*^9}, {3.7999359534566107`*^9, 
   3.799936082632629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.9999029645784016`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.799935143867981*^9, 3.799935160084695*^9}, {
   3.7999352576618557`*^9, 3.799935482652775*^9}, {3.799935517070613*^9, 
   3.799935546470399*^9}, {3.799935577224847*^9, 3.7999358701898403`*^9}, 
   3.799935904260189*^9, {3.799935956081998*^9, 3.799936083259444*^9}}]
}, Open  ]],

Cell[BoxData[{GridBox[{
   {"\[Theta]", 
    RowBox[{"cp", "=", "2"}], "5", "10", "50", "100", "178", "\[Placeholder]",
     "\[Placeholder]", "\[Placeholder]"},
   {"0.1", "0.799429", "0.844704", "0.887622", "0.98256", "0.997759", 
    "0.999904", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.2", 
    RowBox[{"cp", "=", "2"}], "5", "10", "44", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.2", "0.87448", "0.935071", "0.974238", "0.99991", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.3", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "19", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.3", "0.930623", "0.980756", "0.997293", "0.99991", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.4", "\[Placeholder]", "\[Placeholder]", "10", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.4", "0.968063", "0.996603", "0.9999", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.5", "\[Placeholder]", "\[Placeholder]", "6", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.5", "0.98905", "0.999735", "0.99992", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.6", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.6", "0.997833", "1", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.7", "\[Placeholder]", "3", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.7", "0.999896", "0.999992", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.8", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.8", "1", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.9", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.9", "0.999667", 
    RowBox[{"3", "/", "0.99998"}], "1", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"}
  }], "\n", GridBox[{
   {"1", "0.9962", 
    RowBox[{"5", "/", "0.99998"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"1.1", "0.9844", "0.999376", 
    RowBox[{"7", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.2", "0.959", "0.993968", 
    RowBox[{"12", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.3", "0.9162", "0.971311", "0.994223", 
    RowBox[{"24", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"}
  }], "\n", GridBox[{
   {"1.4", "0.854477", "0.913705", "0.957649", 
    RowBox[{"60", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"1.5", "0.774137", "0.809114", "0.84465", "0.947733", "0.982525", 
    RowBox[{"356", "/", "0.9999"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.9", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.9", "0.999667", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"}
  }]}], "Input",
 CellChangeTimes->{{3.799365165612625*^9, 3.799365354222584*^9}, {
   3.79936541251921*^9, 3.799365565671447*^9}, {3.7993656093412523`*^9, 
   3.799365774623846*^9}, {3.799365807211615*^9, 3.7993658912247143`*^9}, {
   3.799365990059195*^9, 3.799366003180677*^9}, {3.799366044357895*^9, 
   3.7993660965412903`*^9}, {3.7993661399509773`*^9, 3.799366151703252*^9}, {
   3.799366183909387*^9, 3.799366211206498*^9}, {3.7993662428100233`*^9, 
   3.7993662506717978`*^9}, {3.7993664560264*^9, 3.799366460608308*^9}, {
   3.799366662703957*^9, 3.7993666905008583`*^9}, {3.79936675441959*^9, 
   3.7993667623217287`*^9}, {3.799366885427718*^9, 3.7993668856379423`*^9}, {
   3.7993669350987167`*^9, 3.7993669409452057`*^9}, {3.799366974171555*^9, 
   3.799366982149686*^9}, {3.799925507278348*^9, 3.7999255153183603`*^9}, {
   3.799925554848667*^9, 3.799925662097949*^9}, {3.799925698913405*^9, 
   3.799925716208393*^9}, {3.799925751624392*^9, 3.79992575199789*^9}, {
   3.799925814153097*^9, 3.799925859045185*^9}, {3.799934360634757*^9, 
   3.799934380319901*^9}, {3.7999344340924788`*^9, 3.799934495345468*^9}, {
   3.799934593924015*^9, 3.799934622076374*^9}, {3.799934694847638*^9, 
   3.79993473449548*^9}, {3.799934788009571*^9, 3.7999348306372223`*^9}, {
   3.799934877125163*^9, 3.799934965018705*^9}, {3.79993503484326*^9, 
   3.799935041266189*^9}, 3.799935155642847*^9, {3.7999352529716063`*^9, 
   3.7999353395775433`*^9}, {3.799935391759788*^9, 3.799935463901833*^9}, {
   3.799935499596627*^9, 3.7999356906164837`*^9}, {3.799935727536854*^9, 
   3.7999359856765747`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assemblage fidelity for finite copy 2SDI", "Subsubsection",
 CellChangeTimes->{{3.798543640461687*^9, 3.7985436461878138`*^9}, {
  3.7985446871424723`*^9, 3.798544692255147*^9}, {3.799654171195589*^9, 
  3.7996541740152683`*^9}, {3.7996542468126497`*^9, 3.799654246926289*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u00", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u01", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u10", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u11", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut00", "=", 
   RowBox[{"ConjugateTranspose", "[", "u00", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut01", "=", 
   RowBox[{"ConjugateTranspose", "[", "u01", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut10", "=", 
   RowBox[{"ConjugateTranspose", "[", "u10", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut11", "=", 
   RowBox[{"ConjugateTranspose", "[", "u11", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pgf", "=", 
   RowBox[{"Simplify", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"(", 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
     RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
  RowBox[{"Pgs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
      RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20000"}], "+", 
     RowBox[{"Pgf", "*", "s20000"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20100"}], "+", 
     RowBox[{"Pgf", "*", "s20100"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21000"}], "+", 
     RowBox[{"Pgf", "*", "s21000"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21100"}], "+", 
     RowBox[{"Pgf", "*", "s21100"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20011"}], "+", 
     RowBox[{"Pgf", "*", "s20011"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20111"}], "+", 
     RowBox[{"Pgf", "*", "s20111"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21011"}], "+", 
     RowBox[{"Pgf", "*", "s21011"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21111"}], "+", 
     RowBox[{"Pgf", "*", "s21111"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20001"}], "+", 
     RowBox[{"Pgf", "*", "s20001"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20101"}], "+", 
     RowBox[{"Pgf", "*", "s20101"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21001"}], "+", 
     RowBox[{"Pgf", "*", "s21001"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21101"}], "+", 
     RowBox[{"Pgf", "*", "s21101"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20010"}], "+", 
     RowBox[{"Pgf", "*", "s20010"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD20110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g20110"}], "+", 
     RowBox[{"Pgf", "*", "s20110"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21010"}], "+", 
     RowBox[{"Pgf", "*", "s21010"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gD21110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pgs", "*", "g21110"}], "+", 
     RowBox[{"Pgf", "*", "s21110"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7985447007726173`*^9, 3.798544756238171*^9}, {
  3.798545103328763*^9, 3.7985451997121696`*^9}, {3.798545364223391*^9, 
  3.798545480612451*^9}, {3.798546421788785*^9, 3.798546444486211*^9}, {
  3.7987025926467*^9, 3.798702725661028*^9}, {3.799654261716731*^9, 
  3.799654392783214*^9}, {3.799655110975347*^9, 3.799655217440267*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Fg200", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20000", ".", "gD20000"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20100", ".", "gD20100"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21000", ".", "gD21000"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21100", ".", "gD21100"}], "]"}]]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fg201", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20001", ".", "gD20001"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20101", ".", "gD20101"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21001", ".", "gD21001"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21101", ".", "gD21101"}], "]"}]]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fg210", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20010", ".", "gD20010"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20110", ".", "gD20110"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21010", ".", "gD21010"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21110", ".", "gD21110"}], "]"}]]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fg211", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20011", ".", "gD20011"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g20111", ".", "gD20111"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21011", ".", "gD21011"}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{"g21111", ".", "gD21111"}], "]"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.79965557768295*^9, 3.799655699824955*^9}, {
  3.799655730364006*^9, 3.799655812335663*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.799655813261022*^9}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
  FractionBox[
   SqrtBox[
    RowBox[{"2", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.7996558133332977`*^9}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
  FractionBox[
   SqrtBox[
    RowBox[{"2", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.799655813345941*^9}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"8", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.799655813435688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";", 
  RowBox[{"cp", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "Fg200", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "Fg201", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "Fg210", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "Fg211", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "cp"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/cxdoqnY942j0PJr3SB6RuC0ndv83jj+8hPfDaL1
vneeA9FzZf0vgej9DPuvgWhmsZYXIFrHoJhlO5AuU14uBKKNLm8TB9GfzF/K
gOg38Q1qIPrRbg4dEM3Hxm0EoneJlduBaLm5W51B9Cn/Lm8Q7cZWFQWiVe/0
gukJzL9SQXTeYpU0EF1QyV8Jot+VqoJpp4CPdSA6aMHnehC9eJJiK4h+sLqy
DUTztH2dDaKFTDnmgGgP7uAlIHrPouaVIPrYseOLrP3fOC43+ASmX688uNUF
SH/aFnIQRO9bZlXhCaQzeXLqQTQAOmSZ+Q==
  "]],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.799655874983382*^9, 3.799655947161491*^9}, {
  3.7996656161698227`*^9, 3.7996656604435987`*^9}}],

Cell[BoxData["2.414213562373095`"], "Output",
 CellChangeTimes->{{3.799655874983382*^9, 3.799655947161491*^9}, {
  3.7996656161698227`*^9, 3.799665660463831*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  SqrtBox["2"]}]], "Output",
 CellChangeTimes->{{3.799655874983382*^9, 3.799655947161491*^9}, {
  3.7996656161698227`*^9, 3.799665660474454*^9}}],

Cell[BoxData[
 SqrtBox["7"]], "Output",
 CellChangeTimes->{{3.799655874983382*^9, 3.799655947161491*^9}, {
  3.7996656161698227`*^9, 3.799665660484765*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cp", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
        FractionBox[
         SqrtBox[
          RowBox[{"2", "-", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", "cp"}]], "+", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], 
         SqrtBox["2"]]}], ","}], "*)"}], 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
      FractionBox[
       SqrtBox[
        RowBox[{"2", "-", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]], "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], 
       SqrtBox["2"]]}], ",", 
     FractionBox[
      SqrtBox[
       RowBox[{"8", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0.01", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "cp", "]"}]}], "Input",
 CellChangeTimes->{{3.799926745140033*^9, 3.799926854882962*^9}, {
  3.799926909345045*^9, 3.799926920209174*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd2Hc8VX8YB3CUmSRZSWVLCkmyH2lJkpGRFCGkoRBSIqmspLKTHRKFJKQk
ZUcpK+tad7vnuvbs9z0/L/+8X457xvd7nufzXGlnL8sLHGzoh+P/XzYOimzM
eGAYDO3QPjk9SYQzz9weDd64Dxf7g3x/zRChTP9VdPe1B6BuV0EsWiCC21OV
qCa3cLjyWaHElZ0ELbra4UWW0aDwJrG7SZAEJkcVa3VEnsJ7xzgtb1USCKfo
feSYSIaf57581r5Mgj/p72yPteVA9D+BjsRREljvDRlqI5XC/NP+rVN9ZBAX
8MzW6akCjxnHSsNyCrw8tkbc1bwWej8dEBq5Q4XHwhJLWyK+A7uJBx/LmAby
zy1zy242wTZu0mTQLA3WFVhd/fz5Byym+IoNZ9JBhNv2EX3uJ5Qe/eO8TXsC
FkXjj3rSO4A7TL+S68MEcF/aHyu1rhOemW6Y0FFlAC2VqtfA2Q0y1Spvbscy
4Kyk20LE+m4oiQiaGnjCgPbnw+9NRbrh57s8Z4NnDHiX0qPSIdcNdaHbapbj
GXArqV5q4GA3WG574uv1nAHr4rLWTt3tBlbs0OSuXAYoR9m3blvtBmWvBEPe
jwy4dLP5jN9sDyRef7N6coQBjIjgxeHVHig75hGYMMqAaykaySe4e8HjCx9X
/xgD/D6mdcmJ94JVGOuEK4kBISveFr+1e6Gn6EPuRToD4u9uOaoW1AvmUyLF
R2cZUBNxWZ265i8QeitbLXkx2JQiwHtuYx/4vZXY9W4XBvwMq4vam/vg9Is/
aUW7MeAySm4Slu6D9asxZnkqGCxSZCNb1PqgXIB+IUkNgxFt7XXa5n3gGpIR
eF0Dg9Jel/XCj/tAoGW/1z9dDCw3V25s5u8HfhkuxWgTDEyvrF5/KdwPi5UB
hVePY3Ck9mBHiGQ/FF+85GduioHOxban+3f1Q0hTc89GMwxkKkc3vTzeD1vy
TgxGWWDAshMQDYnsB07OT7Jn7TB4kuQiockzADfVQuz9LmCQGjTiUCU4ANdF
RJYs3TDIdT6fbrB5AK6GDDaquGNQvctR7ujOASDxuE6MemBA/GKvYmc6AObn
k1wOXUbnp1gYBcYOgK+alvmgNwZj2oaen8UH4XVEbmxAMAaMbTWFRtKD8HJj
bIhuCAYLawyweqVBCB0oyV9BFmjT9W3XGYQd43zZwaEYaDvvv0NwGIR2YRGT
wPsYxESqPOXIHITU9WqlJlEY7O+TrDqiNAQCGVUB9gkY0L1dt2XvGQLH2zZc
HIkYZPEVhv7THoLorNLBfGR+Hd3jFSZD4Hp88/XpJAwISaf7lS4PwYGhXIV7
zzEIt0lY5X87BHvMbsgHZ6DPIz/MvChBgKc72f5NvcKgvuz178RtBHCNu5p0
vwCDzJB2znoZAjRHnAwXfY2BjbiYp4wyAQhp5MuahRh8OZqr3qdLgAeBS1ZX
32AQl/utzvQsAaYvqDE+l2Kg78pOVM0gABt7w8p4FQZ/LCbmRXIIcEqv9IP9
Rww8oXfdch4Bzk1/IbchJ0iU7Gl8SwCTwOiS99Xoef50CnKqIUD430ri7c8Y
ZOh/EX4yiI7/nKnAqsWAQyz4IEtyGB6ss9EJbMQgae0lmx6pYVQ3mH6DyCos
m4uf5YZBMWJSw6gJgzM/VB5H7hqGrrs+mjzNGJTdG/wrozcMXyoS7WJaMLjA
1Pe2OjMMTPVnzvfaMGhsWs4oSx4GpQ+LvUJ/0H4I5pTHXgzDTnKskBcyp6bA
K6WsYYgmZn1tRjbK2l6SVjAMVR70yJBOtJ8CjWrDPw6DZOlcw3gXBsXK4cMO
A8PA+q5mldiLrvfRJhlO6RGY7hgsSB7EoPygZC7Ij0CZjFbuOHLngtzOQKUR
CBgtV9gzhIGQm6Y6tmcExCP6K+qRow1OG/UajcDg/Z+76QQMQrA05yLXEeiy
eVMlNYqBh8XObOv8Ecj5nOCyl4SuT2mJ27hwBK7EKn67jCzJ3npZp3gEvKde
fX+J/Kv4iub2ihEQ66YUipLRfhcsaSI3jMAFFxnRaeR17fuZt0gjsPHDj8wX
VAzemB7Wz1IYhebFug1vJtD+khPNits5CpGhHbr9yM7LRK6HKqMgnba8iY+B
gWhh+M9LmqMQ18/V7IocvK7VZd+RUbisn28jimFg3mwZ2XgBuTgdPJkYTB11
6mbkjMK9wO+V3Sy0/8gniva9GgWW+6zEP+SKcN17t4tGoc88VUFhCoPbTaKq
fOWjoDHLDj7IXMd/PJBvGAWbNcdDeKcxkDDT0XSgjIIav8pLhRl0PEORP3sC
HS96dtgYeShGZIQyOQr0rYQ2T+ScduYj/8VREOyMrylCVrHIG3+6bgzWRmSt
UZtFz/OUcHzT7jFIEyP5Ksyh46fZLwmqj0HM3LaFg8jc8ZihreYYNIt57juP
3NrZTB8zGIOUybHuFGQb27uH2MzHwMlF8CffPHof7BlTmt5jkMPzhzKA/NSp
0TKnfAzKFkfTrBYxMLFP0e6uGoM8NqsYD2SOU5el+GrG4JT9/KEg5OtHBRle
DWPg/tCVNxfZXMUuQrdnDMwidi9MI69fJtV0LIwB4f7ehvAlDL7NVOZyro7B
UUsfmxTk21jUIy2Ocah+2lr6Gpk+onomjW8c3Pj0//xAbm7yn724ZRx+rcp9
27CM1juReze7/jj8MfuVF4ls+KR3k8aBcZg5G7Y3GXk+8vWi2+FxiMteeZKH
7H7nZGPriXFQWXnZWId85EKiS9K5cRAv8lNYRF67VzFFNWQcFKZimedW8Hq8
EOIcNg6fU77/8kT2VWhxjw8fB6kytSg/5NHNXvuWYsfB2Wvl4SPkr2wfftZn
jkNXcX5pJXJw2xHuc3XjIJwnI7JuFfUHCqHNuGEc9NoEVjchu3HeStjbMg4h
57obJZFN9d7K8/4eB/X1azhVkCUKxA6VjYyD57eBbSeR398nh/BxEIGbViwY
jbwjM9R4hpMIEhqP9z1DTq2WFCTwEuFN6mHDFOTQKfP09xuJcLhjD08+svn5
yk9O0kTYwfro8RWZphe5WG5IhP5t3pks5HN2cl8zDxGhNdLYcB65w+dzRLQx
ET5/+9C4glxRwBJ3NieC0BnjRJ5/GDwQP7N/vRMRvHUC92xFXtw7szrnQoT8
WSdZGeQrJx/Xj7gT4UHAKzZF5FMP6qwrvIhAvQt31JClp5V9XYKJYGb+OMoI
OW5Dva7ZPSLYZccPHkHmUXZao/2QCIa3yrcdR2acj3sq8JgIySrb3a2Qq9uX
iyvTiOAk67zNBdn29Y+JDZ/R9Vy6dSoY2fJxmMLJr0SIEVvpCkU289F1jKkn
AifPtqMPkI/ovvrJ306EGk2dyWhkjZawd7wE9Hn0Ip9kZLW3unTjMSIYhK5e
TEXe9YwlF05G/+82cDIdWfaMUwIXyqFGBzVpOchCNN2bazhIUJDU7vYWWaCd
VWLERYLkZEFCCTLfu1fUu3wkkOApNylDZr8l5sC2iQS3yjfOVCAz+aYMVmRJ
YJyhklOLTGe88tfbQQLG1oo3dcikDqfiW7tIkJfjXPgdeTClTXpRgwRx7pN3
m5B/7CxYO3eYBKe4Pz3/idwocF5f04QEmlTxwx3I31hifjfMSGBvrzX6G39+
VfdJUzYkYDsatdqFXGByvpnpToKjL2nl/ci5KuJr1FAOpuz+tW4QOUuoXdfr
Ggm2y3PYDiEn/9UrmgggQaEJx69h5HBP8VhqBAm01j60IyKHmbU3KsWgz4/s
ciUhh6g/YL/4lAQK2oMeZGT/xSlvUgoJXI98s6Miew8WvFZIJ0F1/vwhGvLV
r+fHLmSTIFTviRId2S2y3XrsNQl8tRL6J5Cdrz6IkS0mob5i/ZqBfNZSv8G5
jAQ2Dlt9MHy/SbzWGq4mwaXGiwwm8sGCB1sGf5CgqkE3aQrfr28593X+IsHv
zdeVppFL34eZtXaSQP15+nvcUrWhd6sGSCCp51gzg9xTz/68ZJgEXXzK+rPI
j1tDyvLHSUByu1COe7X7DilhggTP3ROfzyG/H1hhi5lE98vRwD2PfHn0tsT9
GRIkiXR64e5jBJ7wWSHBufb5vQvIFZz+706uJ8O5S4aPF5GvrZttPbKRDLMC
xgO4FTfeIOqLkKEpYkVxCTlB0mfzrq1kKJD7/Q73CRmWuqw0GTxmZWZwr91x
3VRCngwxHCF7l5F99noF8+wmA6/9pzzcO7UZSf/UyKAS0zyAe8TgSumsBhl2
tBlsXEE2N7k0PqZHBrFLpddw85hTV/sMyRA/1peKu8b6ovjvQ2RoyfpSj1vl
vPvxWlMy/D3GL7yKTHQjulaYk6EuOGU/7heXL9x5e4oM9nHqp3Gf8h5LzLUj
wyNTUgBu/gCXkhcOZJgQaknAXRc00hznRIbwOawUd+C982NRrmQYfOv+Azcl
xlEs8DIZzhTGreDOiBtUu36NDKPxlzb9Q7ZLOWvi4UuGry96FHFvyOh3cQwg
g/M7mg7u+pdngmxuk2H7pTJT3Hde/004EUIGjdUDZ3HvKzldfCiMjPZ39mXc
OdW2o+rRZAiokQjH7fC1a1kplgxGfaZxuDc1WotKx5Fhb2JkOu7mH39UxZPI
cJJn+BXu0N9WxzakkoGN7PAOt3ZvhzNXBhn44viqcTMHLW6vZJPBT2C2Dnf+
2M/46Tx0/ys7W3A7Uk++pb0mQ/Hrsl+4RZltjSNvyXCTO60bd9vMiZHed2QI
zZ7sx31/qXXp5wcyuJdXDuPWYzcVafxIhi8SbETc01wtKjU1ZBA42UbB/Zrf
xLi8jgylN3ZP4HYWajpf1ECG/lMKTNwS4sa3clrQ9djUsnDv7RL46fmbDN90
abO4TeM65faguXh7wppF3BcsU2/OjZDhdo3+8v/PV9Cl7ROVDGUfG1ZwF0cz
/U0WyShHefzDPcpzR7qblwJD6O3Hbcye7MvcQQGXvn//u3DhXQOvMQVeLAX/
78EbB64n2FIgX4BnFfdGVpuErDsFDA9H/3/+ncXxXpSrFFhXnjuH+9BVh29v
/SjQ31M1hdv8Rw3jaSAFTC9YTOI+u0t2s98dCsRtfcLA7Rn14ODpUApE6XjT
cPtRKVf0HlCgNZ1O+n89j51I2h5Jgfa+uVHcj/OLv3LEUICqGDWEO5VbeGL8
CQUcPV78/X893fzFmuIp4LpLvhN32fe/BwqTKaD2Rrwdd62cweXHLyjA8/tK
4//reS8zwTuTAkeVJWpx/x1ZW2v9kgJXWEKVuIkHPGharyiwc8OJYtxTGS0i
kkUUuLbpUy5uNjZVw3/FFPDTs03Fze/41HOkjAId3hue4N78eSbuewUF7pj0
huFW2Hq6Jr+aAgyOfH/c0Ldd2OsbBe5e2W6P+w9HxtvcRgpU9mgb4/bYKXV8
sJUCt5xoGrhXLDKIIr8ocDtOWgr305tSoSc6KUB73MSLWzEzY+v9XnQ9C+2T
+Pta3ShVWT1AgYA10j3/1wsxaaYykQKSQRbpuG9BZpQLlQIZ/NwhuAXdpRWf
MyiQcvvdOdwvYzK/drAoYPDRUBe3Trn0Ob45CogfTBLB3T6QuXBgiQJSW7In
8PrkyikTf/MfBca6jtXhjjkl00rmpsJp7nXuuGVvZ7lL8VNBwmVaA3dFtswa
O0EqzF4TY8M9wpLRaRCnQuTd7Ed4vfSXyO5claSCcGf3Sdz8RrLXNaWpkH67
XwD3viey+S+VqIAFk0PxetxckX1wYDcVmlI+7Md9jiA7JKxOhS3hRDJe38NV
5UTDdKjgdYMBuLfa5pR8NKDC87yocbw/lN6ROzFlRAWC4MaHuPt/yIU5H6eC
3Ea7T3g/uT6Tsz3lJBX8Lf9a4ObaKv/xlxUVqNvrh/F+pHZZnmXoQAWTIZsp
vF99f/byUYAT+v+FCl/c9h/llYpd0d+xVSbe7+7xKThtv0KFiKnXvXg/FFfP
XbK5ToXWwtbDuAtPKyTG3KCCUPKhQryfduUrtK0EUeFUar47C3//jirq9cdQ
wXm7ahzej2uu5nVvekaFv8cX2/B+fSpB0ed4IhViUhkcuO+MKxZUpVNhU/A7
a7zfb1qff5iVTYW3nnt98TyQr7FjWCmfCuEqulF4Xvh1b4d4cjEVHhnrZeF5
wu11/rufZVQwjB/OxPPGYseOkzyVVCjNc0vG84icjNID/1oqhHm6eI0hB3xR
mrbuoMIdYdtSPM808npfO9xFhZYko1A872y2qqJr/EXnWyYeG0CuGjcZ3zRC
hRGnupq/yMt8l7t+TVIhemvSgU68/p0qs6ydocIuc4kWPF+9eLHcVryAznds
+3E8fxmoPWp4zE4DpxxBlXbku9ZvKk5spKFcvvlWI3JH2qyGvggNiu30yuqR
ZcgGJbs20wDMkka+IX8LbH+1TpoG5VHm2/B8yJXBTGlSo0HLGNf6SmQbipZY
pQYN0kO0aOXIeep3n+Vr0aCH7cgnPG8af98Y/dCQBm2BhnrFyJFU9aDD5jTg
v/4+IxevL3tvLWicokGrY7M4nmeVg+puyNnRwFT5+L1M5NYNp66ucaKBf2uH
Cp6HBfbdcKz1okHdoY9/Y/H9fOdTX7EPDThUWYRHyG8bOO0y/Glwy0OoJxKv
t/YJ5sHBNKBuNk4KQ34W/OGA/mMaTE/wnvFHHmv892nXMxoUfBcY9UHWEDLW
kUykQcRhD/tr+P7K6VFfSqMBKeuY6EV8PzYvyFa+oUGZHu+n03i9Fdbj2tdG
g3PwLnE/8g2FzKmADho8cLJLUkc20+Iaru5Cz3fp6t3deH10+Pnx0BANHI52
rJNFdsl2vX6KSYOTH8MX+PF++b7pXNI0DTqqf+/jRhZuUDHtn6eB0EETO3bk
euq8gis7HczVYs1m0Hy0U/1Rv48QHbTcjOf7kNccYjV9EKXD8t+qs53I/da2
H5Yk6HDn7nJuG3LMTemn92TpcKSmYvQL8uSX90efadDhTfWTlWx83jo5WFpq
Q4ccs4QrrshPzh/MmLWnw/VFKdoZZE+f/Ec6jnT4uin0qBWyZKK3x1d3Oths
v/P8AHLwINe2jgA6pMia5OHz5ZErqhGTKXQwVohf24rm0+3BcX770ulQ12xs
XIs8H7vgcjObDqKfIi6UIxeU1RmwF9KBbdhGOWMFn99tpwU/0cEo8P7f68h/
IkMc1YbowJkWenM9Msds01mnUTpw7FS8xIasdn6TQyyJDhX7HdWn0HwdvT/X
jonR4ZuJqmEP8uGxFotitgnYM9pwMgO5XF/skJrMBAgr9kwqIo/lOxk5KUzA
jr7kTeLIQsIFhrE7J6DA6yInD/JVqp4+U30CnnY02pKWUP9KdNYsPjgBGt4p
RdnIicyiHWoXJiD/4IUfQsj1Z+YUnC5OQLWw9vd/iyj/1BvKx16ZAP07Dg/p
+PcVL35LM29MQPG5LRe/I/OYLEgUP5gADzPVJF/kgOxD69XyJyDS7otF4wKq
lzZ9k6q0CVi2ffLEaB7li1H6TzFsApKytceUkFWurb79x5oA/rL3K4LI7JHS
V9sX0fVrkO4NzqF69smdepWPAerMM3/8kGflpkeKlBig4/rMIHUWA0IJ59f4
3QwQNAvrCUZuNhDLDNrDgIctGhouyC/sdBxPaDNAaCxKVQn5UHRIH92YARqY
4O7SGdR/p/j/KHswgPJCcunDNAa3Q7a923SZASLnrSITkd3Wqz1d8mLA1XLJ
Lj9kbUUr8xZ/Bmj2imdpIBPsk1s9HzIgfzSGo2gK3c9X+e+vchlgOTT5PJaF
QUusQbniOAOcGRhBionqG/EylyuFAaVuh/9OYSjf6T63yZhggHBNp389chxx
blZ8lgExJ1gvPJEd9Er283GjuYkuH/mGgeZdkmwlfQeaG/tSQ+UmUH0B3uqS
y+i5mxqyvlPQ/Bi3n59xDdWVAOu0aAr+fcoFh5030D7gIxIskbvivi5nBaEc
gH1WHCRjkEa9pR8Xg+pE+L5ijISBagLjs18xmgsO2xxfHUfrPfG7Vhfdp9/S
VFb9MOo/rs0sVbROBuxZfGHIhX1fZOXQPivKsuI7gLx2vMuIi4MJIy9O/6wk
oDz+uy6HwcsE5WjxK7lDKI8Xv/Co2cwEraCSlEsD6D4uWjCdtJngcWHWIrsH
gy0vW3nO6DLhpd06fivkUsJRaWt9JuSNTFhyIBNsDSyPHWCCNd+H+47dGOge
US7bc4wJZSLPbwh3ofuV4QzgOM2En5d61Tx+Y+DUX/EvO4AJVRflX5X9QPP5
oVypuEAm3HpOVbdFHi18diDsNhN4uM4eXGhF6x109Z5rCBMKX/6b1UW+vE2O
Wz6cCQ4aOhkfm9FzdnoskJvIBEmb/NLsBgxixy5szS9nwrGC4efCtag/mVoZ
JFUwIZSn1CHvC+rP7w0dw6uYUF/xL1kbOeH+lkyPz0xorfkV7lCD6rHCLzml
eiYUhUappH5C+91Db1dBJxOMba6d4qhCeYAupFs4zQT1crEh91K0fytj4upn
mfDUKKd9sATt9/t8DMI8E5YvFW62Ru7axpEpssKE03+zKgCtI918kiuYcxIM
d9uIrX+D5pP37R0WopNwULaMPfwVBr5B0Z5z+yehPNuIsJSO8sAxnm8bdSYh
8FuC0VnkYNGwrbv0JuHL9AHWpzTUD9/e+ulkOAn5Z2S0gl5gkDnsqdlsPAnf
rr63mkpBefzwMY4Xpyeh+smU/6d4DJQEuFKMbk2C8nZTWn0kqm+08VGtoElQ
k3nluxWZ2fh9t2rwJIz3+dr5RKD6du9+7ZZ7k9CTqKGyNRzd78JaynTkJBjL
nee7eB+t59garbyUSdhlsP/IcDAGSVXsXeuqJsFjc2OPhS+qR+4rGzvnJyHS
tsBA7gx6v/Ivxc0sTqL88eiYvj0GttReUdGVSTiRmRRkfRqD3CvlW2zZWcDm
M+x4zxbVW18v+V5eFvwTNVnbaYXml7vDWgMSLMiXSLl/0hTlmeffHcf1WOCX
n6mfrof60c9HRTMhLGhP+lSfJIHeE1knKVYoC+wnDGuiN6Pjb6g/Y4Sx4Otp
Ki1YHOWRLd0BpHAWhK5vI7iIon50QepQbywLTL9/UJcRQvljofRvdQYLynti
jwTwonlduoc77AsLjjkmlYbPMcDcW8ZZiG0KbHweHlL9xQAbA6O9JbenIIbS
WSh2mwFuW5YUB9dMg42yg4abIANoqhX7uEOnocRscP9k6gQEWgu4f+abAbec
hw7KG1Adf4mVzcXOQKSC47Ypbzo47O7csltgFo5LxZatQblAqN4qlxk/C+nN
/oWbN9FAP6HrWLHwHAhWjgnWWVBhw5MxXlbsHJA8LwUGobmPlho1USs2j3LI
V0XV52TQJ2hSH8XPwyOZ1hSfUhJ8Ha5Or0mcB4lcv0rjNyQ4MmpkPZk8D/y/
y6mSBSQwJ5p9OZU2D9KPpR98zSSBK90tYUvePKgVtuRzPCFB5HyC0auKeRho
shmy8SJBl+Bcyre+eegT36xkoUyCM0JB5rMD86B7Jm83ryIJCJvWcO0gzIPG
TnezLzIkoIhuuB41Ng+utMpxZQkSLEsqHrWcmIeOB56+8zwkkFGynRpanYe7
Ujfs3IlEyNs5kL+RfQE6hb8f3jhChF27XM4dXLMAAm5Wp6oGiLBP1aspl3sB
CKs+XbydRDDe9zD9iuACbN/T6p9WR4Qfmuut04UWgLJRJOBADREstZ7x/RJe
gBOG6qmjVURw0E2/obF5AdKi91vIlxJhWE9e2W3LAqwKN4x8KyKCm8FrQuLW
BSituZns8ooIVNiT0LR9AZpys2+wvySC14EPx5ekF+BZqb9/WgYR/gMs34Ic

     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0nk81VkUAPD33q9shUh6tpSxZIvsspxfClkz1pZJjykJlbElZGTakElC
GELEyCQ1lLQRhbG02Cp7Idl6lvd+91nn9sf93M/38zn3nM8592zxPuV8lEGj
0fLx+XEzvv3053DEeYg2rs14asWGg9d9EvtCLwDH7nalrC0bys2Kr3QFXoSp
D9VpUQ5s8EneltDocxnaJkSTTFzZ0GRifPmu8xWIHyCCH3qxwdZapWbHhmRQ
azP/lBPFBolM0yeMyQyouFaqQz5gQ3vOvx42rQVA+24QfU92Gtx0Y/pbvz6A
/7ofJYSsTANTxC9/x4cqsM/K0+tumYHbNgTziFMNHGbeZX5KnoWrEtILMnGv
wNe+tsXSew6U/nIuLD/TCCsivoNv5Diw5o7LyefPW6DhzaGb/p85sIHfI3GC
egtei2vmWrK4MC+Zau038R7y6G3WI7sp4Pc3TNq8pgNqY5oMNDkUjGeNmdav
7oKsQLGI0BQE/mf+OxjG/QCqz48fEtbgwfpMEUFPsW7I9nx8fqqJB9fSf5U2
EOiF5RjvdQ6H5sGwW7bKSrUfaBP2zo7UPJgdoY9o5Q7A9LO80LCEBWhoXMwt
zxiEeY9Atu/6RfD9WS3f7e/PkNefePpLwSLMWrO6pgq+wGfXG1Gq6kuQzGpw
Lng4BK551T6WT5bg91Yrfs/aYSh3su6KtF4Gj5KWSdHnI9DsIVqh2LgMu+5c
lOlr+QrCpkdKXFxXQJq5J7KgaRQUWdWyle0rAN3yEqfqvkErq3nTsa00Mrxa
dc7t/RhUChxjnvWjkVkSpnz6reNwUW/s8etCGtkeH3NYu38C2gtdJ51HaOQB
9+5prfFJiArvv5SpQCebkswfqgxPwWfeQljZPjrpNNlWYzL3He4Y1h99kUQn
WT2VK/nheE9kvooGvKSTLybETf6ZY0NfdkNjMJtOqorwZVpEToOyJ7mDlGeQ
AseWxDrQNNDWe+R2WTPI6beJdzkxM+BIzxs4FsggnYIUvMVps2CUsKLCuM4g
3c0tdO9HzcJDpWMu3fcZpI/MgkofMQfBSkJBX98wyHGtSn3+2Dko3cmqbx5l
kBFuIseeC3FgW6TOm0AaQZbd/l5OJXEAxUPGrxIE+cYkIX4imQPfoFPib+yp
d8qswRQOtIvZHZ3AVl8+tKYpnQOBQePnQzYQZKF7s9fNXA6wNVpfxEoS5F/8
xSKWZRzgCnio3WAS5MXj3r7Jbzhw0vD3VbmyBPmLZoeMpggXvNfqHdZVJMgX
Kiuq9uu40JpdpxaEraCgauQvzgWr4CevyrBHJc+6FktyoT2W5qepRJDBNKVE
JXku1OmPBigqE2R8W8iynDYXtkipHxHcSpCPzkgMijhzwVB527576gQp/tql
kJ3KBabEGccTOgTp8m6wYPwGjlfO+pSFndJzKn8kgwv7ctzNm7E3zCbk9mRz
oZRRekVNlyCZm+syG25zIa6oxHIYWy5C72puBRdiNAktF32C3LptQ7hTBxcQ
N0dUzIggfY3zw+y6uHC7QiPLBLt49/ZQq49c8HymSffBVjvoEGTay4Xf/ihy
rcLWvHwhYOswF04b6St4GROkzmcOi8bhwiqhuENFOwjSLK3TpkyCAp+bvbGS
Zrhea6dTniQFt3qunzDBluDr8khmUnC5ZJ0uC3sstOtoiCwFDTmhjsXY6W4f
zhkpUvA69Vq9sTlBzkh8elytS4GjtnqDC+D/u96r+s6ZAtbcV7WAnQR5ralX
+6Urjm/MOnMFO4roM/zXnYIrQq35/2C7BPdZph6g8P48iZ/Aprn0e+33psBz
aF++nwVBHhAfzBj8jYL0ectVrF0EKXptSHAmiYJdNWSxliVBmmsG2whfpyDE
36DZAftkIz1uayoFuWmzdf7YzXR5gcMZFDTq9hoWYccH7edrzqMgwl9KUdaK
IPlcWxmFDyjYfSlaZhl7SbJyYX87BZt92kpv7SFIjX+tTEI7f8xHP+0J9i97
OyKSPlAgco/p2o5ddWmG97qHgricEJfVNgQZjjSQ7jAFe5OZXkex5z7mzQlz
KZhbdfWpnC1BjmclTNZsRFAgn5J2yo4gkU203GMpBA/s3vLFYvNRgQ5lMtjc
QJcU7M0/u9+9KY/Atm/yXCW2++otJyJVEHSpG+qtYFefeDihZ4igTH6JfcGe
IFuki2U1jBGIt0urpmF/qv/L/icT/D7uvVkhNmfLuX/EAMHbCNmlV9hqnXYB
U1YIhioC2wgHvL/mg+NF7gjq/R4NhmPnjbfJ5OxDsDqyf+gidmn6a7u0Awg8
H72tS8FunCkpOe+JYDFLSqYMe7kwzN/LB4GbUNKWYWxf0bXj0mEIlN1/Tt/j
SJChT5elxcMRMLssj7tixx6fthWMQBCgobGRhZ1d23mHOovgZlqX4Gns96fz
/NovIMirHbXNxzYbMBhLTEXQ6vzRjIP9cvBpzosbON80a2EF2+qLhdt0BgJn
gyOJQnsJ0mnEsdr1JoJKw9Ft8thHJnzSZIoQRLlp+lphf5ucsHMoRqBd/rFx
L/bJ70H030sQ0Eo20PZjn56JDvh8D8H8VcsxP+x4lGZRXIngsnptxRVs0XlZ
9KkKwes4tacp2CkLt+6ufYbn16BzIws7e7mUGViDQOelZlMJdtmq+imD/xBU
GzPUG7D1+RwKfJsRCMbc7mzFruJv25/ZimCjBXLvwK4V6q9beo8gtupBxyB2
5zoqs64bAbuwsAlhHxQ/68TtRbB957TsMvbAeoJv6wACR5KyIJxwf5KivyUM
IRBI2SEsjH2Smar8bATBMivivhj2jJRMz9Qozv9HhJok9qKsirXzJIIYi+rM
TdjnNt1d/OM7gjCaQLICNt9m3QcV0wim3CU8lbFFfwI5KS6C2vToEE3sFMVX
720RghTHvufa2Exlu8tR8wjatvP16WIrqHrM9i8jKM++n2mMXaTW+7cYnQcF
GQZGptgaGr967iJ4kF188Y45dpnmt/Whq3lAC7g1TWLra51qLOTnwZ6QeOFd
2FXanOgPgjzgt4Pl3djmOpF6Qmt5MHCiptYKu1aXPmYiwoOkvWKee7D36F/K
ObGOB0MeWi022C0Gwm454jx4+UVGzA7b2ei60DsJHmyy7FK1x+4ylqpmbOTB
qlqvjQ7Yv5jkhOpJ8eDPjCcff3jQVEndR4YHE7yhQEdsH/OSgRtyPPAU6uv5
4THYntYozwOTkUK5vdindj6yW9iC62eD7g//D/rkpt0=
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0ns0lHkYB/AZ4zUiJhqFmclEjhlbTTeS2/NDpxG7HQ2TPSlbjSZlo5uS
arOdJZFCUamznEhyOVGS0k6ULpNl25bYda9hFjOZGXN5X0N29o/nfM/nnO9/
32fpniTBXjMSifSd6f5PszG3SyOpv4Cn+namnquCmCvinIHkdPiocduJLVdB
fcC9i92HMqAsVrDVYaUKxPkrs6XiTNC3Mgp81qigzW9DZo3gIjTd8Th80VcF
YXyPFl+HfGD3f6qLD1cBvci/yUx5AxLlXAflQRV0Fj+M3txRBuerwyy1j1Qg
XJs22CF/ADJ+Q6J1rBocbQ+U+vY8Be+nafm/W2jgzmaKY1xEC/RabjgSU6+B
y3RnI+PCK9jfXDvSfXwK3G8KyutPSoGTcXOJjKcF68rIRImkHR5urOlwmdaC
AzU6R2F4Dz3Dmu6rzTqYXlTAP6D4AAUrPDO2puiBmrA+l23dBavazqxT+Btg
4ta4/xusG6YTArt4agMknHwXc1zfA849OaUbf8VhYZHtvFi7XhDxri7OFhKQ
d13k7G3ZD62ixNXWMwSs72U+3cQdhJ7d/ISjVdMQEEce5ZUMAW5jGDsjMMJb
6UxJ/Y1haK+VayVjRojf6lkqrPgE14PCfqJemIEp/q7uL2Wf4d07F+Yxp1nI
3/VWUNYgA3ZtZFxp3Syc7dhEjX05Ajd116ppIV8huqpdSZOMgogtsE5/8xVC
KjMYA+1yGC1RHLOKmgNnx9BTZW3/Qnz5ellD5xxArws9qXUMRpXGwAQOCaU0
c7XCD+Mwkl4paTtAQrfo/hZeHRPAszu9l1RBQp1ZaT+sGlSArqXr/v0xEtq+
rVfNm1DCnknhs1IuGbXlBjZ4jHyBnm8DYDSOjCKUf7X4aSfhk70qva2MjHb1
Nc6Vpqjgdeb1JawhMnqusPer1pp2l7GK1E5miGtrURR8Sg0+9/4RhX5vhiz3
zdp14Wp4z3y7n8gzQ+r3OTW6NA047ox/0v+HGYo44rrHnjQFt0Np8s+WFLQt
MHht3ekpWOvKSRwBChIzjB4DFC2sPBdiLkiloAleoxf1nBaasnxdD92noFSh
7T6JlQ6y+lh9HDkF1d6ZrDfk6sAtL2hnNcMc7VjRxVhhq4dH2g1SUZg5sn8d
Wa4q0IMupeOVd6o5Cij8uLmWbgDeYcWygVJzRMuTzdPkGkBmMT/yitQcTdzK
VrYsxsGFLFIWfzH1h7zHcwpwgAbsoL8Nhl4MPyt+fg0H5/lyZZPJmz4HC9U3
cJC8sGL62WIoYnRLc5Tpz2hWVWd9aBiKU4gLGXdxeFIXvptnh6EsvDD4XiMO
LM5sso0Dhj4uMBS19uJwiQh1z2JiKMb+TIS+H4eqn/lOcyYPLaRYcIZwyIhk
Pj7KwtDYItrhbBkOyT59kzFLMDTD9OALlDhczftNwGFjyJUbPTX4FQcGK/p1
rRuG7nr2V9iRCQh5QA1nL8PQ8uWi2BAKAcbO/hOXTfbiJUnLqQQwGZelP7pj
KNTrfPHBBQTUqOlhbh4Yave2ERbbE7DFhWyTa7LA54rVn3QCPmj8TsyYvMOv
OHmdEwF/x60J6uRgaNjf/Rsxg4DtqY0lwMWQOLBq6BqLgJdurncrTR6H1YVS
FwJmy6OiHDwxlBT0ONy4lAD2Fq+Ksyb/B6H4QT8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6000000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0.01, Rational[1, 2] Pi}, {0.7071068127966832, 
     2.6457512990252923`}}, {{0.01, 1.5707963267948966`}, {0.7071068127966832,
     2.6457512990252923`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.799926823198628*^9, 3.799926855639451*^9}, {
  3.7999269101227083`*^9, 3.7999269212826567`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       RowBox[{"4", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cp", ",", "2", ",", "100"}], "}"}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{"cp", ",", "2", ",", "5"}], "}"}]}], "*)"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Green"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\[Theta]", "]"}]}], "Input",
 CellChangeTimes->{{3.799658545036769*^9, 3.79965871243902*^9}, {
  3.7996587436964817`*^9, 3.799658756820999*^9}, {3.7996587971285057`*^9, 
  3.799658799459504*^9}, {3.799665679583377*^9, 3.7996657490006933`*^9}, {
  3.799667877740816*^9, 3.7996678784026937`*^9}, {3.7996679926933603`*^9, 
  3.799668024746744*^9}, {3.7999259002647047`*^9, 3.799925947449154*^9}, {
  3.799925983835739*^9, 3.799926028242324*^9}, {3.799926061716634*^9, 
  3.799926062349317*^9}, {3.799926097214135*^9, 3.7999260980118856`*^9}, {
  3.79992635393933*^9, 3.799926381522091*^9}, {3.800968541742182*^9, 
  3.800968596569078*^9}, {3.8009686287404747`*^9, 3.800968651537953*^9}, {
  3.801049591985168*^9, 3.801049592474407*^9}, {3.80104968135017*^9, 
  3.801049756476425*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.018000000000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{2, 100}, {0.02012120549204588, 0.08126149081521683}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.799658647312563*^9, 3.7996586693434*^9}, {
   3.799658717938436*^9, 3.7996587610099497`*^9}, 3.7996588006359043`*^9, 
   3.799665681832313*^9, {3.7996657220604467`*^9, 3.7996657499828*^9}, 
   3.7996678796595078`*^9, {3.7996679943962183`*^9, 3.7996680257910213`*^9}, {
   3.79992590155544*^9, 3.79992594807071*^9}, {3.799925984930197*^9, 
   3.799926029496564*^9}, 3.799926063582836*^9, 3.799926099256332*^9, {
   3.7999263570186787`*^9, 3.7999263825247183`*^9}, {3.8009685784757013`*^9, 
   3.800968597866283*^9}, {3.800968636457011*^9, 3.800968652748317*^9}, 
   3.801049593573647*^9, {3.801049684076356*^9, 3.8010497571764517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cp", "=", "100"}], ";", 
  RowBox[{"\[Theta]", "=", "0.1"}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SqrtBox[
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "cp"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]}], 
   "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"cp", ",", "\[Theta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.80096843048352*^9, 3.8009685089810343`*^9}}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{{3.8009684685092983`*^9, 3.800968509890831*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.025435061610284082`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8009684685092983`*^9, 3.8009685099102697`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"4", "-", 
  RowBox[{"partite", " ", "GHZ", " ", "state"}]}]], "Code",
 CellChangeTimes->{{3.8009635936400013`*^9, 3.800963632853443*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assemblages in 1SDI", "Subsubsection",
 CellChangeTimes->{{3.798531845388616*^9, 3.798531849573454*^9}, {
  3.798531885420947*^9, 3.798531888119549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s1000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S1000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S1000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S2000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S2000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S3000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S3000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s4000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S4000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "S4000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"(*", 
   RowBox[{"s100", "+", "s110", "+"}], "*)"}], "s4000", 
  RowBox[{"(*", 
   RowBox[{"+", "s111"}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}, {3.800963733208061*^9, 
   3.8009637892349033`*^9}, {3.80096382049477*^9, 3.800964014084963*^9}, {
   3.800964052659293*^9, 3.8009640527484827`*^9}, {3.800964130069919*^9, 
   3.800964158888356*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0", "0", "0", "0",
       "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", "0", "0", "0", "0", 
      
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.798532105810561*^9, 3.79853212192656*^9}, 
   3.798532161864356*^9, 3.7985321933340816`*^9, 3.7985326677362347`*^9, 
   3.7987018046859293`*^9, 3.7987018478082*^9, {3.7987019363326683`*^9, 
   3.798701966049646*^9}, 3.798702357789977*^9, 3.798702427611555*^9, 
   3.798702458817813*^9, 3.79880023561884*^9, 3.798953875212852*^9, {
   3.798954308311767*^9, 3.798954321041363*^9}, 3.799364955090198*^9, 
   3.7996372246198997`*^9, 3.799925380132316*^9, 3.800963314293954*^9, 
   3.800964016189343*^9, 3.800964053276078*^9, {3.80096413096002*^9, 
   3.80096415936726*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1000", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g2000", "=", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "4"], "0", "0", "0", "0", "0", "0", 
         FractionBox["1", "4"]},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {
         FractionBox["1", "4"], "0", "0", "0", "0", "0", "0", 
         FractionBox["1", "4"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g3000", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"g4000", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"], "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", 
         FractionBox["1", "4"]}]},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", "4"], " "}], "0", "0", "0", "0", "0", "0", 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.798701786745184*^9, 3.798702059649722*^9}, {
  3.798702090628312*^9, 3.7987022604384537`*^9}, {3.798702290940653*^9, 
  3.798702483468904*^9}, {3.800964031648696*^9, 3.8009640492142477`*^9}, {
  3.800964085832489*^9, 3.800964209347185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P41SGHZ", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K0", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"s2000", "+", "s4000"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"K0T", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.800964325468355*^9, 3.8009643420481052`*^9}, {
  3.800964613591378*^9, 3.800964650046238*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.800964345284918*^9, {3.800964638195528*^9, 3.800964651328967*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"K0", ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
    RowBox[{"(", "\[Rho]g4", ")"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"K0T", ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.800964701107184*^9, 3.800964744364935*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.800964745688876*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"L0", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], 
         FractionBox["1", "q"]], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"L1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], 
         FractionBox["1", "r"]], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"L2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"Tan", "[", "\[Theta]", "]"}], 
         RowBox[{"1", "-", 
          FractionBox["1", "q"], "-", 
          FractionBox["1", "r"]}]], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.80096481676285*^9, 3.800964826198557*^9}, {
  3.8009648568951483`*^9, 3.800964856971983*^9}, {3.800964933960293*^9, 
  3.8009649341238823`*^9}, {3.800965025031869*^9, 3.800965043521213*^9}, {
  3.800965074009346*^9, 3.8009651243218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"L0", ",", "L1", ",", "L2", ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
    RowBox[{"(", "\[Rho]g4", ")"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"L0", ",", "L1", ",", "L2", ",", 
      RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.800964838120957*^9, 3.8009648396751966`*^9}, {
  3.800964879764748*^9, 3.800964898456211*^9}, {3.800964940245702*^9, 
  3.80096494718095*^9}, {3.800965047739443*^9, 3.800965055660067*^9}, {
  3.801175845813951*^9, 3.8011759039642677`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801175879105331*^9, 3.801175904490056*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"sided", " ", "DI", " ", "for", " ", "GGHZ", " ", "state", " ", 
   RowBox[{"(", 
    RowBox[{"n", " ", "=", " ", "4"}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.8009651712766743`*^9, 3.800965187127286*^9}, {
  3.8011737278383837`*^9, 3.801173754240843*^9}, {3.801179481562591*^9, 
  3.8011794816298532`*^9}, {3.801180863418942*^9, 3.801180863559226*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "0"}], ",", 
    RowBox[{"l", "<", "2"}], ",", 
    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "<", "2"}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], "i"], 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"1", "+", 
                 RowBox[{"l", 
                  RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4", 
          ".", 
          RowBox[{"ConjugateTranspose", "[", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], "i"], 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"u", ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
           RowBox[{"S", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}], ".", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"u", ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"d", ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
           RowBox[{"S", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}], ".", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"d", ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"\[Pi]", "/", "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Clear", "[", "\[Theta]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pgf", "=", 
        RowBox[{"Simplify", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
          
          RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
       RowBox[{"Pgs", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"(", 
              RowBox[{"2", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], ")"}], 
           RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gD", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Pgs", "*", 
           RowBox[{"g", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}]}], "+", 
          RowBox[{"Pgf", "*", 
           RowBox[{"s", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}]}]}], "]"}]}], ";"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"l", ",", "q", ",", "r", ",", "i", ",", "j", ",", "k"}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/YfX541m0BvHrpc6DFpA2qbtJAuIfhcQwwGifTqE
eUH0nqcKgiD6l/ZRaRA9S6pIE0SLM3YbgejanxKWIJrD08QWRO/wTnMC0dMC
tnmCaDsD/UgQXdExJwVESyhsyQPRswV3zwTRHfYK80F098yny0H0BNHHO0G0
3y/xgyDaI//EGRC9UyrUTBtI/5MqsgLRElV7LoLoda2Tr4DobQxht0F0ks03
ML3hdAunDpA+NSWHB0RbrI9bA6L1+h9sANHn2ENYdIH0MuftMiC66WZEJIg+
sPBzNIhmFm9MANERyVNLQTQAdaeE8g==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"g", "[", 
   RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80118040309548*^9, 3.801180413675795*^9}, {
   3.801181110938692*^9, 3.801181122083819*^9}, 3.8011864392128057`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8011804146280327`*^9, {3.80118111248422*^9, 3.801181122531014*^9}, 
   3.8011864398395147`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assemblage", " ", "fideity"}]], "Code",
 CellChangeTimes->{{3.8011759953630123`*^9, 3.801176004055703*^9}, {
  3.8011760894549437`*^9, 3.8011761034438343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg11", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801179239723168*^9, 3.801179291352203*^9}, {
  3.8011804759247503`*^9, 3.801180553237626*^9}, {3.801181130562378*^9, 
  3.801181144990155*^9}, {3.801181206256137*^9, 3.801181211899199*^9}, {
  3.801181252689066*^9, 3.801181260989092*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179313075334*^9, 3.8011805564051456`*^9, 
  3.801181263171875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg12", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8011791665432453`*^9, 3.801179225270756*^9}, {
  3.801180563512278*^9, 3.801180633121704*^9}, {3.801181269406196*^9, 
  3.801181271755023*^9}, {3.801181335827292*^9, 3.801181369224983*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   RowBox[{"4", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.801179316240815*^9, 3.801180635279974*^9, 
  3.801181370638253*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"sided", " ", "DI", " ", "for", " ", "GGHZ", " ", "state", " ", 
   RowBox[{"(", 
    RowBox[{"n", " ", "=", " ", "4"}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.8009651712766743`*^9, 3.800965187127286*^9}, {
  3.8011737278383837`*^9, 3.801173754240843*^9}, {3.801179481562591*^9, 
  3.8011794816298532`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "0"}], ",", 
    RowBox[{"l", "<", "2"}], ",", 
    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"q", "=", "0"}], ",", 
      RowBox[{"q", "<", "2"}], ",", 
      RowBox[{"q", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"r", "=", "0"}], ",", 
         RowBox[{"r", "<", "2"}], ",", 
         RowBox[{"r", "++"}], ","}], "\[IndentingNewLine]"}], "*)"}], 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"i", "<", "2"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "2"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "0"}], ",", 
             RowBox[{"k", "<", "2"}], ",", 
             RowBox[{"k", "++"}], ","}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"l", "=", "0"}], ";", 
              RowBox[{"l", "<", "2"}], ";", 
              RowBox[{"l", "++"}]}], ","}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", 
             RowBox[{
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"l", 
                RowBox[{"(", "2", ")"}]}]}], ",", 
              RowBox[{"j", "+", "1", "+", 
               RowBox[{"q", 
                RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "i"], 
                   RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                FractionBox[
                 RowBox[{
                  RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "j"], 
                   RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g4",
               ".", 
              RowBox[{"ConjugateTranspose", "[", 
               RowBox[{"KroneckerProduct", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "i"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "j"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"l", 
                RowBox[{"(", "2", ")"}]}]}], ",", 
              RowBox[{"j", "+", "1", "+", 
               RowBox[{"q", 
                RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", 
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{"u", ",", "u", ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], 
               ".", 
               RowBox[{"KroneckerProduct", "[", 
                RowBox[{"u", ",", "u", ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", 
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{"u", ",", "d", ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], 
               ".", 
               RowBox[{"KroneckerProduct", "[", 
                RowBox[{"u", ",", "d", ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", 
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{"d", ",", "u", ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], 
               ".", 
               RowBox[{"KroneckerProduct", "[", 
                RowBox[{"d", ",", "u", ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", 
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{"d", ",", "d", ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                  RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], 
               ".", 
               RowBox[{"KroneckerProduct", "[", 
                RowBox[{"d", ",", "d", ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
                 RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"\[Pi]", "/", "4"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"l", 
                RowBox[{"(", "2", ")"}]}]}], ",", 
              RowBox[{"j", "+", "1", "+", 
               RowBox[{"q", 
                RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], "=", 
            RowBox[{"s", "[", 
             RowBox[{
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"l", 
                RowBox[{"(", "2", ")"}]}]}], ",", 
              RowBox[{"j", "+", "1", "+", 
               RowBox[{"q", 
                RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Clear", "[", "\[Theta]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Pgf", "=", 
            RowBox[{"Simplify", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"(", 
                 RowBox[{"2", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
               ")"}], 
              RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
           RowBox[{"Pgs", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"(", 
                  RowBox[{"2", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
                ")"}], 
               RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"gD", "[", 
             RowBox[{
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"l", 
                RowBox[{"(", "2", ")"}]}]}], ",", 
              RowBox[{"j", "+", "1", "+", 
               RowBox[{"q", 
                RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}], "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"Pgs", "*", 
               RowBox[{"g", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], "]"}]}],
               "+", 
              RowBox[{"Pgf", "*", 
               RowBox[{"s", "[", 
                RowBox[{
                 RowBox[{"i", "+", "1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], ",", 
                 RowBox[{"j", "+", "1", "+", 
                  RowBox[{"q", 
                   RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0"}], 
                "]"}]}]}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"l", ",", "q", ",", "r", ",", "i", ",", "j", ",", "k"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.801173858376707*^9, 3.801174017403508*^9}, {
  3.801174054297636*^9, 3.801174082884879*^9}, {3.801174120610388*^9, 
  3.8011741530280437`*^9}, {3.801174238161618*^9, 3.8011743475657473`*^9}, {
  3.801174420343883*^9, 3.801174472780455*^9}, {3.801174505633915*^9, 
  3.801174547196743*^9}, {3.801174605697337*^9, 3.801174729474639*^9}, {
  3.801174820891659*^9, 3.8011749016289177`*^9}, {3.801175245845899*^9, 
  3.8011752890077553`*^9}, {3.801175359174993*^9, 3.801175503096382*^9}, {
  3.801175560749305*^9, 3.801175654263584*^9}, {3.801176498659512*^9, 
  3.801176531565795*^9}, {3.801177741889904*^9, 3.8011777646100683`*^9}, {
  3.801177818687587*^9, 3.801177823694871*^9}, {3.801178188149864*^9, 
  3.8011782113931627`*^9}, {3.801179490958889*^9, 3.801179527017478*^9}, {
  3.8011801946259527`*^9, 3.801180389727008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"gD", "[", 
   RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80118040309548*^9, 3.801180413675795*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}], ")"}]}], "0", "0", 
      
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], ")"}]}]},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], ")"}]}], "0",
       "0", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8011804146280327`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assemblage", " ", "fideity"}]], "Code",
 CellChangeTimes->{{3.8011759953630123`*^9, 3.801176004055703*^9}, {
  3.8011760894549437`*^9, 3.8011761034438343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg211", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "3", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "3", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "4", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "4", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "3", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "3", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "4", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "4", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801179239723168*^9, 3.801179291352203*^9}, {
  3.8011804759247503`*^9, 3.801180553237626*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179313075334*^9, 3.8011805564051456`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg210", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "1", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "1", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "2", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "2", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "1", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "1", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "2", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "2", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8011791665432453`*^9, 3.801179225270756*^9}, {
  3.801180563512278*^9, 3.801180633121704*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179316240815*^9, 3.801180635279974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg201", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "3", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "3", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "4", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "4", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "3", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "3", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "4", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "4", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80117910049865*^9, 3.801179150423036*^9}, {
  3.8011806487859087`*^9, 3.801180702791993*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179321722335*^9, 3.8011807054525223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg200", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "1", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "1", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "2", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "2", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801178867632208*^9, 3.80117891964879*^9}, {
  3.801180737465704*^9, 3.801180793002054*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   RowBox[{"4", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.8011793297094584`*^9, 3.8011807985889072`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"3", "-", 
  RowBox[{"sided", " ", "DI", " ", "for", " ", "GGHZ", " ", "state", " ", 
   RowBox[{"(", 
    RowBox[{"n", " ", "=", " ", "4"}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.8009651712766743`*^9, 3.800965187127286*^9}, {
  3.8011737278383837`*^9, 3.801173754240843*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "0"}], ",", 
    RowBox[{"l", "<", "2"}], ",", 
    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"q", "=", "0"}], ",", 
      RowBox[{"q", "<", "2"}], ",", 
      RowBox[{"q", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"r", "=", "0"}], ",", 
        RowBox[{"r", "<", "2"}], ",", 
        RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "0"}], ",", 
          RowBox[{"i", "<", "2"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "0"}], ",", 
            RowBox[{"j", "<", "2"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "0"}], ",", 
              RowBox[{"k", "<", "2"}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"l", "=", "0"}], ";", 
                  RowBox[{"l", "<", "2"}], ";", 
                  RowBox[{"l", "++"}]}], ","}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1", "+", 
                   RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"j", "+", "1", "+", 
                   RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"k", "+", "1", "+", 
                   RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], "=", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{"KroneckerProduct", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "i"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "j"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", 
                  "\[Rho]g4", ".", 
                  RowBox[{"ConjugateTranspose", "[", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "i"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "j"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"s", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1", "+", 
                   RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"j", "+", "1", "+", 
                   RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"k", "+", "1", "+", 
                   RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], "=", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "u", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "u", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "u", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "u", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "d", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "d", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "d", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"u", ",", "d", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "u", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "u", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "u", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "u", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "d", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "d", ",", "u", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "d", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
                   
                   RowBox[{"S", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
                   RowBox[{"KroneckerProduct", "[", 
                    RowBox[{"d", ",", "d", ",", "d", ",", 
                    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"\[Theta]", "=", 
                RowBox[{"\[Pi]", "/", "4"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"g", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1", "+", 
                   RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"j", "+", "1", "+", 
                   RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"k", "+", "1", "+", 
                   RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], "=", 
                RowBox[{"s", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1", "+", 
                   RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"j", "+", "1", "+", 
                   RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"k", "+", "1", "+", 
                   RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Clear", "[", "\[Theta]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Pgf", "=", 
                RowBox[{"Simplify", "[", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
                   ")"}], 
                  RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
               RowBox[{"Pgs", "=", 
                RowBox[{"Simplify", "[", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
                    ")"}], 
                   RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gD", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1", "+", 
                   RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"j", "+", "1", "+", 
                   RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                  RowBox[{"k", "+", "1", "+", 
                   RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], "=", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{"Pgs", "*", 
                   RowBox[{"g", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}]}], "+", 
                  RowBox[{"Pgf", "*", 
                   RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"i", "+", "1", "+", 
                    RowBox[{"l", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"j", "+", "1", "+", 
                    RowBox[{"q", 
                    RowBox[{"(", "2", ")"}]}]}], ",", 
                    RowBox[{"k", "+", "1", "+", 
                    RowBox[{"r", 
                    RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}]}]}], 
                 "]"}]}], ";"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"l", ",", "q", ",", "r", ",", "i", ",", "j", ",", "k"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.801173858376707*^9, 3.801174017403508*^9}, {
  3.801174054297636*^9, 3.801174082884879*^9}, {3.801174120610388*^9, 
  3.8011741530280437`*^9}, {3.801174238161618*^9, 3.8011743475657473`*^9}, {
  3.801174420343883*^9, 3.801174472780455*^9}, {3.801174505633915*^9, 
  3.801174547196743*^9}, {3.801174605697337*^9, 3.801174729474639*^9}, {
  3.801174820891659*^9, 3.8011749016289177`*^9}, {3.801175245845899*^9, 
  3.8011752890077553`*^9}, {3.801175359174993*^9, 3.801175503096382*^9}, {
  3.801175560749305*^9, 3.801175654263584*^9}, {3.801176498659512*^9, 
  3.801176531565795*^9}, {3.801177741889904*^9, 3.8011777646100683`*^9}, {
  3.801177818687587*^9, 3.801177823694871*^9}, {3.801178188149864*^9, 
  3.8011782113931627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"gD", "[", 
   RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.801174553557542*^9, 3.801174565644512*^9}, {
  3.801174750514056*^9, 3.801174776514419*^9}, {3.801174915299914*^9, 
  3.801174927481316*^9}, {3.801175916932687*^9, 3.801175917623889*^9}, {
  3.801178416825781*^9, 3.801178427651251*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.801174566679593*^9, {3.801174751273185*^9, 3.801174777111664*^9}, {
   3.801174917820444*^9, 3.801174927992682*^9}, 3.8011756752035847`*^9, 
   3.801175918681408*^9, 3.801178224034878*^9, {3.801178417809972*^9, 
   3.801178428694129*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assemblage", " ", "fideity"}]], "Code",
 CellChangeTimes->{{3.8011759953630123`*^9, 3.801176004055703*^9}, {
  3.8011760894549437`*^9, 3.8011761034438343`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"l", "=", "0"}], ",", 
   RowBox[{"l", "<", "2"}], ",", 
   RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"q", "=", "0"}], ",", 
     RowBox[{"q", "<", "2"}], ",", 
     RowBox[{"q", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"r", "=", "0"}], ",", 
       RowBox[{"r", "<", "2"}], ",", 
       RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Fg", "[", 
         RowBox[{"l", ",", "q", ",", "r"}], "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{"Tr", "[", 
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{
               RowBox[{"i", "+", "1", "+", 
                RowBox[{"l", 
                 RowBox[{"(", "2", ")"}]}]}], ",", 
               RowBox[{"j", "+", "1", "+", 
                RowBox[{"q", 
                 RowBox[{"(", "2", ")"}]}]}], ",", 
               RowBox[{"k", "+", "1", "+", 
                RowBox[{"r", 
                 RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}], ".", 
             RowBox[{"gD", "[", 
              RowBox[{
               RowBox[{"i", "+", "1", "+", 
                RowBox[{"l", 
                 RowBox[{"(", "2", ")"}]}]}], ",", 
               RowBox[{"j", "+", "1", "+", 
                RowBox[{"q", 
                 RowBox[{"(", "2", ")"}]}]}], ",", 
               RowBox[{"k", "+", "1", "+", 
                RowBox[{"r", 
                 RowBox[{"(", "2", ")"}]}]}], ",", "0"}], "]"}]}], "]"}]], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "1", ",", "1"}], "}"}]}], "]"}]}]}], 
      "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8011778292195187`*^9, 3.801177890043939*^9}, {
   3.8011779255738163`*^9, 3.8011779995472183`*^9}, {3.801178356044776*^9, 
   3.801178362897772*^9}, {3.801178397936158*^9, 3.8011784018353767`*^9}, 
   3.801178453942319*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg", "[", 
  RowBox[{"0", ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.801178012009207*^9, 3.801178016830513*^9}, {
  3.801178305936192*^9, 3.801178311516086*^9}, {3.801178477951436*^9, 
  3.80117848270704*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"5", ",", "5", ",", "5", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"5", ",", "5", ",", "5", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"5", ",", "5", ",", "6", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"5", ",", "5", ",", "6", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"5", ",", "6", ",", "5", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"5", ",", "6", ",", "5", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"5", ",", "6", ",", "6", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"5", ",", "6", ",", "6", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"6", ",", "5", ",", "5", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"6", ",", "5", ",", "5", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"6", ",", "5", ",", "6", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"6", ",", "5", ",", "6", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"6", ",", "6", ",", "5", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"6", ",", "6", ",", "5", ",", "0"}], "]"}]}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"6", ",", "6", ",", "6", ",", "0"}], "]"}], ".", 
     RowBox[{"gD", "[", 
      RowBox[{"6", ",", "6", ",", "6", ",", "0"}], "]"}]}], 
    "]"}]]}]], "Output",
 CellChangeTimes->{
  3.801178018000094*^9, 3.8011782289441223`*^9, 3.801178312454563*^9, 
   3.801178366218773*^9, 3.8011784062414*^9, {3.8011784569431057`*^9, 
   3.801178483438408*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3111", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "3", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "3", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "3", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "3", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "4", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "4", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "4", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "4", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "3", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "3", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "3", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "3", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "4", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "4", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "4", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "4", ",", "4", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801179239723168*^9, 3.801179291352203*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179313075334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3110", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "3", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "3", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "3", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "3", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "4", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "4", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "4", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "4", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "3", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "3", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "3", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "3", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "4", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "4", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8011791665432453`*^9, 3.801179225270756*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179316240815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3101", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "1", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "1", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "1", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "1", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "2", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "2", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "2", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "2", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "1", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "1", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "1", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "1", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "2", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "2", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "2", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "2", ",", "4", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80117910049865*^9, 3.801179150423036*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179321722335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3011", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "3", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "3", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "3", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "3", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "4", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "4", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "4", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "4", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "3", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "3", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "3", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "3", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "4", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "4", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "4", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "4", ",", "4", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801178944361752*^9, 3.801178985194139*^9}, {
  3.80117903492467*^9, 3.801179072054551*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179324192514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3100", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "1", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "1", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "1", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "1", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "2", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "2", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "2", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "2", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "1", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "1", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "1", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "1", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "2", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "2", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "2", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "2", ",", "2", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801178867632208*^9, 3.80117891964879*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.8011793297094584`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3010", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "3", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "3", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "3", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "3", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "4", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "4", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "4", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "4", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "3", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "3", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "3", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "3", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "4", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "4", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "4", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "4", ",", "2", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801178796280457*^9, 3.801178860401101*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.8011793325440617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3001", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "1", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "1", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "1", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "1", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "2", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "2", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "2", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "2", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "1", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "1", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "1", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "1", ",", "4", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "2", ",", "3", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "2", ",", "3", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "2", ",", "4", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "2", ",", "4", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801178629661187*^9, 3.801178709646112*^9}, {
  3.80117874516671*^9, 3.8011787671888657`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "cp"]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.801179335045765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg3000", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "1", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "1", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "2", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "2", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "2", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "2", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "1", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "1", ",", "2", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "2", ",", "1", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "2", ",", "1", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "2", ",", "2", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "2", ",", "2", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.801178572840622*^9, {3.801178637401847*^9, 3.801178638129023*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   RowBox[{"4", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "cp"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.801178573537064*^9, 3.801179338022052*^9}]
}, Open  ]]
}, Open  ]],

Cell["W-state", "Subsubsection",
 CellChangeTimes->{{3.798533953740589*^9, 3.7985339562298517`*^9}}],

Cell[CellGroupData[{

Cell["Assemblages in 1SDI", "Subsubsection",
 CellChangeTimes->{{3.798531845388616*^9, 3.798531849573454*^9}, {
  3.798531885420947*^9, 3.798531888119549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"W100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w100", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", "w100", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w101", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W101", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W101", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", "w101", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w110", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W110", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W110", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", "w110", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w111", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"(*", 
   RowBox[{"w100", "+", "w110", "+"}], "*)"}], 
  RowBox[{"w101", "+", "w111"}], "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.7985340212448263`*^9, 
   3.798534120226759*^9}, {3.798543930959919*^9, 3.7985439370963297`*^9}, {
   3.798544859088333*^9, 3.798544878119822*^9}, {3.798544959330476*^9, 
   3.7985449749981937`*^9}, {3.798545012615532*^9, 3.7985450237068253`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox["c2", "2"], "2"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c0", " ", "c2"}], "2"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c1", " ", "c2"}], "2"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c0", " ", "c2"}], "2"]}], 
      FractionBox[
       SuperscriptBox["c0", "2"], "2"], 
      FractionBox[
       RowBox[{"c0", " ", "c1"}], "2"], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c1", " ", "c2"}], "2"]}], 
      FractionBox[
       RowBox[{"c0", " ", "c1"}], "2"], 
      FractionBox[
       SuperscriptBox["c1", "2"], "2"], "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.798532105810561*^9, 3.79853212192656*^9}, 
   3.798532161864356*^9, 3.7985321933340816`*^9, 3.7985326677362347`*^9, 
   3.7985341080678062`*^9, 3.798543942559416*^9, 3.798544879196937*^9, 
   3.798544976055373*^9, 3.7985450242933483`*^9, 3.799367023176277*^9, 
   3.799669993053376*^9, 3.799724577007966*^9, 3.8000227548596888`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["c2", "2"], "0", "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.798532105810561*^9, 3.79853212192656*^9}, 
   3.798532161864356*^9, 3.7985321933340816`*^9, 3.7985326677362347`*^9, 
   3.7985341080678062`*^9, 3.798543942559416*^9, 3.798544879196937*^9, 
   3.798544976055373*^9, 3.7985450242933483`*^9, 3.799367023176277*^9, 
   3.799669993053376*^9, 3.799724577007966*^9, 3.800022754879904*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wE100", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", 
        RowBox[{"1", "/", "3"}], 
        RowBox[{"1", "/", "3"}], "0"},
       {"0", 
        RowBox[{"1", "/", "3"}], 
        RowBox[{"1", "/", "3"}], "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  TagBox[
   RowBox[{"wE101", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], "0"},
       {
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], "0"},
       {
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ";", 
  TagBox[
   RowBox[{"wE110", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "3"}], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ";", 
  RowBox[{"wE111", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "6"}], 
        RowBox[{
         RowBox[{"-", "1"}], "/", "6"}], 
        RowBox[{
         RowBox[{"-", "1"}], "/", "6"}], "0"},
       {
        RowBox[{
         RowBox[{"-", "1"}], "/", "6"}], 
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], "0"},
       {
        RowBox[{
         RowBox[{"-", "1"}], "/", "6"}], 
        RowBox[{"1", "/", "6"}], 
        RowBox[{"1", "/", "6"}], "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.798544800434181*^9, 3.798544841577096*^9}, {
  3.7985448895619297`*^9, 3.79854495154694*^9}, {3.798544986921068*^9, 
  3.798545001872654*^9}, {3.798545032288625*^9, 3.798545080994917*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assemblages", " ", "in", " ", "2", "SDI"}]], "Code",
 CellChangeTimes->{{3.799652589837966*^9, 3.7996525994690123`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "Assemblages", " ", "in", " ", "SDI"}]], "Output",
 CellChangeTimes->{3.7999253648599243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"W20000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21000", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21100", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21011", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21011", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21111", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20000", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21000", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20011", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20111", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21011", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21111", "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}, {3.799652699580895*^9, 
   3.7996527225139933`*^9}, {3.799652762166793*^9, 3.7996528786255693`*^9}, {
   3.7996529282142067`*^9, 3.799653312058942*^9}, {3.7996533454350157`*^9, 
   3.799653369420042*^9}, {3.799653459486372*^9, 3.7996537346007833`*^9}, {
   3.799666251183893*^9, 3.799666268866477*^9}, {3.799724658011848*^9, 
   3.79972487716148*^9}, {3.800024365046254*^9, 3.800024370440339*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798124494*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798138668*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.8000267981490993`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798159525*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c1", "+", "c2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       FractionBox["1", "16"], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["g", "2"], "-", 
         RowBox[{"2", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "l"}], ")"}]}], "-", 
         RowBox[{"4", " ", "l"}], "+", 
         SuperscriptBox["l", "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "16"], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798170393*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c1", "-", "c2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "16"]}], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "-", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["g", "2"], "-", 
         RowBox[{"2", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "l"}], ")"}]}], "-", 
         RowBox[{"4", " ", "l"}], "+", 
         SuperscriptBox["l", "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "16"], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c1"}], "+", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.8000267981812363`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c1", "-", "c2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       FractionBox["1", "16"], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "-", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["g", "2"], "-", 
         RowBox[{"2", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "l"}], ")"}]}], "-", 
         RowBox[{"4", " ", "l"}], "+", 
         SuperscriptBox["l", "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "16"], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "-", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798190073*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c1", "+", "c2"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "16"]}], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["g", "2"], "-", 
         RowBox[{"2", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "l"}], ")"}]}], "-", 
         RowBox[{"4", " ", "l"}], "+", 
         SuperscriptBox["l", "2"]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "16"]}], " ", "c0", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", "c2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.799653370672922*^9, 3.7996537361041317`*^9, 3.799666270668693*^9, {
   3.799724823675931*^9, 3.799724878182604*^9}, 3.800022783949924*^9, 
   3.800024403663495*^9, 3.800026798198852*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"W20001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21001", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21001", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21101", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W20110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w20110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W20110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21010", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21010", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W21110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]6", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
          RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w21110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"u", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "u", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "W21110", 
      ".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"d", ",", "d", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20001", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20101", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21001", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21101", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20010", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w20110", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21010", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "w21110", "]"}]}], "Input",
 CellChangeTimes->{{3.798531897023031*^9, 3.79853190129987*^9}, {
   3.7985319341874533`*^9, 3.798531970515944*^9}, {3.798532001401044*^9, 
   3.7985320432972183`*^9}, {3.798532094764223*^9, 3.798532120434449*^9}, {
   3.798532151350835*^9, 3.798532160969112*^9}, 3.79853219262457*^9, {
   3.798532585457128*^9, 3.798532666778364*^9}, {3.798701798814856*^9, 
   3.798701803649004*^9}, {3.798701846642024*^9, 3.798701846772819*^9}, {
   3.7987019336019793`*^9, 3.7987019651525908`*^9}, {3.798702354544278*^9, 
   3.798702356615563*^9}, {3.798702424312904*^9, 3.798702426566811*^9}, {
   3.798702456945465*^9, 3.798702457679021*^9}, {3.799652699580895*^9, 
   3.7996527225139933`*^9}, {3.799652762166793*^9, 3.7996528786255693`*^9}, {
   3.7996529282142067`*^9, 3.799653312058942*^9}, {3.7996533454350157`*^9, 
   3.799653369420042*^9}, {3.799653459486372*^9, 3.7996537346007833`*^9}, {
   3.799654525285103*^9, 3.7996548220375338`*^9}, {3.799654861281454*^9, 
   3.799654875151907*^9}, {3.799724908821734*^9, 3.799725089544777*^9}, {
   3.800024372008984*^9, 3.800024374671589*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       FractionBox["1", "8"], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "8"], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789209457*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "8"]}], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "8"]}], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.8000267892236834`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789234346*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789244928*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       FractionBox["1", "8"], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "8"], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789255631*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.8000267892661867`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "8"]}], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "8"]}], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "g", "-", "l"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "g", "-", "l"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "l"}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789274783*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g", "-", "l"}], ")"}], "2"]}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.799725052006056*^9, 3.799725092547291*^9, 
  3.8000227893299723`*^9, 3.800024389654853*^9, 3.800026789283339*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local filtering operation by Bob and Charlie", "Subsubsection",
 CellChangeTimes->{{3.798532242686329*^9, 3.798532263554929*^9}, {
  3.7985341556522417`*^9, 3.798534160345405*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Strategy", " ", "1", " ", 
  RowBox[{"(", 
   RowBox[{"one", " ", "party", " ", "contribution"}], ")"}]}]], "Code",
 CellChangeTimes->{{3.798532764037341*^9, 3.798532814356468*^9}}],

Cell[BoxData[
 RowBox[{"contribution", " ", "one", " ", "party", " ", 
  "Strategy"}]], "Output",
 CellChangeTimes->{3.79870168763897*^9, 3.7999253649236717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bw0", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c1", "/", "c2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Bw0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bw0T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Bw0", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c1", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Bw0T", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bw1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c1", "/", "c2"}], ")"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Bw1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bw1T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Bw1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c1", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Bw1T", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Bw0T", ".", "Bw0"}], "+", 
   RowBox[{"Bw1T", ".", "Bw1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cw0", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c0", "/", "c2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"u", ".", "ut"}], ")"}]}], "+", 
     RowBox[{"d", ".", "dt"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Cw0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cw0T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Cw0", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c0", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Cw0T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cw1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"c0", "/", "c2"}], ")"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{"u", ".", "ut"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Cw1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cw1T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Cw1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "c0", "<", "1"}], ",", 
       RowBox[{"0", "<", "c2", "<", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Cw1T", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Cw0T", ".", "Cw0"}], "+", 
   RowBox[{"Cw1T", ".", "Cw1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.778204645330646*^9, 3.778204877498444*^9}, {
  3.778204941045549*^9, 3.778204976682846*^9}, {3.7789937216266108`*^9, 
  3.778993725080093*^9}, {3.779002062037552*^9, 3.779002083418212*^9}, {
  3.798184176119326*^9, 3.7981842152388*^9}, {3.798532288569111*^9, 
  3.798532373203246*^9}, {3.798534312131761*^9, 3.7985344370699472`*^9}, {
  3.798534467541909*^9, 3.798534550677369*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["c1", "2"], 
       SuperscriptBox["c2", "2"]], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["c1", "2"], 
          SuperscriptBox["c2", "2"]]}]], " ", 
       RowBox[{"Conjugate", "[", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["c1", "2"], 
           SuperscriptBox["c2", "2"]]}]], "]"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.7997245835732327`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["c0", "c2"], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.7997245835837603`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["c0", "c2"], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.7997245835938253`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["c0", "2"], 
         SuperscriptBox["c2", "2"]]}]], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.799724583604507*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Conjugate", "[", 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["c0", "2"], 
          SuperscriptBox["c2", "2"]]}]], "]"}], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.799724583615273*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["c0", "2"], 
       SuperscriptBox["c2", "2"]], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["c0", "2"], 
          SuperscriptBox["c2", "2"]]}]], " ", 
       RowBox[{"Conjugate", "[", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["c0", "2"], 
           SuperscriptBox["c2", "2"]]}]], "]"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.778204897949108*^9, 3.778204978082388*^9, 3.778902873107707*^9, 
   3.77899321511119*^9, 3.778993397232058*^9, {3.778993706169112*^9, 
   3.7789937263433723`*^9}, 3.779002013366783*^9, 3.779002084604596*^9, 
   3.779582048666354*^9, 3.793237648402918*^9, 3.796181688357415*^9, 
   3.796300716119652*^9, 3.796814164600256*^9, 3.796814321279099*^9, 
   3.796884715790709*^9, 3.797933376812101*^9, 3.798184136367958*^9, {
   3.7981842003613377`*^9, 3.7981842163170443`*^9}, 3.798532341675191*^9, 
   3.798532374296165*^9, 3.79853443804126*^9, 3.7985345515904207`*^9, 
   3.7993670372125874`*^9, 3.79967000219545*^9, 3.799724583624118*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(", "\[NoBreak]", GridBox[{
    {
     RowBox[{"c1", "/", "c2"}], "0"},
    {"0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Success", " ", "probability"}]], "Code",
 CellChangeTimes->{{3.798532412661648*^9, 3.798532419562791*^9}}],

Cell[BoxData[
 RowBox[{"probability", " ", "Success"}]], "Output",
 CellChangeTimes->{3.798701687703267*^9, 3.799925364987705*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P1SW", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Bw0", ",", "Cw0"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"w100", "+", "w110"}], ")"}], ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Bw0T", ",", "Cw0T"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7985324291962233`*^9, 3.798532477783437*^9}, {
  3.798532686426423*^9, 3.798532734612468*^9}, {3.798532928596262*^9, 
  3.798532942233399*^9}, {3.7985345850393133`*^9, 3.7985346489642363`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["c0", "2"], " ", 
   SuperscriptBox["c1", "2"]}], 
  SuperscriptBox["c2", "2"]]], "Output",
 CellChangeTimes->{{3.798532723663177*^9, 3.7985327355498943`*^9}, 
   3.7985329431162233`*^9, {3.7985346185849457`*^9, 3.7985346503919363`*^9}, 
   3.7993670457961884`*^9, 3.7996700079237413`*^9, 3.7997245899123373`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assemblage fidelity for finite copy", "Subsubsection",
 CellChangeTimes->{{3.798543640461687*^9, 3.7985436461878138`*^9}, {
  3.7985446871424723`*^9, 3.798544692255147*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u00", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u01", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u10", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u11", "=", 
   RowBox[{"(", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut00", "=", 
   RowBox[{"ConjugateTranspose", "[", "u00", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut01", "=", 
   RowBox[{"ConjugateTranspose", "[", "u01", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut10", "=", 
   RowBox[{"ConjugateTranspose", "[", "u10", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut11", "=", 
   RowBox[{"ConjugateTranspose", "[", "u11", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pf", "=", 
   RowBox[{"Simplify", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox["c1", "2"]}], 
         SuperscriptBox["c2", "2"]], ")"}]}], ")"}], 
     RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
  RowBox[{"Ps", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["c0", "2"], " ", 
           SuperscriptBox["c1", "2"]}], 
          SuperscriptBox["c2", "2"]], ")"}]}], ")"}], 
      RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wD100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Ps", "*", "wE100"}], "+", 
     RowBox[{"Pf", "*", "w100"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wD101", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Ps", "*", "wE101"}], "+", 
     RowBox[{"Pf", "*", "w101"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wD110", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Ps", "*", "wE110"}], "+", 
     RowBox[{"Pf", "*", "w110"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wD111", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Ps", "*", "wE111"}], "+", 
     RowBox[{"Pf", "*", "w111"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7985447007726173`*^9, 3.798544756238171*^9}, {
  3.798545103328763*^9, 3.7985451997121696`*^9}, {3.798545364223391*^9, 
  3.798545480612451*^9}, {3.798546421788785*^9, 3.798546444486211*^9}}],

Cell[BoxData[
 RowBox[{"Fw0", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["3"]], 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD100", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD100", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD100", ".", "u10"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD100", ".", "u10"}], ")"}]}], ")"}]], "+", 
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"ut00", ".", "wD110", ".", "u00"}], ")"}]]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7985452239572887`*^9, 3.798545229150564*^9}, {
  3.798545531202086*^9, 3.798545598612916*^9}, {3.79854563187805*^9, 
  3.798545708257635*^9}, {3.7985457475822277`*^9, 3.79854579865405*^9}, {
  3.798545838052738*^9, 3.798545853647735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fw0", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{
         FractionBox["4", "3"], "-", 
         RowBox[{
          FractionBox["4", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
         RowBox[{
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
         RowBox[{"2", " ", "c0", " ", "c1", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
         RowBox[{
          SuperscriptBox["c1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "3"], "-", 
         RowBox[{
          FractionBox["1", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "cp"}]], " ", 
          SuperscriptBox["c2", "2"]}]}]]}], ")"}]}], "}"}], "}"}]}]], "Input",
 
 CellChangeTimes->{{3.799926977875334*^9, 3.7999269805711517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["3"]], 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{
        FractionBox["4", "3"], "-", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
        RowBox[{
         SuperscriptBox["c0", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
        RowBox[{"2", " ", "c0", " ", "c1", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
        RowBox[{
         SuperscriptBox["c1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}]}]], "+", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "3"], "-", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "cp"}]], " ", 
         SuperscriptBox["c2", "2"]}]}]]}], ")"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.799926981804497*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Fw1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["6"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD101", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD101", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD101", ".", "u00"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD101", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD101", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD101", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD101", ".", "u10"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD101", ".", "u10"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD101", ".", "u10"}], ")"}]}], ")"}]}], "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD111", ".", "u00"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD111", ".", "u00"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD111", ".", "u00"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD111", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD111", ".", "u01"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD111", ".", "u01"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"ut00", ".", "wD111", ".", "u10"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut01", ".", "wD111", ".", "u10"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"ut10", ".", "wD111", ".", "u10"}], ")"}]}], ")"}]}]}], 
     ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.798545904619815*^9, 3.79854627644672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fw1", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox["c1", "2"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["c2", "2"]}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "c0", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c0", "2"], " ", 
               SuperscriptBox["c1", "2"]}], 
              SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
          SuperscriptBox["c2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"c1", "+", "c2"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["c0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox["c1", "2"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c0", "2"], " ", 
                  SuperscriptBox["c1", "2"]}], 
                 SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
             SuperscriptBox["c2", "2"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["c2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c0", "2"], " ", 
                  SuperscriptBox["c1", "2"]}], 
                 SuperscriptBox["c2", "2"]]}], ")"}], "cp"]}], "+", 
            RowBox[{
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c0", "2"], " ", 
                  SuperscriptBox["c1", "2"]}], 
                 SuperscriptBox["c2", "2"]]}], ")"}], "cp"]}], "+", 
            RowBox[{"2", " ", "c1", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c0", "2"], " ", 
                  SuperscriptBox["c1", "2"]}], 
                 SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", "c2"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c0", "2"], " ", 
                  SuperscriptBox["c1", "2"]}], 
                 SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
             SuperscriptBox["c2", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}], 
    "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7999269889223003`*^9, 3.799926990718205*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"9", " ", 
         SuperscriptBox["c0", "2"], " ", 
         SuperscriptBox["c1", "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["c2", "2"]}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "c0", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox["c0", "2"], " ", 
              SuperscriptBox["c1", "2"]}], 
             SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
         SuperscriptBox["c2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"c1", "+", "c2"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["c0", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["c1", "2"]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["c0", "2"], " ", 
                 SuperscriptBox["c1", "2"]}], 
                SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
            SuperscriptBox["c2", "2"]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["c2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["c0", "2"], " ", 
                 SuperscriptBox["c1", "2"]}], 
                SuperscriptBox["c2", "2"]]}], ")"}], "cp"]}], "+", 
           RowBox[{
            SuperscriptBox["c1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["c0", "2"], " ", 
                 SuperscriptBox["c1", "2"]}], 
                SuperscriptBox["c2", "2"]]}], ")"}], "cp"]}], "+", 
           RowBox[{"2", " ", "c1", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["c0", "2"], " ", 
                 SuperscriptBox["c1", "2"]}], 
                SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", "c2"}], "+", 
           
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"3", " ", 
                 SuperscriptBox["c0", "2"], " ", 
                 SuperscriptBox["c1", "2"]}], 
                SuperscriptBox["c2", "2"]]}], ")"}], "cp"], " ", 
            SuperscriptBox["c2", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{3.7999269928562403`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"9", " ", 
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["c2", "2"]}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "c0", " ", "X", " ", 
       SuperscriptBox["c2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"c1", "+", "c2"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox["c1", "2"]}], "-", 
         RowBox[{"X", " ", 
          SuperscriptBox["c2", "2"]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["c2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"3", " ", "X"}], "+", 
         RowBox[{
          SuperscriptBox["c1", "2"], " ", "X"}], "+", 
         RowBox[{"2", " ", "c1Xc2"}], "+", 
         RowBox[{"X", " ", 
          SuperscriptBox["c2", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}]], "Input",\

 CellChangeTimes->{{3.799670536333095*^9, 3.799670568913319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c2", "=", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["c0", "2"], "-", 
     SuperscriptBox["c1", "2"]}]]}], ";", 
  RowBox[{"cp", "=", "2"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"c0", "=", "0.2"}], ";", 
    RowBox[{"c1", "=", "0.6"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", "Fw0", "]"}], "//", 
     RowBox[{"N", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "Fw1", "]"}]}]}], "//", "N"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Fw0", ",", "Fw1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c0", ",", "0.01", ",", 
      RowBox[{"1", "/", 
       SqrtBox["3"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c1", ",", "0.01", ",", 
      RowBox[{"1", "/", 
       SqrtBox["3"]}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"c0", ",", "c1", ",", "F"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"c2", ",", "cp", ",", "c0", ",", "c1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7985463262370663`*^9, 3.798546402509959*^9}, {
   3.798546455064651*^9, 3.798546605931387*^9}, {3.798546665441044*^9, 
   3.798546740744204*^9}, {3.798546778412319*^9, 3.7985468454388437`*^9}, {
   3.7985468785309896`*^9, 3.7985468790815983`*^9}, {3.798546945344561*^9, 
   3.798547009889015*^9}, {3.799371255759694*^9, 3.799371266564272*^9}, {
   3.7993713700074778`*^9, 3.7993713710803556`*^9}, {3.799371410316266*^9, 
   3.799371410385891*^9}, {3.79937144226709*^9, 3.7993714423655148`*^9}, {
   3.7993714751156054`*^9, 3.799371475346941*^9}, {3.79937150666743*^9, 
   3.799371545115444*^9}, {3.799371592465562*^9, 3.7993715925658503`*^9}, {
   3.799371629179854*^9, 3.799372166575482*^9}, {3.799372249759095*^9, 
   3.7993722559980392`*^9}, {3.799372321831273*^9, 3.799372574948875*^9}, {
   3.799372606107665*^9, 3.799372676839787*^9}, {3.7993727079448023`*^9, 
   3.79937275454987*^9}, {3.799372899377977*^9, 3.799373160439844*^9}, {
   3.799373194244776*^9, 3.799373268925653*^9}, {3.799373300863212*^9, 
   3.799373820175144*^9}, {3.799373863684276*^9, 3.7993741377192593`*^9}, {
   3.7993743002847347`*^9, 3.799374479607498*^9}, {3.799670100698821*^9, 
   3.799670150967187*^9}, {3.7999270037564993`*^9, 3.799927041133574*^9}, {
   3.799927140756867*^9, 3.799927181021796*^9}, {3.799927214701087*^9, 
   3.7999272946253633`*^9}, {3.799933949392459*^9, 3.799933986894403*^9}, {
   3.799934019279961*^9, 3.799934081761937*^9}, 3.799934124307891*^9, {
   3.7999341835565243`*^9, 3.799934195728284*^9}, {3.799934230751008*^9, 
   3.799934246896448*^9}, {3.799934301634638*^9, 3.799934325333446*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nWV0U123RnF3d9eipbgFd5dixbW4u7tTivPiWqRIobgVihUtRYtL3aC4
3+beNfdiJON+fzIyv5DuzDc5Z5919np2/l7D2vRNEC9evC3J48VLGPdYNSLn
ieCJsy08dunj2+LqozeWVO9uTR70Yo/hyTYe7em5/K1lRz+/nWlaHjd8YN3j
XlfqvrNsjVp9ZdSjC4Yvfj3TOX70O8v73Y2q9kh6xfCFySe61nYLslh6/fBs
VumG4c+c+73t7hBsaZjmodsGp7uGX6y8cGbxM8GWYREH/Nxv3DP8544NHbvW
D7GsuTYv0YLeDwzPtLlm4N7LIZbzO3vUnPbzkeHNawc0OVg91BIys8r4MSsC
Dc8Y4doidk+oJW2PDF6DSjw3PMern61fpwqzVKoREdHz0kvDT6/t3+Z6nzBL
mdRvMuwv9drw9KP6Nrl9KMxycdLtMrsnvDE8cYcDhV7GhJnneMUnz3m8Oz3T
zQzN3hnP8ODfQTOe/FHP8MlZqrhd2xNkPMOvx770Odks2HiGf3/o239miHqG
L0y56WnUhBDjGV64bvMbpxKGGs/w/xYXe7l2dqjxDA9wLZ2yyC/1DM/16GPp
CNcw4xkenWamZ4db6hn+LeD+ktOFw41n+IByW2dZRoYbz/B5P+dFPTkcbjzj
j+8nr4Pjk+c8+j1qnv+iV5DxDP9RKbDvr27BxjO8ae2/U2onDDGe4VMehxfv
sDnEeIbPP2/xjucUajzD91UeMePbWfUMPzrKP3OkJcx4huf68txv/Ikw4xne
q3fFesWKhhvPcBfHOrUGLwo3nuH3209ov+6deoanKPmt+CvHCOMZnnl767X1
RkYYz3ji945nON9P/j0cnzzn8VWH77uvpgoxns37OI4q4+2lnuGngvekG94q
1HiGDyv+bd6+IPUMd6l7PSTryDDjGb4hgWc7l8/qGf6xZYFWGYaFG8/wQh3T
3/B5oZ7hO6c45n5eN8J4hpfPXGbOmY0RxjO8RtDyBOsi1DP84sEj6+eWjDSe
8cHxE89wfu94hvP95H3h+OQ5jx12jvEf2DnUeIYnj3odG/5dPcNfpzx70d8t
zHiGL+vZb/f5POHGsxnniXZjWm0PN57hZyf/3JA5T4TxDC/vZfFcvjTCeIa/
7JNvUPlP6hnutCuppUOLSOMZvuHxozJVN0Qaz/BHbTf1S/BcPfO5OR/hGc7x
E8/wqfJ7xzOc7yd/D45PnvPoOCFD42L/hRnP8I7F3rjsdgo3nuG/WyYs8vGi
eoYXm18/w5pGEcYzfM3c0lez+qpneOJ8y5NGl480nuGbu676PnN9pPEM33iw
/9VSn9Qz/N2lOsOcakcZz3CPDxWy3pgeZTzz+Ti/4xnO+QjPcI6feIbze8cz
nO8n44Djk+c8zt7434YFt9QzfHpZL//QrhHGM7zauZHPq75Tz/BnlrnLY7tH
Gs/wXokKJZp4Vz3DS6fd71imQpTxDA/8k7hZ7yVRxjN8asDFyd0eq2d42P61
Ywdnjjae+RzMl/AM5/yOZzjnI3M8Fc7xE89wfu94hvP9NP+dhOOT5zz63y1c
5kO0eoan61a8df8xkcYzfNrqmMhd79UzfGyDIXWS9IgynuHF/14eE3BRPcO/
ZKjRxzlbtPEMn3qiUZnA7tHGM/zcSN/vl9eqZ8bL/BPPcOZLeIZzfscznPMR
nuEcP83vWTi/dzzD+X4ybjg+ec5j+1N/anX4qZ7h0U0n+TUeE2U8w/d1Dck1
+Y16hgevvVW+WJ1o4xleeEjDfQtXqGd4J+9O+T8/UM/wk1NmbvueLMZ4ZlzM
5/EMZ/6JZzjzJTzDOb/jGc75CM/Ghxw/8Qzn945nON9PPg88SnzynMf4JZMW
/xapnuE76yZs7O8cbTwbD373fn09rJ7h82se/7Hpt3qGt1nbq2/xKjHGM7yO
y7UZo/qoZ/4+10d4hjOfxzOc+See4cyX8Azn/I5nOOcjPJv3l+MnnuH83vEM
5/vJ54Tjk+c8bqiyfFLCM+oZXr38zDF50scYz/DfJX/Uads+xniGHzi/41SZ
+erZnG9nDzuaea965u9wvYlnONdHeIYzn8cznPknnuHMl/AM5/yOZzjnIzzD
OX7iGc7vHc9wvp98fngN8clzHm9XaJB8TTf1DJ9g8Ti5a516hv/NcDBvlYvq
Gb5/6IAhm5+oZ96P63c8w7nexDOc6yM8wyvIfB7PcOafeIYzX8Iz/Imc3/EM
53yEZzjHTzzD+b3jGc73Ey9wfPKcx2qxE/Pm91PP8FJP6n4dGKKe4W0aBlUf
9kk98++oh+AZzvU7nuFcb+IZzvURnuHM5/EMZ/6JZzjzJTwbLud3PMM5H+EZ
zvETz3B+73iG8/3EFxyfPOex3LEHCa9/V8/wu2kLJd/zRz3z/1NfwjOcegie
4Vy/m+tM4Vxv4hnO9RGe4cznzTxeOPNPPMOZL+EZzvkdz3DOR3g21xNy/MQz
nN87nuFt5fuJRzg+zeeXx3j/+7/3lsAX9x0K/95kHp18eu32XvHW+Ic7thqW
70iFt5bx9Tpu3RPw2vBviSz+V8tpnQq+veuPZydahZvn/Dtez/vD7wSeuJns
Xph5zmOyXYO2jvobY57zd9ZduHTnSRzn/Xk/23HCeX9ez/swTp7z73j/6gNH
1G22caV5nLpk8Vmnim8tuXusGOBR5I3hM2K33/FOH26e8//Dec7jg/+cx3/+
q99z/l3PxFlb/kyi72/qrg92OPZ+HWZeZ/77hlwoWCmfjp9/V2CL156f/4yf
9+H9eT3/P+/D63gf/i7P+Xe8/6RMBxq+jns9j4uSxE915dEbS9KKQ9oMjPud
wgtvjKy4Y3ncf5dR44pbf6fw/hn2Vj1W953lS+FnK62/U/ivCZPnhUe9s5R1
/5XJ+juFt3Tvk7+wW5Bl4J9cq6y/U3i3PzWCajoEW9p4b1po/Z3CPTqFTEz0
T10d/mDgnTfl464TF+c/n8L6O4Vnyll8zrS465o9He40sf5O4Wnd52+cETcP
v7Lk5ULr7xS+LdGNmxfj5o1vL8X4WX+n8K8PN884FDfPiffjb4pecb9TeGAN
pwtr4s7LabLNL2z9ncJjQpyXb4g7j+R2cqtv9QufVXblF8+44x7P8YpPnvOY
o1UfF/em74xn+PgDPUdc/q2e4VPz3jlU1CPIeIa3inckbF2TYOMZXq+F98rY
d+oZXmPzUo9fY7WuDv+wN1H2sfFCjWf4idH5g1PPCDWe4ZuHJlnb85t6hgdt
2ff5e98w4xm+LPXCgw2uq2d4mtlDVq/NH248w49fsVzKPjTceIY3rR/kc9Ez
3HjG3wD5fhqPwseJT57zuP7ym1bVDwUZz/CBuVds/tk52HiGJ5/y6d6z3+rZ
/N2rnucOrQ0xnuGvf4cXqVlC673wuxdr56rlrZ7htX0XJe5TMcx4hu9+27pS
wwNhxjM8SdWs70flCjee4aETG8zuOj3ceIZvzrVoZJcn6hneKeBMvO1FIoxn
eKHonG9q9o8wnvHE7x3PcL6f/Hs4PnnO4+TuJ/dWThJiPMPTR719sn9PiPEM
X9al8++89UONZ/jcxk+etn6snuEtWoS3+9YrzHiGb4od3PnsO/UM//qx1c7q
XcONZ3ijr92Tx7+pnuHhQ383nVE2wniGp7rWsG+uhRHGM3zk1PP5Mz9Wz/DZ
byc3XJI90njGB8dPPMP5veMZzveT94Xjk+c8HphbcfS15qHGM3zL/T9vwsPU
M/xUuZDH16doXR1+b83dxhmThxvP8HJJq9YbFHc9iGf45vYPz7omijCe4e1z
f2mwdlSE8Qwf5+LnMeyxeoafqTvIvX25SOMZ3qhO3jPrp0caz/AiTl2nTLyo
nvncnI/wDOf4aY4Lwvm9m++3cL6f/D04PnnOY4PkD53PzA0znuGLA9MurZ5T
673wh/neDkqzWz3Dj6XrX+RW8QjjGR5YJG2+FNvVMzymndevJhkijWf43n1p
8yQbF2k8w6vP7flt3131DB+RP7zyyjxRxjN8drerT7L0iDKe+Xyc3/EMrybn
IzzDOX7iGc7vHc9wvp+MA45PnvPo2DxFRK1D6hm+Z6RD6UHVI4xneOl0k6s1
Oa+e4fXGXhvVt3Kk8QyvUT6LQ7Xd6hk+Zo9b5lopo4xn+FLvIe6vekcZz/CJ
LzsNmnNIPcObu3a+uvm9euZzMF/CMzxWzu94ht+R8xGe4Rw/8Qzn945n83fl
+8n44Pi0ravveL0y575r6hkelCTGp1nTSOMZ7ldy1ajrl9QzfOfxarlWOkYZ
z3DX6Ogr2VeqZ3iCfceLXQ5Xz/D6Lf0iklaINp7h3TPUGjxsZLTxzHiZf+IZ
znwJz3DO73iGb5bzEZ7hHD/NcUE4v3fz/RZeRr6fjBseLD55zuNX/6fONW+p
Z3jbTxWXzKkXZTzDk/8OL2T9HuLZfF7PTQ82pos2nuGrZi09VL5PtPEMb744
ca2Le9Uz/HFom2wf36pnxsV8Hs9w5p94hu+S+RKe4Zzf8QzfIucjPMM5fprj
gnB+7+b7LZzvJ58Hjk+em/FUblsl9KR6hl8d4bG9ZsFo4xnu+DZz2sfT1DM8
m2XHp7R31DP8851n2fumizGe4e6zpgbtravXg/x9ro/wDGc+j2c48088w5kv
4RnO+R3P8PdyPsIznOMnnuH83vEMTyHfTz4nHJ8857HBnSqNYuerZ3ioJffe
x6/UMzzjgtcHaznEGM/w11VvW7z6qGd4zww3Aiu7qWf+DtebeIZzfYRnOPN5
PMMjZP6JZzjzJTzDOb/jGc75CM/wAXL8xDOc3zue4eXk+8nnh4eJT57zeHCb
S8Wz5WKMZ3j92ZWyXhutns3fzTjbZdUu9QyfFeRRduk19cz7cf2OZzjXm3iG
c32EZzjzeTzDmX/iGc58Cc9wzu94hnM+wjOc4yee4fze8Qzn+4kXOD55zuMm
T6/zbz3VM3x6lyElej5Qz/D+/93q3zFSPfPvoqUeYq7nhZ+Q63c8wzvL9Sae
4aPk+gjP8IYyn8czfKTMP/EMZ76EZzjndzzDOR/hGc7xE8/wN/J7x7P5vPL9
NN8z4TPEJ8/N/K7l1PFdPqhn+Mvx/rF/fqln/n/qS3iGN5N6CJ7hheX6Hc/w
OXK9iWc410d4Nq+X+Tye4cw/8QxnvoRn+CM5v+MZzvkIz/BecvzEM3yG/N7x
DB8g3088wgPFJ8/N91rq6kVOd9xR4Pcm87g4Mr3vmhVvjX94w81/PnhWeGtZ
XXixt7XuDB9eeFFMMUetU8FTeHxpl7tluHnOvxsmr+f94UlLZKr9yD/MPOex
wNE9bS78jjHP+Tt5693ZuvJvjHl/3s92nKYeKe/P63mflDJOnpu/K+/v9Sbr
jsYbV5pH5+bF5zpUfGvpXHLpFGudGX6x44SxX9KFm+f8/3Ce8+jTJMvsg//U
pfl3Dr0rF/6WRN/fHNf3T7rt+DrMvI7x/nV+sGV8Xh0//65NUdcrH/4ZP+/D
+/N6/v8/8j68jvfh7/Kcf9da3j/8r0uG0Q1267rfCtkyXSn/ztK5Rv+wrMeP
6jrrdd7ta2VVbu6rZ/O4UfTeO8uFH5uvf/Y7a16fZFHuNiUOKOf1NZc+eXvA
NciS0SXyvuuwS+b1u/p7ds5vUc7rP3l4F6z9M8hy5VSyyx2/XzWv75fINSCV
n3KzPuhrw1++c4MtE7IX9m4466Z5fZYHNxrda6Gc12dP2L5O7lQhlixntrT5
b66uk6/tV/JXy1vBhvP6Xp9Hji+6KMRyLcfZOgvT6Tr5xyOyltjqrdysj+5z
OveU0aGW/E1unJrRXtfP72mytWx0HuW8PqZngYt1XoRaJk54Um7C+ifm9Q8f
XCjzfbpyXl99UPV6PrXCLAEeIXuHv3xqXp/g7vAA16ehhpt18T8mj9j6X5il
5OPPBQYUemFeH53sXPvHpZTz+vYxlsJTosMslxLOvHWw/Cvz+vj/FVzpN045
r3f0TrHsWeVwy/CcCxaU6KD3xaoHXY/OdTLMcF4/+tys++UmhpvvIfdXOwbX
zz0uRL9v8Ns5Nry/OifIfK/gr7ZnndMvT7D5/sD3nF0YmedwsPmewJOs37r+
eo0Q830w60FOt1tY21e/D/A7U7d5dq8Xav77wmd8bL/Ds0yY+e8IPz565eb2
68PMfy+4/7ohE3b91v9e8HQ959Rv0inc+Id3/vi8xPP94cazGb9r3zQRX9Uz
fMz20acjq0QYn9yXznG8xqaW7kHGJ3zS6wX9DzoGG59wx5ZpB/x3Q33Cm3Rt
0O9c9xDjEz6+S9JaT6PUJ3zowpSR58aEGp/wsXduZKjyVX3Cm98veO3jO/UJ
PzCxbsCOVuHGJ7xA92N/Xx4NNz7hn5aNGNcyfYTxCd/97UWIW98I4xOecGYX
D6fDEcYn3KNey5PHPqpP7uefHp1ov0OFYOMT/t/eP3M2P1Cf8BLfjl8OGx5i
fMJjl3/+sSxJqPEJ334xQ2DV1aHGJ7zL1e47duQNMz7hb9yKTV22Lcz4hM97
v9/lnHu48WnWdZ/O1L7PX/UJ73gnrHjvPhHGp1kvuWV22t4+6hM+s06jqfGz
RBqf8Ctn0v690zPS+IR339O/atsdkcYn6yCiZvVI9eKO+oTvrNjxfc8RIcYn
fHTt115J0oQan/D6FStPLrVTfcITHKkR07NimPEJd7o6N2UjH/UJ97/+5L5b
/XDj06xbnP1g1ZtKEcYnPFPjH/9V2hlhfMKzpi3ntTFFpPEJL9QjZNaJ/pHG
J/zr2OEpCp5Rn/Cam4pWGJY0yviEpzga3L9I4yjjk/UjE66sq1+hV4jxCV+8
9Nzn04lCjU94u0VbR+zbpj7hFYLPba5ZLcz4NOuupy18/PqW+oQXy9I0PG/n
cOMTfmtv2pmrXqpPeJOumTYOD1Cf8CqN5u9KVDvS+DTrxgMiqzXcpT7h8R+W
33Q/QZTxafpX9jqcr+McZXzChx98l7PAFvUJv/BoiiXeK/XJ9UHBjakyxESo
T7jPlQspXJepT3jFuUlzLC4dZnzCU06O8Rl0TX2a+6sOj2PbuIQbn6benLnv
0kNh6hN+dHLZZ8mHRxif8GehCZau7RNpfMJHfE+Q7JG/+oQ3f5hjTp2KUcYn
fNUI55eDl6tP+P7mR9zfvVGf8FNPZnWu5BBtfJo+Ib+n+772izY+Wa/UdeTa
jKcHhxqfZp12/tiaWdOHGZ/wG0X3V2hzWH3CM29v3t25WbjxCS/qlDeyyWv1
adZXJ5udYPqwCOMT7pXn5MAeX9QnPOBDrnrrwtUnfNX2nA634r5X+IQPeexZ
a8FJ9Ql/k/x3iTYZoo1P83f3uBXy7BFtfMKPHEnbrPAO9Qkfd37Q0fbP1Cfr
vL61Klas0jv1Ce846FD6PgvUJ/z1T89jax3CjU/zPtfuvV9xRX3C0zmeGuDs
EmF8mn5Qn4rj0kSoT3iyj5dyJh8ZaXzCL/9+Ocy7T5TxCd9euvOKVHfUJ7zk
vk0v85aJNj7h+z1CdvaZrT7hi07n3+x8W33C/zRouXZGqhjjEx5ze+A+95p6
HcT6OLdhr5JGtg4zPuEJV679/Pir+oQvTf2jbOg69QnfcqTvsT0VI4xP+LqV
SZt+uqk+4Z+HFU/k3yXS+IT/zH9h4aA36hNe9MieXqXuqU/4mCrv/p6uEm18
wrPvybYv3Wr1Ce+8te1Pt2D1CW/Xu3N9L4cY4xOe6Vaf3il6qU/4zJN3Jg1e
rD5ZV/g9MumjRt7qE/6pT9UMIV3CjU94gwvXL3r9UZ/wEwd7nku2QX3CHWLH
PFteLtL4hA9omiFxaR/1CX9dO8nJtw2ijE94kgNfN9YoF218wu+M3ZUq0Wr1
Cb+eZk2K4VHq06yjzBTtE1gpxviEv2nwMOrMaPUJnzWuWPsb29UnfOaFs+GF
L6tP1mN+93autjF1uPEJv7WkdODro+oTfm+Td9OWHSOMT9NHEtz6WfIv6hP+
olm2A/MWq0/4UI9URSbliDI+4S6Twjx9NqlP+PaZAwoWmq0+4Ykrrw3N/lZ9
wgs8T7Z3WPkY4xPeqPvSeFPGqU/4j9UBW+/vU59wz6PPV4/yV5/wiFzHp6cM
U5+sY939s2fr9J3VJzx5ua9fvsaPMD7hL++c2fNxp/qEH3EctCKsbqTxadYj
J3LfnjVQfZp1y2eKlf3TT33C8w77+qF5mPqEJ62f1tfxqvqE1xoXz9klX4zx
CS+bd6PLkoHq06xDv5huWPmd6hOe6XWqeyXuqk942JCWkxJEqk/4kAxXE/X9
oT7N+tbAWpuWr1Ofph83rcO74nXUJ/z+s1L3PIPVJ7zQ0lcTfWerT/jEc3d3
DIn7HuLTrFOtsnnwx53qE37vYPjOR4WjjU94jRTOpT/+UJ/wVu5jU65qrj7h
8aOLvP22TH3CZ1yY6B7ooz7h5fq0cvF8qz7h33aMOfT7i3rjcVGeS0N+5ta6
x/jlSRNNPbDD8utYcP+l27Welqyg1+d5WbZZjg6eenteQa2blXE9ebvg702W
S12OTO+6UetjLRan8ap0a51lyJx+F76n0zrY0IO9VzXduNIS/8mnLnWnar0r
+84RH84FLrW47fjokTMo2HhbOWb80DFx42y/8NPwwy5av8qdtGCPaXHjfHI8
Wb15B7ROtXPtrdYL4sZZ7d7tC5++aT2qS7v3c4tY13v3nZl0ZzWtOw0eV39g
1bhxNiwT7eQ0VutLbuvXN28RN858Gz5FFPEIM75Wflr+PkPCY5ad6WJCnfzV
G49fynermqWT1osKzK3+JtegI5YBlWJrxwSqt/Db6Z/mz+tlmV7Q7+dsZ60X
eWUNCSgScMgyZPfyC0dvqLdPF8av65DmoMW3tPfnnlW1XjS7TcFFPcfut+x+
dajUsG1aDxxwcPOmjHHjrJ4sW0zfbFrfKPlt9JpsceM8FvXz/vRBWi96X6uJ
W+64caZZV3Js0uNaL/JekHdBgbhx+i3J6rPvh3qbcO/TjKJx4/wTL6ZDuopa
L5pTceXnjnHjdDyY8qLvAK0X5blWM6RX3Djfbg8qX8td62/rjv6IGON4wZK4
SfxayaZovejbYb+777Oct4TWWfrfxyRa3+Axy+lm8xIv0nrR/LpjLv6Yesay
LGz2+cfJtF7UanGT03/LnbaUT3Unstx0rRdle5D3aKKQk5afIzNXj3yvPl/l
/rw/+X8nLLN9Pq5921nrRQnd49cdGzfONcvvPRt2W336DX489UPcOFOum3Ol
UUGtbyz19hz3JW6cL5ZWGdlvuNaL2v6ZOfxn3DgTVkt2aqa31t+yNuzoGs/p
tOWMa4e+TWLV56tlpXoljhtnYt/9zTsV0XqR5+MEXVLEjTNLyWFJKrTWelHo
0P3de/W8bBl0vMOWN/m0vtE0Y9ZnfU77WhLsdXd8u199Hjw+o2P/zL6Wz6ti
HrR00noRjxfOXnNcd0R9jovXofXg6xct+bJ6tXItpfWipzt8bg0teNHiHxo9
bv4Wrb9ZGpdsMmKKj2Vr1/bJb6fSelGbZkeOWcfZpVfBfsWnaL3o6PvcTn3j
xvlloG/LkAD1mWXV/IPWca4c3feDTwGtF42v8rHEwLhx5qhfttAkV60XPX3e
1cM6zrCENz/57db6m2XmtULD4sZ5aGaXX12eq8+dRZy2Wsfp1jui+pXkWi+q
VLxbQIvlfpYP05qVX39Gfa6/da1l64jrlgwudc8fbKL1oj8jnG62rX/dUqhm
osVTA9RnryybGjlvvmZJcHJEklbOWi/iccP8oQ8P31OfDt1H1e7S9qrFJVPN
ZJ0bab1oacIXZ7t6XrEEBmyPzHxcfW5N0tehZdw4r9buXNSloNY3Eu67s8s6
zgfNRn0NmqT1or4tqxZsFzdO386jgl1uqs9rH3dsto6zUblyLgszab3IYW3a
XJ3ixlmoYqVvju20XrS0+sS11nGGtkrSIc0irb99evUuU7e4cSb7/qLTzRPq
c+7btA2r+dyxdM3TKfmvllrfCJs38VKNnHcsnV+sSp//lfpsXjLIUmvMbcux
zu0fNR2k9aLDd1ueqXPnliU03OnllvfqM/OYU5XrF79lSVws0n35MK0X8ZjQ
O2bthRD1+fzsMscmz29YFu5PsSCmo9aL3l/Issk6zuUT34amv6A+2/SdkaNm
3DiPXW18LGcOrW8cTR652jrORZNeOT0YpPWiLAecM9aNG2e+iol2pvFWnxPa
+CyzjrN4x5EF1nxWn8+/lEjVKG6cv3w//61SSutFdf9bPd86zvOxHTec6qL1
oojbPZ6vGH/P0r3E4GXXAtVnrvyrc64qfM9SPkXaa58Ha72oxagbnVbf87eM
vn6p6LAf6nP65Xhr10zzt1T6MXhJhZlh/5yPKj5cW9LfcrP3iFqbEmp9453r
oEzrn9y1nC7r5F1pqtaLeEzwdcniYx/U55Ya75KtjBunx4bZs8a10fqG/7Ls
Da3jnF15bNQiT/WZ4E2LOdZxXj/TM/jPX/XpVH72Jes4y/0M8t3VWOtFfeae
jL8ubpylW72P6rpQ60WrH0dbrOP0iC6dNv5F9XndodBU6zgrLxg0btB79Zlx
f5Ws1vEGHU3mYp1v4LPen6HtF529b/lwdeeRl+/V59hWO1YsHnjfcmGI9+PV
07Ve5LHtif+SrPct6TcuLXQ0hdY3Aj+lSbfMN8ByuHyxAcOXqs9UDeu1cBsR
YGn9KH/a+im1vlFz3YTFy/MEWEI/OG9+PF3rRTxunvxlut8T9fl9cOx06ziX
Z+hYtnUFrW84nC963jrOL1FPy96cp/WiLum7/raO0797krpZ/dXn4t7u1azj
bJWxd7ls6bW+cc776gTrOHeXf5jrXEOtF31I+vu4dZyVPHsV/TNa60XVFmRo
Pd3jkeXnkjornB+oz8FPGy6zjvfmztsXrPMQfG4qNeXWzASPLF+qP4nq/Vt9
3p3mlXL2wYeW4kVyxpxYoD4T3AtpPMfloWXQsqiS/6XV+kb5Qrnnz03+0NIi
3syoIUvVZ7+xba7MO/bAUnlIma7XEmt94/3XVZOt46x50HVK8/Za3+Cxydwf
scsOqc82G+J9t44zb5mc02om0OvxWdEVKlnH2WzlnoxVm2h942itQWOs47wT
7nVl9Hz1Gey+5Yh1nGOdYnvGnlGf2YMefLCO07HLis++Ieqzd7+IhWNrBVri
byu+tW49rW+sPJHv+rioJ5bxf2rv7v9MfV5J4ZzUOt5l9d93s85D8PnNZVH9
iQ2fWK42q//Z/4/6dDh4YdakT48tf2pnP7drrvp0if/FZ/LWx5YilZK0KZtU
6xtL25aIN7XFY8ugbAsTf56mPrM9GHrMOk7fJW/H1/ZVn42L7vhkHeeXChmH
DMuj1+M8bkl3tHb3oepz3400I6zjbL+oa9DXI+rzWe56B63jrDHxXo2qMeoz
zfAJUdZxdis107FuPr1+rH3xQAnrOL2izn5u0FCvgxbV9fUd/PiZJWe7sPfh
HurzzKrvCYbOeWYZc/NIVMq6Wt+IDilde1i5Z5Z9X4rXyv5Efear2meadbyh
4+JnsM5D8Nlm8bqzIxbHzaMzNCmY6qP6nP3i9s+RVZ5aFqUKav5ntPo8VjZR
1dHBgZYeiV3KXo5Wn7W8Gr63jnOrX5dvbwvr9eOIRFNKW8fZrEzNZNmnqs9t
zl6DreN08+63oPYN9cnjqxnnGzZPrdePiX7mCrOOc0Vuj5Wt6+n1Y8XmbYqO
ihtnld0zzi8erj5dN8/rax1noSMe3l3d1eeRfBv/9Br+0rLnSs2KWxLo9fi7
kfeq98n90hK52+f5tU3qM8vlpJP6+r2wBDzL3uNFRb0eb5S1xsl+415Y9pfr
WTjHdfU50XXk1/5x4/XxHB5inYfgc//p3RVc/Z9bpgVUTFHtkfp8kfr5qIFT
n1vO3MmfZWVrrW8MWJbPoXfcOK9+anZl1AT1ue51+wHWcabM3bKZz2316ee0
aJd1nAWLHUyVPptej/+cc+GddZw+C9Ns6NVeffLYe1P8h+Fz1Wc3hxI9reNc
4fn6ZlZP9bl8co/N1nFe+1QxeNo19Rn1p+qGkoleW9I0SnLArZX6TOLRvppn
4CvL3VY+nx9Gq8+8rYcHljr8yjLjw5ss3+erz8o/Fk44MO+VxX97yTY/c2l9
o/X2ndnKdHtlOfyy8A3XPepzYLMLx63jzd09/gfrPASfsz4HOpdN+cpy7/PR
Il671WejY78OW8e53K9u09rn1GeP7llbW8d5ZKz7SZ+0Wt+YkKzce+s4547N
OLZKO/W5/HCzZdZxTsoXXP7KIvW5t3P/0tZxlkwR2/buMfXJo2vjsBwpH6rP
5/s3DLaOc3DGB6fahKvP6UOKniza6o1lUdSbDpnd1ee6LHU6WtcrFU7t1qBu
Oa0XeZ13+Vrs92tLj1zFi8y/rT5vDBi32rruKyDewf3N+6jPd+ndKzjsfW1Z
k+f39Pcf1OfvU/vv753+2rI79ybP2mPVZ5Y+V0dZx1to3p2B1nkIPp8WCrtt
HWeV2CneDz6qz4+3Eg61jvNTlwSRAbXUZ6pxeVIXjxtn0bzLs5+dpj4L5auy
3zrObqcOrw45pD5rXG/b1DrOGyGHB6d+oD6dRw4Nt44ztcuryVWj/q2zvezp
G7jU0t6/y6gy7m+N5/nCD4YnPN3MX9fbfGO+X91nWc9eer0/Qv7/OcJ5PY+D
3F7vc/qp/x1nyH+vlY7NDz79o5y6Vv330VU//9Fxsv5n792HVw5MfGs460BP
d/Je0+6f9WasX8vifeqk4z/rzXj9K+cC+yv7ax2M1xda4Rme5Z/1Zrw+V+Yk
T+oM0DqPWRc5d/j9pP+sN+P1IWlr3+rxXetmpo87x0O/6OvKTd/M84Dik2Zr
XYjXO7b3aHLon/VmvH7mtn3ZxyTX+gavv93l3TyHf9ab8fqjPTY+LDFf60i8
PlXQ87Jj/1lvxuunPZ0S+WO41uV4faujw7P6/LPezPR3l12yb3Gg1ut4/b7s
Gbr4/bPejNenPLDk3qvqWo/i9TeHVNhd5Z/1Zry+6qP1bbas0TqV6UPKnbXK
7n/Wm/H6P53y9usbrnU/Xt+92ORPa/9Zb2b6uzNte32ivH5veb135QY1Ik7o
95/XLxyb6W2asfr9Z93x51MLF84K/qfuKtx/WoJ1m2Zp/RA++Ve6Nx9zaL0L
XvVW3SqD92v9EB71rVPTyEpa7zJ90JnPZmt3Vr8P8GkPV/WdWl3rXfCMs3vN
txTRehf8VpdXA1u4af0Qvq3KLYeCH/W/l+krDyx9akALrXeZfq9KW86e2ar1
LnjzhVmdPSPVM9zrWOjkY6W13sV67dt+O1K+ctP6ITwm95vtDUprvQvunWTR
lfhX1Ce8wa4WF2M7aL0LPt25bNJvb9UnPHXWH6MjXbXeBc878OfeXWHqE55p
05mTs++rT/jWj2vu5bJovQue3Dmw97htWj+EZz9ywKH2H/UJd241YUzONlrv
gu/07rty/Uatd5nxlBhXpN4r9ck6d7dye1o1ddJ6F/xp7h3ZUvmrT9N/ULDJ
o5quWu+Cv6qSevepn+oTHrbdp2v7+VrvgheNHL/lTRqtz8C7dk+U1GmZ1rvg
DZ5E1ss3SeuH8ER1huV1CFaf8BHlFgYEN9Z6Fzy4+quvCXdp/RDueKTfq8I/
1Ce8e93Hz4Lra70L3idew6MP52u9i/6Ahn2u5NlwS33C8+4pU95nkNa7TH/M
jif1xybS+gw829qSw+es0XqX6cueP2zoyUJa74KvnbKjz7N96hPevq7f9WMl
tT4DP+WepeWY7FrvgrfOv/P1qdlaP4TvLvh5j3uo+oQ3i9dzyZ56Wu8y/d1d
o5ftXKv1Lnhyz1nJirxTn/CM1xMv8S2i9Rn6KhYce7JtY3etd8ErBbe9WuqP
+oQXi/o7buAa9QnPV7NHYOoSWu8y/YsjHj67f0J9wiuMa7FzSi2td8FftR7q
dMVHfcKnPPPvFH3gn/qh8HMu3jvz/FM/hP9NdTLxvila74I/GRqwucYT9Qn/
s6R3vckltd4FT37B41rycVrvgh99/+TY/BP2682iE9SMTR1mv97s8eSR/6We
b7/e7E/2fZaA/PbrzdKN6non8TH79WZOi9aMbV3Pfr1Zk8+jN/S9ab/ebP6F
RyU+Nrdfb1bjYsEl36rarzdrvb1Ew7077debraj7O9eAZPbrzZK2XfXhYS/7
9WYFKqxPuf6o/XqzjO0mP2n/O8puvZlH0idPj1bX+gx9PLNdE+TY4Kr1Lnj3
soenpEmu9Rl49RlrA7tsV5/w0MltW2aqrPUZuG94iu93rqhP+MpW+weVbKn1
LniSYU0W+91Vn6bvuHLNQvHOqk/4mRJbzh8povUu+OUJSZslnq8+4T0e1Juy
/NU/9UPhERtP9P9SRusz8Ev1B2d6PEbrXfAXldJ2CT2sPul/Sn3k2NqgV+oT
3ifJtDu3pqtP+JPm6Tdsyan1GfjNHSscAw6pT3iWHfveBFm0PgP3nvj7U49r
6hOeOfXFj/6NtT4D73U6QYqh5bXeBb9dtNnSZRvUJ3zC5GvVzv1Un/DJDt07
LWqt9S747volEi/ZqD7hLXvH1uj7Un3CXZO0DriVRa+P6BvrumRZulEttN4F
P9d28ogH0f/UD4W3PPQub8mF6hPeIkUJj5t5tT4DL+OVq2nOg+oTfqlZymTz
Kml9Br73XedGc0+oTzPOTA8S7t6iPuFrM32v65ZE6zPwis1mhd/upfUu+Jp5
JSYEHVWf8I5PG+zv/kt9wud6P8v4vLJeb8L9H5TKWHCg+qTf7syVm2FHDqtP
uHv3rHfWtNH6jMkRCcj2elS0+oQfDuo9cfxs9Ql36Ox7PzSj1hNMn19ETM4s
G9QnPOPIM0275NJ6Avy297W2qeNrPQEekPnE9OR91Ce80JQfw8afUZ/wZh+q
v/dLrvUEeMPjB5rMaKr1BHgBj4UDqs1Qn/APnsnG3d+rPulTbFRt16RvybU+
Y/LGjs06PXCf+oRfSlo7xf2GWp+Bv5vz5GflF+oTvn/D7m/eQ9QnPL37uzwT
PqtPeI1PFQufHa0+4bM8VpxP0l59wivd3VSw01H1CW+/ZK9rmmRanzHjmbu4
9+yW6tP00x/pO7bcQvUJz9Jpa45Lx9UnfErv7xlqPVafpk92b4LcA53VJ9zR
revh6d/UJ7zJ1G7tF65Sn/CuPWKiO5TUehf8a/uIJo9Pq0/4p3Rz56Srq/Uu
078c1f90Zh/1Cd9faOrnFBvUJzzl3369f31Rn/DrXitaZ66vPk2fctHit7fP
UZ/w7Utz+uU/oT7hY9YePtf9mfqEzz56LeROrPqkn/HXxj39sq9Wn/CYumkC
X1bW+qHpw503/vXBh+oT7pxyyJuEQ9WnyQdKmDjfqt/qE14pf8nMVWarT5O/
kufr6SfxdL0ZPNnSu9suPlCfJg9gg1PsmRJaP4Tfd7m9adYo9Qn/8PPknN77
1Sf8xB7nxD/+qR/Cfd2Xppj53n69WcXjLY+t+Ge92Y3rze5NObDDUnCgb4Gz
27SedmBFdXfrerNVVWcUmlJA62am//jsmsp1Nmh9LLpF5UIVb62z3Hi8rWRs
Wq2DHZN+1dVFMjgPnaL1rl+R0Q1PBS61+Cfcd8D9na43C5FxTnI6ftm9k9av
rso4z2RvmXHPPq1T7ZZxtpu06f7gL1qPSiPjzLbA4dzsKlp3ui3jfPl18IJ5
o7W+tE3Gmb7Hl1rfdul6s4EdhyW3ruNqnipjk9p37debVS12KSB9B60XNSvQ
/bp1vdmdFbVaJH2s3mom7bDHut6s3u3XtRO01XpR2cgWC6zrzb6nWD7hzVX1
VnfbknvOaQ5aSpyqM2FORa0XFR08xb3H2P2WQwkTZ7286Z/1ZjLOrK9/NNyV
VusbHWWcEVcTv7XmI+GtkYzzfFS6tFEHtF5UWcYZnPr7mRIf1VsxGWf5UXvH
tyij9aIqMs5XHeI7Pv2nnlxExrmzac7+NZdo/W1YtseJrOu4nk5JMXPdJK0X
3c7sEWZdb+bpkyTTgYT2682uBiVL/mOO1ou8Xq7ZY11vVnPO6ertEmh9Y4fv
sgXW9WaTDgUmWD1e60Wr98xzta43e7/7W+J1oepz/tJpja3rzWJC9g6u0Ebr
RUNlnDsW7/a6dU593pRxJvfoPmVuRq1vnJFxRhxc3/lpD60X7ZdxjmuXYtPE
XVov2iDjfPB1V7bE79TnchlnxgodXyTPrvUixtntwcrG8eprvWjP7G+zreu4
5pYZ/DthXq1v5B/36ZN1vdmuwoMWDvNQn+td3/exruMqtzlxH4eS9uvNMn8c
tyzeXvW5uEVoPes6rpCELXL75td6UeLa745a15t1Xl5jdJMVWn+b6vSqkHUd
VyuntckH/lGfHjLOzOlaBbv003pRPhnni18/d0w9oz7Xyjj9S3UMr5BS6xvp
ZJwvi2fuVLmN1ovmyzhPbOoXXHa51osSyDj/2/X7x+mr6pNxJq/gdKvnZ/X5
9n22xNZ1XJcrNg3ueEp9dnmbaYx1Hde2zMOSl6iv9Y37D9IFWdeb5S42+lY/
P/XZ/Fqq9tZ1XI97jHhxo7H9erPdHcqFFbykPi2eiSpY13HlzHKpuaWi1otO
bI6307rebOqhBoNi/+n3fCPjXFf7frh3Yq1vdJZxvn+R3bVAV60X3ZNxOj7I
OyeLp/psIuOc9m5muVaf1edFGWe+VNsbzK2g9aLqMs7iP1NU7ztE60WM8279
+5aFG7T+lrtrlTnWdVx5FxV636e51jdWtazw2bre7MfyrnX2PVGfaeo49rWu
4zr9LXT4mB5aL5pXvtQD63qzQlfzRYx+rT7jFS1e37qO60nFwrNcXezXm9XO
8XZSbn/1GZsyf2HrOi63Uhl79bJovSiXjLNu7HyfOhvU50oZ56tcw3uc/6Q+
U8k4Ky1re8WjvtaLZss4HaflX3B5qdaLfhX5v3F2j/Fq/OSO+hwr41y0IW/7
bcm0vsE4hzic2PugstaL9r3bn8C6jut6vNpBIY/UZ+jzvVWt67jCv7ezHOyr
9aJCjzxGWtdxFXbbOytDtPrscXfXXus6rv3v77t7Ddd60cbrO95Y15sl2p/Y
rW6U+gy8uC2HdR3XiulZKs7vbb/e7MLmnI4tAtQn4+w6euyy4cW1vhEi49we
tHTnnplaLyoo48w3Ld3GAvfVZ3cZZ5vlM8fvza31jf9knMmbnP+VvrvWix7L
OH8+9R3gsFZ9Ms5HO8fuu3hNfTLeyTLfwGeiTKcnWtdxRf12XRgaqj5rpz7p
ZV3HdfhCrt7RI7VeNDXJ8XDrOq4LDu43Hb+qz1N/jxawruMqlnjBr45jtF70
5ZtXZ+s6rv0u17vnjlKfTrGH3K3ruBwTb+/RsJv9erPIjyNj9u1Xn4zz67c+
nSsl0fpGLRnnh9sDL57roPWNyTLOA+WivmXbqj5PyDg7XVn4ouA//Z6fZZzt
Ci4a6ptD6xuMc1yvLq2Dmmi9KKjVrZnWdVylffe2T3xPfRaQ8YbLPASf3epe
j7Wu48qYoL/rvmj1ub76VQfrOq58O/IvXjFa60WPKlzuZV3Hlf7jnocNPqnP
TGUurbeu48ox8HyVUUO0XtSqmM896zquS07TCgS+VJ+Mc+eXW6O6FbZfb1ap
u/eFs1PVZ1cZ5+k3NaqdvKM+18k4cw+Pt750Nq1vPJBxVvOttTVZR61vZJBx
emZ541drmfpknBX3HW338qz6TDDv+UXrOq4Ult3hfrW0vlFz+tMf1nVcJZNm
7DwsQH1OkvEyD8HniZGPBlrXce2aX3DswFD1+WnQg23WdVzdHgyosMlV60Vl
+wYEWtdxOYW79cryTn0O6eafwbqOa/iLh40WddB6EeNMUPfCgSh39ck4B2ZI
1c0tQn3yGOq8fWaLalrfOCbjfPT4za6UM9VnrIyzb+1eTc+fV59lZJwpzg2d
N/6T+mScddf+WN49n14H5T0blWDI42eWESXLOTnvVJ8uxyKqWtdx9ffdvMW3
il6Prz0YNtK6jitzznmNf11Tn/dZxyXzEHym3xb05n/Xm3ltrvTmvvps8d/b
HNZ1XOnDw+rMb6X1jYUrX7exruOa1fTw74e+6pNxfmkxctOZT+qzi4zTo/ii
dgmb6fX4GhnnhpGHQ86ts19v9qNy0/OPnqvPtDLOhdmTjmqTTa8fm8k4z5RI
8bR9Y70eZ5wV3MLOlhqhPqt//F3Huo5r0O2AFT//qM/xkT8nWtdxPX3sV9t5
lfr0DvruZV3HladpyN3RRfR6PPbF13DrOq52ncoPG3RYfZaW8eaXeYi5v+b/
sbN1HVfB0kWr1fRSn7v9Prhb13HtXvD5eNmiWt9gnDFunds6NtHrccZ5IfDN
4FGb1edRGecLh1WjOoWrz/cyzqy99va462C/3uxa8LM9ET3Up6uMM9OPei7R
i9Un4zxQL+ps84Pqc3+meT7WdVwbKryYGdZM6xtN0s/tal3HNe9vsX49gtRn
WOo5363ruC49STl92Xj1OS/F7FXWdVwOc464dUms9Y3CSWc5WtdxvXoYmC5q
ofr05f6AzEPw2SveDFfrOq7LjdZNSTxVfTLOQndzbrzorj4Z5/PqC/52DFKf
oTLOsZM39V5VUusbc2WcfW+XSzJogPosJOP8efTG1Pjr7NebpVwd5OlzTn0y
zpIvO71rF6g+T5dZ9tq6fqn92RbNNyxVn50kH6vJuz7rPxfTetHXYkuyW9dx
jXn+afCYc+qTnLGbHZfeadhcfZYvsKi1dR3Xi2Y1G7reV5/38iyMsq7jcnWa
mytrW/XJeJmH4JNx7nzg45X5tvpknD71850ZnlvrRYxzwskRIxv3UJ+rZJyO
btUqb1mtPp1knOt3nZ9+7oL69JdxPurVYGOjl+rtvdRn/r6vkCP/P+vNYoS3
/PrW4/xdXW/Dv+u7qc3S5930ep//v59w2/Vmc4slPzj6k/53xMP+eVeblPmt
nLrWvgi3bjt+6zhZ/3Mg9+GduybqftD8/+SbsS4Nzvo0cpTg5FCRBwQnT4lc
G/P9klwg8lnMulHJtyFnBE5OC/cv4eSNkPsAJzeD/AI4+Q/04cPJMaCfHE4/
Pn3RhktfOf29cPqj8Wn6+CX/DZ8mH07y4kyOFXUdye/Cp1n3JzlU+ISTp4RP
OLlA+DT3dSXfBp9wclrwCSdvBJ9wcjNMPoJw8h/wCSfHAJ9w+vHxCaevnHWT
JpdL+qPxzHGI3Dw8w8nZwzOcPDQ8w8n1wjOcfCo8w8lZMvk4wskLwjOc3Bs8
w8lvwTOcHBI8w8nTwDOcXAg8w/0l3wDPcPr08WzqNNJvjmeO6+QNmv3shZNP
iGdzH1vy5fAMJycNz2ZeI3lfeIaTW4VnOPlLZt2DcHKE8GzqdZKHg2fTXyK5
LmYfSuHkk+DZXB9IzgaeTe6O5EXgGU7uAZ7h9O/j2eT0SE4jnuHkOuIZTl4f
ns36SsmdM7ljwslPw7PpT5IcMDzDybMyed28v+Qy4RlOvhCe4eTk4BlO3gue
TX+P5JbgGU7+Bp5NnoTkSODZ9GFIHgKemXeQb4lnOHmYeIank/xDPJucAMnx
wzOcPDo8w8lVM3lkwskHw7NZfyQ5V3iGk9eEZ5PrKblDeIaTn2P2uRRODozZ
r5HPJXkmeIaTy4FnOPkSeDbzYskFNXmjwskRxTOcPEk8w8lFxDOcfD88w8mp
wzOcvDU8w8kNwzOc/Cs8w8lxwjOcPCI8w8nVwTO8q+TD4BlOzgme4eR14Nnk
bkqeKp7h5K/iGU4+J57h5EziGU5eIp5NfpXk/uEZTn4dnuHksOEZTp4Yns36
GsnFwjOcfCc8w8kpwjOcvB08m/4AyY3BM5z8EzxznUEOLZ7N+inJrcUznLxT
PMPJ7cQznPxJPMPJUcQznDxAPJt+O8m1w7Op00s+G57h5IzhGU5eFp7h5D7h
GU5+EZ7h5PDgGU6eDJ65biO/F89w8n7xDCc/Fs9wclDxDCfPE89wcinxDCdf
Ec9wcgLxDCfvDs9wctvwDCd/DM/wa5KjhWfzuSQPCs9m/bjkGpk8IOHk8+DZ
5B9L7jGe4eQk49ncV5Q8XjzDyZXFs8n5k3xUPJt+L8n5xDOcvEo8m+t1yV00
+YPCyQ80+7JzP1ly8PAMJ88NzyavSHLJ8AwnXwvPJn9LcqLwDCfvCM/UFciL
xjOcfGk8w8k3xjOcnF48w8mbxTOc3FQ8m9xfyf/EM5wcSzzDyWM0+YPCyRXE
M5x8PDzDyXnDM5y8MjzDyd3CM5z8KDxTpyFnG89wcrnxDCcvGs/wRJJ7jGez
7lLye/EMJ4cWz2ZdtuSp4hlOLiie4eRb4hlOTiOe4eQN4hlObh6e4eS/4RlO
jhme4eRx4Zk6E/nk+ISTs41POHnR+ISTe4xPOPm9JpdWODm0+DS51JKnik84
uaD4NPU5ybfEJ5ycRnwaLnmD+ISTm4dPc19F8t/wCacPdIXkc1FHIqdrreRM
wcmbIi8JTm5SRcn9gZP/Q36NqY9Jjg05LHDyWMi/gJODQY4DnDwH8ghM3U9y
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
UnvRcVf7ecIY1xHHRp6NtJsPxBsfevfmcPv5wINzfxIPTWs/H/BJXaDheQ/7
+cClgVOSjatuPx8YGeiWraWf/Xzg3SSvqARt7OcD7apt2Tv0gv18YNnHA4UX
lbCfDww++7vgl6X284Fxlf4+6BgeaTcf8LxZ8lHHGvbzgQS3j2VbP8/+vP+h
0NCXOS6F2tUBuJ9iOx/o5J5gyZgs9vOB8bE1AvoUtp8P9HD5cXHP5TC762vu
p9jOE+7XCrgWNc5+ntBqkI9b3xdRdvOEw5emDsk+3X6eUPrTimp++eznCfkG
O9UefCbc7rqY+ym284ejkaVdjtyNsps/NL918Puz8vbzh/mJxuS8uNR+/lAi
Y68t9+7Zzx8q5hqR7Oso+/nDw6MrU6RJZz9/GFQ9nlfpXRF218usQ7adV8Tb
9Saobz77eUXj8bfGnpthP69Yka3QyL+Pou3mFe8SL0u0rID9vCL2RuCVbLnt
5xUOhdJtPnPOfl7h8rlblTZd7OcV8+Y0aOD3IcJuXjHh0vVkZWfoedbsNy73
U2znG4cHjii4t5/9fGPop8jBB3zt5xvXT+68tTeL/Xxj/t6XR792sZ9vWLq3
80+/MsZuXrFo1IJSK+PZzysiHbJ0PrnRfl4xIU/WkBXl7ecV634n2ZzM135e
UbpAEv+MTe3nFTXuzkvnuN1+XjGtwtNcfX9H280rTjb/WGhuE/t5xVwfz9A3
C+znFVtW7z4c77T9vGLX75+l7j+3v58yU+YPtvdT1ss8wfZ+Cud32/spN+U8
a3s/hfOX7f2U+HKc///6X2zvs3Dcs73PMkGOY7b3WbzkOGN7n4Xfte19Fn4X
tvdZmBfZ3mc5L/MZ2/sszCts77Nwvra9z/JQzmu29SLbfVrhHJ9t77+UkeOn
7f0Xjle291+Ky+/d9v7LQvld2N5/mS7zNNv7L8yXbO+/MA+xvf/C+dq2TmW7
Xyqc47/tfRmOt7b3ZThe2d6XCZffte19mZwyr7O9L8N8yfa+DPMK2/qV7T6k
8IFy/Le9X8Px0/Z+DccZ2/s1zNNs79cwn7GtO9nu12nmfXJ8tr2Ps16OY7b3
cYJkXmRbz7HdpxLOcc/2Pg7XI7b3cdLI9YXtfRzm/7b3cR7LfNv2Pg7zVdv7
OO1t5m/mOknmRbb3cZjP2N7HYV5hex8nvpyvbe/jHJLzmu19HI7/tvdr4l35
v+sp2/s1Y+V6x/Z+DdcXtvdrSsr83PZ+jZvNfNXkJ8g8zfZ+TTOZL9ner2Ee
Ynu/hvO17f0azmu292W4XrO9L8P1ke19mUlyfWF7X8Z2vg2fJ/M62/syzJds
78tck3mF7X0Zzr+291+4XrO9/8L1ju39F9v5v7mPI/M02/svC2Q+Y3v/ZY6c
923vs3A9ZXufxfb6As68yPY+C/MH2/spXI/Y3k9hXvE/CHM6rg==
   "], {{
     {RGBColor[0, 0, 1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmXXcVFUQhi+rA2N3d4sKgiAgId0gISWChHRIg4CIdKt0iXQj0ilISYOk
hImJGNhi+8zvvX8c5vkOu3d37z1n5n3n3NG4XfXnMkmS9OCf84j3WZJcQdzK
3+cYBeH74wX8Z0lCLvg/Rgn4YeIfjEJwduKlvKY6/Dh8CVwNLgIfZNwBX0bM
xnwFOD+cFS4P54P/ZRSHcxK/J/7GOMO4m9e0ItZg/n74ObgOfIhxJfx7Fl0/
vvOv8GH4KvgPODuvbwc/xdzvjMfi9xGvYf4puDR8H9wWrg3fC7eBa8E3w43g
SvA9cGu4JnyEcTX8F9evx/wqeBJzDeC18JT4HfBEuDdcFp4KD4Brwovh0XAx
eAL8IlwOngYPhMvD0+FB8BPwXHg4XAWeB4+Aq8Lz4ZfhWvCb8Bj4GXgN/Brc
HN4Mz4abwm/DM+E68FJ4HFwbXgKPhevDq+HJ8LPwBng63ATeCM+AW8Pb4flw
K/gdeB7cFt4JL4TbwDvgBXAzeBM8Cz4a9x3+h/v2Hnwt/B98lvgF43NGO16/
jjiV/+8Gb4Hnwl3T3zIHbg+vh6fBD8Ed4XrwA3B7uC78eTwz+Grip4y74CuJ
Bxi3w5cST2XT9/+a9f4Zf98NX0VszHUWwaPglvByeCL8INwBfhpuCC+AX4UL
w/3gNnE/s7IuY+1yzUbML4RHMv8ivBteDLeAl8ET4N2M6+EsxOq89/LYa6Zn
F89ofHxPxp3wFcRP0n10OfFDxi3wJcQdDN6W/Mn93Bn7Cv4b3hX7Df4X3gbH
Nv4Ffifd67/B2+Hz4XPwCfgG2Ijvxh6GLyTuY1wEZyXuZVwIn0/cw7gAzhD3
My6GnXiScSOcjXgm7h18I/HreE7wDcTTjOzw9cQfGXngO4jP8cV2wYvgnxh5
4TuJZxm54duI7zNugi8gfhB7Fb6I+E2sCfgm4g+MR+Db4/rxnBmnYy+dp/sw
gPhzovX3TaxBJvMR7yJ+xSgA30P8kpE/8lB6/+M73Br3jPfXhktEXoFfhbvF
WoOfhxvFc4O7wQ3T9dMHbgl/zMgF3xLfkfkhcHv4I8bD8M3E44z74WvjufGa
mnAxOAtcAy4K/8moDBeI58l8Lbh4Rrk0cm9h4l+RR+DHiN8yHocfIP4TeQQu
RPw78gtckHiMcR98Taw1rtkVbhD7Bu4CPwPfBneG68dzTnNs5ORb0v0Ye+Tm
dL/EfrwhzduRY69P823k2GvTvBq5vZBrXZ5jIRdxrek/4evSnBy596Z0j0c+
vxpuAVeHb4U7pXngKrg5XA2+HG4CPwFfBj8LV4avhJvBVTOqU5HnK6ZrLGpQ
jljLzDeEK8AO14PLwFfATeEqsQ/gZ+BysQ/g+nDZ2CtwA7h8/C64L9wa/p5R
DH4o9ivzdeCS8B+J1uipRLXvp8gJ6dyv6fx36d+n0/V6Ns2Z5xg/MA4zBnLN
S4kXc80ns+r/M8Rv09d8mcZf0tf/lH7eZ+n1Yj9clv4d858yhnDNg8SVXHMY
/Ak89DxdI64V1+7A33uJb/KaWnzetnhexBqMW9Pv8Ft6zSzpb/ox/U3P894j
xFW89/f0e8R3eIH548R1GX3OV+n37878UeJq5l+CP4A3wr3h9+ENcF/4I3gT
3Af+EH4bLgiPjM+Ef2GUgR8h/swoDecm/sYoB+cl/sooC+ch9uO9H8Ob4f7p
fdiS0W86k96rX033Ku5ZF8YBeHlG9SvmV8A94PfgNXBHeB+8BP6OURR+kNiJ
+f3wUrgnfAxeCxd25es/TPosNM/P3NBevOYEvJ65zvC78DK4iUu73JlVvz3y
T6vIAfAAOITfuy4NsYVCsc+lLTbBu1za5S34BbgkXJDrHHbpjO3MH3Hpnh3w
QZce2gYfcGmLrfAhl7Z4B97v0kCb4Z0unbQe3u3SQBvgPS7dsxGu5Mr1F/K5
lV25/iK4oqvGXAA/4aqFF8NVXfX+UriKq3ZeAveES3DNx+C3XfliGdfv7roX
+Znf69JYbzNfzaUJLmN+h0urrWN+vSuXLYa/8XRtwWc8XYvwMZfe2g1/7em6
hL90Pcvj8GnXMzsJf+/peoK/83Sdwd96uo7h91w6bBe83VVv1sJHXVptJ7zV
VW9Wha5x1ZU18DpXzn0DfsuVr9+E17py6yJ4gyu3LoE3uvL4Unibq56thje7
asAKeJOrBiyHt7jqxEr4SVddv4L7VttVg6+Bq7s02eVwN5dmehRuDeeAs8Od
4fzwI3BXV97MC9d1affr4U5wPuZzwx3hR+FccBe4AJwHfh4uAueDW7p04X1w
Gzgn/ABc3+VhboKfgUMM3Qw3dnmD2+FmLm9wN9zc5T3ugVu4fMW98LMuf3IH
3MDlZ26BW7m06f1wPZdHuhFu5PJIt8ENXV7oVvg5OBf8ENwWfhh+EG4H54Zz
wMVceusf9n5xlw77Fy7q0nl/w+VcOjsrr6/g0nMO13FprGvhWi6ddHXkZ5cm
uxKu6dJqV8E94KJ8bgH4cZem/Ivrl3dp92zMl3Dpwv+Yf9rlFW9gvj2ch/fm
hDvAeeGHsyqHn0vz+Feu/H6CNfOUS+ddx2vKuPzb+XAplwbNApd1+S6DS7q0
Zojc0i4feB78hSu3HuOax13eYw/8vsuT7IdnuTTTeHi2SxtNgGe4cv1YeKar
BozLphoVtfnrtC5FfQqvUpHrjSb2DP0Fj4V7wZXgMVG74OmuGjOG61RgflQi
jz3NVW9GMz/ZpS9fhue7dN5r8DKXXpkNL3fpmDnwXJdumwRPcmnWEfAUl7Z7
FZ7j0nMT4ddcWvYV+HVXjRkJT3VpkVHZ5DejJnbn72rwJLgPXB2eDPfNaN+E
3gvtlyPVWqH9Ys2GPgx9G2s29GFoxdijveBmGe3L3nCLjNbUQLhdRvl4KNwx
o9oyDO6U0XoPzRz6Ofb3C3DTjNZRT7hJRuurB/ws/DQ8Cx4G14CnwP1D/8S9
hPvBdeGZoVvgFS4NNzfWHnFG1OvQAvDLcNeM8tCLcHO4FDwc7hwaAR4Bd8nI
R4dPH5xRvukPt4WXurTjLK7/pksjzoBHuLxlRdbqKy5vWRl+2eUJK8FDXb+n
HDzc5SErwK+6vPET8GiXn6wGj3L55KrwSJc3rgKvcung+XzuOJemHwKvdunm
BfApl1Y4An/u0lXvwSddPn8f/IHL278Ln3B5/r3why6fdgD+yKX/DsKfunTP
UfgTl445DH/s0jqH4DUu3b8QHuvy5IPhMS4/PAge5vLY5fktK116fR7zE13e
aTg83uWRhsKLXHp6KvyGS69Pgxe6fNrr8GKXRp8OL3D5pSnwPJenmgwPcK37
knzuQNcaKgUPcq2t0nB/1z4pAfd2rZsi8ASXfxvGdYa41lxZ5l9y7f/H4SUu
bzCT17zoWk+Fme/lWmeF4H6unFIc7uvKKcXgPq68UxQe7Fq7ZbJKa55ONXlT
Vw/rrqhN4aMS5bomJm0ZOaG+ydtGfqtn8raR9542+d/IV01NPiXyTDOTJwpP
2djkHyNndoQrJbrPbU2aOe7/InhcotqR3dIeHbGVSWNHfmsJl0p0z1ubdHg8
izYmvR3Pa5upbxa6tIPJ58az62Tys7GnXjL5stAwfaIOJVpXXU3+N7xdF5PP
jf34PPxkorw6xOQNQ8MMNXm60DaD4MaJ9M9gk2cMrdjZ5JHj2Q0wecPQS6tN
eSDyaH+T7wt91dfkB0N3DTR5zPDE/UyeMTRkd5OXj9y+An490VpaZspdsR6m
mfJk1NMp8KBEemAc/FIibTPWlGNDk4wx5a7QKvNMdSd01HiT/o8+xHxT/QoN
Nht+JZF22mHqO0Vum2XKh6HHZpryXuiuGaZ8GLpruilvR32fa6oj4TMmmDxv
6J+Jpv5YaLzXTPk/dM46U96Otb3WlJ9jba8x5eTYL0tNNSh8xxJTbQoNvxV+
I9F+3Gzqs8We3WLq3cWe3WTq0cU+nWzyO6GpJplydejA5aZ6EXtwgal2h25c
aKrp4QvWw7MT7ccHTL3l6FHsNPXxYg/2MPVnoqa8YOoLRe4dYepRhH6ek97/
uD8fmvq0kVfjOXZIn8tHph5y5NUPTP3Y0C1n4T2JfMQeU084/NReeE4iz7U9
XYfx7N4x9ZPDf71l6jOHr9lo6kuHv9sAj0/ks/aZesvh6b4z9d/Cm3xr6uuG
TvvB5PHD43xm6glHbv/c1FuOOjIV7p7Id3xp6tmG9/3C1AeOuvCpqbcctWB2
uobDy5yC30pUR6InG73ZqEc/mbxw+KAfTX45PNeqdL3FvvvF5LXDQ31j6j+H
zzpj6leHJvzZ5IvDW/Uy9V6iDu439dJ3pHsw9kJ43iKm3mzUl8qmXlzoqCdN
PbrQUTXgnIl0Vy1TbzB6SMNM/aXwRDVNvb7QWoXh6xLV4uj3Rs8gfHxPU+8u
alxd+NFE+vBRk8eP8418pv5w1Mro+Ubvd1DobObDwkTdrGTq3YWerAjfm0gf
Ro8leieDo8anezx6zO/DKxPV9DdMfcjw4ydN5xqhARbDgxP536Om84LQ1YfS
PRje87DpXCP86RHTeUT434KuvnPk/9KM2xLVx5Wmfmn4/VKmnnzU9OhZxW86
y/uGm/p44WfLmPre0X+Nvn38js9ceSByZvQTHjKdL0TPsKiptxzepzpcOJHf
OQFvTaS7Cqf3J7xMIdN5QfimOqazrfCt1UxnW+GJapvqYDzfknCORD2H4qb+
dvQodpnOC6Lu74ZXJNJyJUx96ehd5DL12MPHFTP1w6OPkdvUMw9PdyjdC6EV
Yz1ErQx/dCzdU/HsjpvOR0I3FjCdEYQPesx03hEeKn9632L9FDSdcYSHqmDq
q0d/o7yp9x49k3Kmnnn0TF4xaezwtr3hlol8cdl0ncezGG3S+eGRR5m0emiP
kSatHn2np0znhuE9K6ZrO/oAOdO9EL61iulsLvoGVU1njuFJB6W5MermI6ae
f/jNRoyKiTz1AdOZUWjFT0znLKGT28N1E/nr0BtR98PjHzSdH4WuzmvaR+Ex
T6U5NvRzA9O5ZPQcIveeTKS385jOGsJ7tjCddUYPoaHpTDP8b5wBhR4LXZbD
dM4V3jn2eez3OHd40HSGGH28r0y9wciTp03nR6Hnm5s0TOiu0C2hSaJv0M2k
JULbtDOdY0bP4X/pu8JP
          "]], Polygon3DBox[CompressedData["
1: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
F6dGqBVqgtr6gHVrEWt+pnUnc/6V+mMM8/tQrj+Ga853T3D90fAQ+Fz42ip6
THsHewh7z6PgI+Gz4bHwEPgo+Bz4mhyvP+fvNz7VELVEDbH20kPbqIycrbem
JqlN7mF7gy1T1K4j3ePwcYwfB18IT6iiZ7R3HK/GVdEz2jvaU86poke0V7Sn
nAufAJ8AX6LmwcfDx8MXw5PgY+Gh8AVqBrwu339gGR6QXtAwxofBF8ETq+hn
9Eadw0F1aJRapcbam6lBapGaZu+iZqqdTxdRm+oxbFhGjaP3cHoKb+CZIrwW
+5f74Tfy/rDGtjdZXOTauzm0V422tu1fx7Xeoz9jjW5vYw1s7a7Gq/Vqqr2c
GqgWqoHWmmqkWqmm2huqwWqxHpC9nJqtdqv51spqvFqvpltLHpPCK9Az0Muw
ZrT21ZOyllRj1Vo12dpazVa77ymi97GGtHeyZrW2NKeZ28x51iLmNONp5SJq
EWtUa11rYGtX3/n+PD9L8vPMyPHm5+upzMzz7/PpQczK8603oQdwS37fRTn+
DirDEzTexmU9XZjnQ49Fr0VPRK9GD2te1lu9LT1AvdohRXiDeop6pXoAeo3W
/Nb+1vz23vZg9m6XF9GbPZ/3m/vLXkzPUC/52CK8RD1AvWI9Fr1BPUm9YD0M
vUo9Q71oPQy9RD0sveqhRXhbe6bwQvVEH6zCc5yS49X10jPVO9XjfDjH5305
nozfyVmv1CdrhwlZn1pk/bKGbMp6pbdsjWOtZg1n7WPO1IvR4zKXmtNXyPnN
XG/Ns0bWQ2shPU69Tj3bR7L+35DjVb3Xc5qQ48l8oOc6LsffU/l9R2W919vQ
cx2d84Xvr4c7JueTh6rwUMfmeDTf6JlNzPGt96xnrBetp6WXrCeoN6in9HQV
PZy93DX5++wR7dXtqe0d7XGPzXpm77s8z9exjJ7A3kCPyLMJPUy9Iz1CvUU9
Ur1DPTHPVvRA9cr0ID3L0YPUm9SD9axGz0HvQU/Lsw89Xr0uPUTPRqyZrZ31
sDzr0LPV29LT9WypZxFer56sZzd6yHq1+hf2FvYYA+vwsPSy9MDmV+G56b1Z
I91bhafs2YqeiF6znq1nO3q2erl60J7l6MnqTetZe1Y1oAgvW8/WszA9ZL1c
PTnPuvSg9er0GD170IPWe9Rz9uxDj1MvWs/bswx7Mr1wPV/PPuzx9IL1ED0r
0yPWW9RD9GxqcBHeomcAnk0dnvOBHrZnGV2L8LZ3SZGfzA+zcv7oXcYZyagq
PGnPTroU4VX/l9+3LsPj0euxBrYW1lPSW/pLGfWC+cFe2B7VXtWewbNAPW3P
eroX4XWfAZ+d9/PsKmpu6w/rDWtxe1B7a+sRe1N7Wntva2p7XXtee19rcr1h
PSu9RnsQvSw9TOuvSVmfWvHzZRGeo+u/cR2535rA2uBuNQXePYVfuinj5xVR
U1hbbF5HrrXmsPZoWUeuNwebi42Zq+EeKWJpvTpi1ZjVP9ukjtrEmsPaY7M6
apej1cTmeEa1dLcUz75CHbWGOdfcu3wdc+scW5utUod/0bKM87hl66jNrLGs
teo6alFrdGv19eED4e5l+HHWGJfBnVPUHtYgl6qFKWqTletYW9fY878V6/Aj
rIGshVaqw4/YuIzzzaqOXsAewV5BT1lvWQ/6nip+rnQ+Uoy14fpR8PAy+hNj
wNqmQ4rYWI6//66IesW6ZYM6YtMY1X/QQ7HB10OwvtyqjvfxUPpEa5U6co85
yP7aM5nHyvD07C+2rmO+zWEnMda2jvU/BT4ZblfH855qToW3qOP5rKmsrVrV
sXfcQ9Z6G9WR+8yB1p5qylXOdwqtaV1HLWcNZy23TR3jI+BT3et1zL81n7Vf
+zr8ttPh09SiOuLrNHhEc+QA985eKXLDUnX0ZvZs9m7mAHuPASlygzWx5xMt
U8SzNa/nOZuniEdrYs+HNkuxH7avo1Z1j7oe46s4v2iVIl6tQT0/3DrF+6xZ
x3luuzL8qlRH72jPZ+9nDev5YNsU73dTFeeD7VKs121V7K+dUryvNYTz2T7F
+kytYr9ul2J9zFlq96AUucwewPOULVLsT/sZv9tnsH+5tYr9tmOK+ZtWxX7c
PsX6Tq9iv++QYj0GWCMXETPGTqMO/8Yez17Pmttau3WK/W/NZe21VYp4MIcb
+wNT5PbVuL+Dz1fGefaqdfj1rco4L18OblNEj2Wv1VxHrWLNYq+1Th251pyr
v75MHb2UPZS91NJ19FL2YPZi69bx7wU6lXG+YI3gevZKUTtYI9l79E5RO5kD
jOddU5w3r16H1qv5+plr1HFe0bYMv9KewvPlNin2w1p15G5zuOcLa8O9nO8y
ziNa1HEesEMZfqs1kb1OnxS1kj2R+6Njil5JD/CnXD/rHxhzaqVrND7now45
v5rPjCH3vnvI2FLjuud6wbMI32HrnP/MT2qO2qNm6JUYA+51NcDYMOZOzvXP
lJzf2uR8aH4alPOf+cd6Uk3qnfOt9ZBr1DHXA+ZL16BTrpc8+1GzW+b86b+t
MAaMBTXdf0uhZqldQ4uod4x5tUnNci8YQ8aSMeS/lTCm1QY1xVh3D6kdaoZ7
yzVrm/O33rMxrvaocca+Oapbrkesv4wB623rQWPDNXQtXcPBuf7rlesN6x3X
3LXvWUQ9YH1hPWm/YL3omrv2xojeuznD3GFO8d/KmHM9q1SzzMVqiFpizOmF
/w/cWJ69
          "]], Polygon3DBox[CompressedData["
1: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
6qvERrOFbAv7PzRYts8=
          "]]}],
       Lighting->Automatic]}, 
     {RGBColor[1, 0, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw12XmgjdUax/F9OGe9+zFnrpRIInOK5nme0yQhhEQyhxCKZpkaKKV5nkdN
mlNdzfOohMg8hsL9/u7vvX8s62OdffY5Z+/3fdZvPbtBjwEdLitXKBTG8k95
5nZRKBTLCoUmxUKhe2mhsJ21W/hCD7wD34Z74XIlhcIs3A1vY30a7olLWL8D
d0yFQgXchbULGf/ymCmsD8Y7sX4X7oPL8H24Ny6P78Zd8T88/mZ8CU6sP4Av
wgU8A7+Je+LV+Hq8D34FX4Ub4ufwUFwD34tvwM3wq/hiXIrvwTfi5vg1PAE3
wi/gIbg6no2H4Zr4fjwR74VfxFfjPfHzeACugm/HA3FVPBNfhivjW/FMfDD+
CE/DbfE7eCreF7+N78CH4I/xFNwGv4XvxUfjL/BsfCT+DP+F78NNmJcz7sdN
mdcwHsEtme9hHIU/5/HT8X74XTwDH4Q/xA/jk/B3eCnzr4xfGJeyXpF5Kuv9
cSU8Hfcr9fs7Gd+EW+DX8dO4A16An8Jn6rnwI/hk/D0ejxvgZ/FLuBNegt/A
3fFKPBdfhFfh4bg2fhhfjmvhB/EVeBf8GP4A98Ob8Dx8Kf4bf4j74834XdwH
r8f/wQPxP/g9fAnegD/FQ/F2/C0ejRPzZ4xheAfrP+CxOJjfZ/TFG1n/GA/A
W/FH+DK8Bb+Ne+O1+Dd8La7GvJhxE67FvIhxI67J/AtjAq7M/CtjIq7CvIBx
Da7KvIQxCddmXsG4Bddj/o4xBmfMKxm34t2Y1zHuwA2ZVzFuw7szL2Pci/dm
/p5xJS4yf824ApfqvqQePIHb6j3HL+CDVAPw43hf/A7jYryOv7GE9cdwG9be
YvTCa1gfjevhJ/AovCt+HF+Jd8dP4TF4N/wkXsX8l64NvU+sP8DcTLWE8SBu
rtcj473U78/8Jf8fgcsxf8EYjkuYP2dcjgvM6xl34j2ZNzBm4UbMGxl34b2Y
6/L7v4tPwFfxvIHPp559w/9H4TLVGB4zF+/C16vhV/ERqm34NXwkXqp7Dzdm
Xs14GLdgXst4FLdiHsTYAz/N39ugzNd5L35WX9Z3xo+wPhI3xS/n952u+Ufz
6191bw6+FR+Pv8Jz8utf98Lr+XWua/J2fCL+Bo/ATfBL+GZ8OJ6PJ+HD8H/w
ZHwE/gRX5Xf7CJ/KWhX8IT4FV8bz8MmlrsOqJ/N4/DW4PX4PX4sPwO/jsbgV
fgPfgo/DX+JX8vtU9+xt+AT8NR6HW+O5+Dp8IP4AV+LnfoBPYu3V/F7bnNeT
vvm9/AA+Dy/E9+Nz8e/4PnwO/g0/gS/UdYbvxKfiH/CTuBtejh/HXfEy/BA+
Hy/CD+KO+A/8KO6M/8SP4S54KZ6FT8M/4rvw6fgnfDc+A/+Mn8/vHdWH5/Ja
ofvlxbwuqV69kNcu3V+v5XVmS14zB+V1TPVcNfxb/Eyp90fVz5dLXRtVo57N
78fVeY0dgv8t7zqm+7088x+MG3CNUl/bH+PTcE38Ge6AtzNexocwb2O8hA9m
/okxDe+s65rHZ/ghnv9H/j8V12VunPk59yxzPtA+MonH1OP/3+FOqgH4e3yB
agP+AXfGf+r11muo147/T9c9yPw7Ywauz7yQMRPvwbyV8Tw+gHkL4zncPq+H
qlGtmTcznsXtmP9mPIP3Z97EeBrvl78mqp8NmD9hXI0r6h7ld/san4fnq17g
Csxf6X7AO5W6lur1rM68TNcdY4F+b773G+aOrC8v8d/2c4nz1zvMx7Ge4bfx
sTjht/AxuAy/iY/GtfEX+Gxcmtelo0pdh1WXDsc18Kf4TFwRv49PxJHXuuNx
Ab+CD8N18Jf4nLwefoXPxRN5797AE5ivZtTR68O8g6/NwYeWuo79kq83LnOW
q8+8osTZYhFjZYlfi8Wqufn724i5OuMTfAbPsyv+VrU3r7cL8p+rPWGh7uX8
GtK1dLquDcbNuI7qbf56buVnr8l/bjH/mfrZ8/O1Ffm6rMcp9+j5tff8yLgo
Ofu1yfx8y/PnXJI/7vf8b1iWv6drc8/P/049r16Ldfnj9Zyq76rzbXnOobix
3iM8Irmeq65fkrw/7s96n+Sar9rfN3kPbcf6wOSsezAenJxdD8U9kzPSvnhI
cl49DI9MzsBH5H/L6vxeuiI5Ax/J+qjkLHcUHo1b6hrD/ZL35faZ/761+XX8
V/636f14hsf00L3AY8Yn59vj8KP4Al1L+OnkjHcunp2cDzvgO/Apuj7x9ck5
+UR8XfKeor3lRnwoPpn1G5Jz8kl4ZnK2PAPfk5w/z8L34rN0X+BHknOmcm73
5GzfivVuyeeRlvhCXA23wF2TM3xz3CU52zfDnZPz/D6Za5fqkK7tcckZ/ljW
eySfO1rjsckZ/hjcKTlLN8EXJGfppviq5Ex+PL40OQsdgPvj+vhA/HVy9uuN
F+Pb8SC8KDnLDVT+Sc6NPfEfydlvAH4vOf90wm8l13zV/veTM9IFrL+bnG/P
x+8kZ+CO+M3k/UX7zNLkGqhauDw5Lw3V/Zico4bgX/Bk3B//nHw/Xop/Ss6r
/fCPybm3L/4hOfdegr9PrpOql98k5+SLdb0lZ7bB+IPkjNcZL0zOvZfhb/F1
uA/+Kjkz98IDks8aB+FPknN7Dzw/Oet2x+uSs+XleAN+CI/AW5Lz7Ui8Pjlz
Dsebk/cO7SH/4CfxKNbLZc7Go5kHJZ8ND8lc03W/6VqZk5xPlFPK87UX8Rjm
YuZarZodmTPklcwVGK/jsczz+N6RuIv2z+SzyYXKv8mZvxv+MHkf137+UXJe
7cr6Cnw3Hoar65rA4zLXW9Ut1ddPecw41TzWd85z9Xjmuvl+rSywR+a9QHuC
7iXdU4t1FuZ798cn8PXJyefTU/Dbyee4ufn9q3qynPXeeX9ANe355GxWrsj7
nZy3F/KY5/DZuMD6E8nZaTvrjyXntH/z2qK68Q9+PDlrbcNPJuerHZlziGqw
9qX++T3+B+sT8d54Ka6Yea/fi59VCT+FG+HKmfNA46Lroe7HJawNz2uyavWw
5Ky+mPXLcV28CE9IztjL8LPJmbOE57k2r/OqaWOS8/+fPOaa5Jz/F66aOauo
D/NCco4tj19MzpyleFJyNl7JY2/B7fAqfFtyTl6Lb8/rp7Lhrck5fA3r9+Nj
8aa89qqursN3JWf+jXhW8rlgA74z+VywHt+XnNv/xtOTc/5q/EDyGWQzfjA5
w2/Bc/OarxryRnKursjv/3py9q6AX0vO2IFfTc7PRfxKcq7O8EvJ2bsMP5R8
ltnK89+UfKZYgR9OzsC6Nl/Oa77utTn5HpT43hn5Y/SaVMmc/fZmPct8X+se
nJffp7qPPseDcSUe82tyxquGP8traWW8JjmL1sHf5feg6tjfec1Urdg9c65r
y2N2y5zr9sUNMuex/YuuY7rHq+DVyVm6Nl6ZnJ9r4U3J+XYXPA0fg0/nOaYm
94hOw1OSez6n4iXJWbQGj/8zr7Gq4Yvzmlmd9d+SM+1OeGNylt4Z18+cD3W/
b8j3nbqsL8DjcVW8Ck/BNXG1zHm7Ka6XOa+2KfqcrFzaCpdmPgs3KLoGqt7u
UXRdUj3cBxcy97Lq4xqZzxfN8I7kftfu+N/k83U9nDKfqffEZZl7Xw3x9uT+
xm54G56Nd8U1M59fmuNambNri6LzpDJdo7zWqU7ux3qdvD6rBtbOnJNbst4w
8zm0nb4381m4fdH5e25eV9Wj+H9W3SvzOfpAHrNr5gzfGjfKfKY+oOg+V+28
Xqn/oH1DWWNrch/mCtZq8bXP8Vmsjw/3nrSvjQr3ubQ/XhDugWoPuj7cz9Ke
e0q4n6tsMybcO9Me0SXcX1NWHB3ui2mvGRvuo2l/OTZ8TtPfeGW416Y96NRw
f1bZ6bRwL1iZ6oRwP1eZ54xwn1e5aGS4L6ZMMiLcJ1L2OD583tPrc2K4d6yM
dFK416zcdXq4B638dnK4T61sdkW4D6U80zXcN1SuvjTcY9W90CPcb1KmvTDc
h1Ievjnca1NeuibcP1L2mBjuHyl3XR7ubyrfdg/3qpSTy8L9BdXD2uFehmpX
/3CfV/djn3APWpm2b7hnqhw7INwXVna9LNyf1b3cL9z/1R56SbhPraw7MNwj
Vk4eHO7tKusOCfeIlXUHhXvEytXXhvtiykUp3BNRfR4X7lEq/5wZ7onrjHNr
uJ+oLHRPuJ+lDLCh6N6N9r4Z4T6actHd4f6g8snscH9QuWJ90X0r7Ykzw702
Xbd3hfuGyjZ3hPtuyk63hfuVylfTwr1R5cmh4d6xzg7Dw31/5dLbw31M5bS/
i+4xaZ+dGu6lKisOC/egddaYHO6fKidPCfdhlZ+nh3upyrFXhfvCyj93hnuO
ynKTwj1Z5czzwr1+5fNzw/19nYnOCffHdS6rG+7RaF/rFP4sQWe0juHPBpTn
zw9/FqJc2iH8WYjOa1eHe9DK8LPCvU7lw7PDvXidB+uEe17aK9cV3ctT3rgx
3MNV3r4p3KdWDu8c/gxDZ8Nbwudk5cDrwj1NZe8bwr1j5fMs3NvS3l0r3E/U
/ntRuHevs0y3cD9XZ8aLw5+LKPttKrr3p0y1ueienfLM7uHekPbNFuG+jGp7
g3C/RntT/XBPR3vQP0X3H5VtWoX7TdovDgz3/rQX7BHu+2j/OjrcT9Ee2ij8
uYj2zYbhPqz2ppbhXpX2ml3C/Rrt6TuH+6TKJBPCvX6dHXYL9620x9UL93S0
L+8T7hNp39ladP9U2ePgcG9U+8gB4T6L9rL9w30cZYy24d6NcuZ+4Z6OsmWb
cP9F+9dh4V6b9oX24R6N9tN9w/0d5dJDwj1Z7UFri+4jK9NuKbqHq4x9aLjv
oz338PCeob34iHDPSNmjdbh3o73yqHA/S/vdmqJ70MrhB4X7vNorjwz3hpRh
/i26h6vMuWu4L6YstK3ofrQyYSHcV1W2PCbc0/nfXhn+7EF55qzw53zqh9QI
9z2V8ZqEe+XKOeXDPVPl0sbhfrpySLNw/077e/Vwn1TZuCTce1Ve3Tv8eZjy
TNNwX08ZYEfRPXHl5L3Cn58pvx0X7j9qL64U7hHr3FEh3NvVuaNcuJ+rbNw8
3FtUJukV/lxQfY/e4c8Uda6vEu7J6izTM/w5pXoFlcO9Zp1Tqob7szojlIb7
1Mrn24vuiSu37xTuF+ssUDPc21WmrRjuU+vsUwz3qZWNNxbdQ9f5olq4v6xz
VoR71jo3/Re+9caP
          "]], Polygon3DBox[CompressedData["
1:eJwtmWXAFVUXhe8wc++ZS4qU0t0gHTYidieKSFggSqMCUoICiiIitmIHGJiA
3WK32J8CYmJjUd96WOfHvO88c+beOzPn7L3XXtNk6KijRlYoFAp99CfT/7n6
80paKPROCoXZpULhZG0F7Z+i44eWC4UHxEeJHxCfIx4kTsSnig8TDxZXEJ8m
Ply8U7FQOE777+lYo1Ao3K/xI7V/v45N0PhccXvxJeLh4ovFHcTzxGeKTxWX
xMPFR4tPEm/VJQ0RHyyeIW6u8Vni08UDxds0PlR8iHiAeIt4sPgg8YnizeJB
4gPFI8XV9fmx4hPE/cWbNH6y+ABxS13zJxpvqPvYXzxK4zuKx2n8RPFocQ3x
ePEA8XRxM/FM8WniaeKm4gvEp4ovELcQXyg+QzxcXFl8tvhY8ZniKuKR4uPE
w8SVxGeJjxGfJa4mHi3uLx4hrioeJT5efIq4KB4mPko8R9xOfLF4mHiIOBWf
Lj5CPFScic8QHymeKm4iniE+pezPrNJ62DXxd3XJC4XntL+fxvcue85e1fhu
ieeSZzZfXDHxs+wrPkjnvixuGvzMF6S+J+ZiH/GBGn9J3ETjlfX9Y7W/WefU
1dgOeu57a/wJHdspeD0dIH5R3Fi8r845mDUrbiY+Qd/5ufY/45mLW2lbr/2v
tV2k/dr6/iu0X1efaa7P1hEvFNcTtxDvp+1Q7b+qYy10fnWNz9R+ZR1rpLFq
4hniiuIG4t217aX9x3Wsjs6vovFx2t+i669X9po5TOOvJV5L/cSHiFeJmwev
yYWp1wBrdS9xv8zPuIHGO+v7nk18jLFO4mfE+4r3LHvO79PnGyReC7to/Gnt
99X4HsSLtodTr8kxJa/Rh1KvSdYua/jB1HPO2u6qzz+v/f31+T4a6557bphD
5pI1d7/Ob5h4LXINXAvXWD/4M3z2hRjvrBHWCt/ZUFxV3zdR+6mO1S87Rq9O
vYaJXa6Za+ce6wXH5DKNN04cq+Sga1PHALnpbm0Ha/9ufWY8+UbffzW/LW4p
riu+lrUlbi0+W9s7+vw+Ona5PjtO/L/UOe1m8Vnit8V9xPPFY8Vfps5Zi8UL
tHXT/kJ938iyv6Or+IrM3z1G2xc6/wgdu0ljI8RvifcWX1ZyDnhW3DlxbiBH
PCfukjh3kPNeE++eOBeSI15I/ZvkDnLc86l/k9w3VPxk6pw5WTxE/ETqnDqp
5N/kty7PfC3E9DMa75Q41geLH0+dIyaKJ+m8FeI24nNLfgZc24LMz+bakq/t
OvFo8qG21Tr/IB27RmN36fg34hPEd5V8zsep54jP1tR8XE4s67ymGqslXiDe
WdxMvLP4GmJb3Ir4F18griRuKL5G/z/S9x2oY1eTizU+R/vVdbxx2c+AtTk1
87NhzpjrmzPPJXPcV3xL5rlnjpjrxZnnbpC2lfr+tjp2nsYaFZ1L1hK/Rd8j
ue7azPdeQ78/V7yjuEnZa+Ld1L/BWhmnrTbPUuMna+xF5lT8vHhS2TFZUzwh
c6yyxlnrY8S/6btPF+8sPlP8q/gx8TDxI+Iddf4UYp61JP4z95wxdxPFf4gf
jb/3sLi6zp8gbs29iX/X+GniwPPWvTXRlijmHhb/p/EOOn+bxh8U/yNuJ+6m
8TrMberzN2v8AfFfGm+j8YLGHxL/K24vLoqXi7eKdxFn4sfIj+KO4q36/DLx
3+K24pLGV4i3iTuJf9P4beIfY35mzbJ2p4s36vrvEB8vvl1c0vgjxIj4IfEO
4hvLrh/k55x7I+a0/6COVStbjwwW3yeuIr4XzSNeKq5EbhUPEt8rrixeKh4o
XiKuKL5dfJz4NnGRXEqMi5eJq4qTouvDSh0L+v07Nd5f+3foWND4reJjxbeK
M/ES8Unie8Rlrl98uPhGcQXWq7Y+sR6Wg2OMWLtTx/K4nrfnHnEqvkF8mPgG
cSLeSIyKf4n58W/xPeLfYn5cSc4SLxfXJDeQE8UrxLXINeKR4sfFdcg14rPF
K8W1yZ0lx+sbmev3BvHN4u9ivL9bcj19M3N9/EV8i/j7GP9PiUeJnxDvJF4u
Hi5+VFyDXFNyvL0f68eXJeePT2M9fpqcI35SvLP465Lr++exfq8vOb98HfNF
XT3DN4lfzVNTbd+WXC/WxHj+ixoj/jXmo9rBtbuqzt1NXDNY21QW9y5bw3xA
Pita21Dz3hXXLroWUhPRwnWKrpXU+HfEtYqu79S8t8Q1iq6FrBnWTkHcuewa
+7a4ZtG1t0Zwfa4k7iX+Vdd7q/iHqG9qBWujKhrfVVw9uDaXxT3Jr8G1ORf3
KFvDoH2qFa1tqgVrkSDuLq4SXJuL4q7iqsG1vyTuJq4UrD8ycRfxWF1PLfE5
up6B4uup4eLrxYWyewx6jTnifxTP74vPEb8jvlDjH4jPFb8rvkj8nniC+G3x
LPE/4uvFf4ivoT5p66L9peQgjV0n7iq+l5xW8rEbtP9n5nPRlMRSdV3vzeIP
NX6e+D2NzxZ/Ij5f/JF4rvjluB5fFJ8vfjOut9fFF4g/FU8RrxZfTPxp21X7
j+hYheD1P177b+nYTGqjeLL4Q/Ec8WfiqeKPxZeIX4r5/gXx5LLv4Ubxxsz3
dqfy8DrxFzGHPx/z27MaPw+tEfPRM+Jz0RIxPz4nnlh2jasnnpy59qEZ0JJT
MmuJgZlrID0Reh6NUF/j52fWDkdQ78X/izFETuJZp0Xnqmb6f7jOeT2x/uYZ
3KH9zZmfDfXmdvEm8fVl52jmrkLRuZvfv1T3WE6s52cF/9ZX2i4MXs8824o6
f3GsTzyLL7XNDD52QNSjnNstd+9Az0F8ror57mXxFPFC8X7iK8Wbc/csH4rr
Fq1/r6LHEV+l8a25e46PxPWK7kV+0Pil4vUaXyi+Wlv7zPf8R8maf7X26xfd
C3ynY5eI1+mcBeJF4v3Fi8Rbcmuc7VpHvE18kbiXeLb479xrludLf8Fapl+i
3yCGieVZOr8nz17H/tL5l4r3El8m/i+3PkSbzhdvEs9D04svFf+be056Z9YE
zNU6jc/m+evY5TG/zmL9MU/iz8XTxJ+I55XdQ30sblB0b0WMdtbYksSx+1qs
H6t0bJrG3oj5/zXxDPGrsf68Ip4qfj3Wn1fF08VrxRex/sTzxb+jGzLXNGrb
79oWaX+Djl2l8TXiC1kf4svE34vnib8RXxH1xpXin8SLxD+iocXfiq8s+1jb
zJqEc5nTq7T/c+a55jfaZV7T/HaP3PWBHpX1wfp9SrxP5nrTM3d+pidkPVCz
ftJ6H5K4llEDf0ytUaiNzNEzsX9g7r4quZ/9LLM+xr9ZGfU8/To1+7vUmoVa
Ts3+IbWmoZajkdak1lBop6f0+Q3ioeSMktfAU6k1JmuDOckz5yjmijkImXMe
c8Oaejr2F6w1ai69M2uEtUIN2iOzxqM2UbN2y6wJqWVPa//n1DmL3MWcFzPn
SNbCNJ3zZGINRH4hRl9MvcaJXTTu2tQaC+2LZqAfOTGxliCmXkodQ8QaMfxy
9LuIbTTUR7GfQVuhsdfFfgbtTQy+Ev0QYhMN+XVqDYi2JCaXx/6JWKWmrYj9
BLVuaqw3aFLyWz2NLxa3zKyfZwTnSmKa2J4enK/IYeQyNOVXqTUjWhPN9X1q
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

          "]], Polygon3DBox[CompressedData["
1:eJwt12W4VOUaBuAB9t50d3dJKa0CHkkDDEKQ7u5GGgU9SpcHBGkMQFoRsABB
GkFQQkBAurs593cxP94fz30931oza9Z8ayZ3y261u8aPRCLLTaxpkzAS2R0T
iTxJEIn0jReJ7IuLRHqw4yyV+Yj9y4ayBBaUYktYEnmYScJeYKtZGrmS6Ssv
cLwMrJe13dkxltJ8yE6xF1kveZZeWtadtWa72GPWh+1lg9lDVtQsZAnkCqa3
PEcvHeuhN4TF91pK8sUssfyyGRSyXnb2nt5LrB/7gmVkvVlF1ofNY+lZTzaI
PWBFwnth8eVSpoM8Xy8ha6PXjv3O4pn+bD/rzy7LOcyn7Cbrxy7J2c1UdoO9
x27K+cxMdp81Y1vkO87RhW1j9dlSdozVYctYR3aAxZnB7BDryy7K2cwUdp01
YD/JV6xtwzawhuwXdo21Y5vYu+xndpW1ZRtZL/YvS2/GsPOsJzslpzOj2TnW
h52RM5px7CLrzU7LGcxYdoE1YZvkm87RkW1hHdh+FmsGsYOsMdso39DrwDaz
RmwDu87as19ZK7adPWA92C72DvuGHWW12VL2POvOprFUrAt7gfUM152lYd3Y
AHaD5TUz2D1WhnWWJ+glYx1YS7aN3Wfd2U7WnP3G7rKubDsbyG6x/OZz9oC1
YFvle3rd2A5WjnUNnxlLwTqxtmwPi5h+7A/Wnu2V45sB7ADryv6Wk5uR7AQr
y7rIkxwvOevIOrE/WUIzhB1m3dhROYUZxU6yLuygnNgMY3+z8qxbuJcdLyXr
zJqyzew268y2ss7sL5bIDGVHWEnWXp6rF8dasxrsA7aK5Wcj2LOsbbhOLIa1
ZIkTRSJro9c0fBfWsaRsffTah+v3A0vC1kWvabj261kc+47dit5ra1hCtib6
mjux71ki9n30+xbex1p23mv5iG1m5dkodpaNYptYWTaSxVq7OnqfhnvyW3ZB
bwzbziqyT9g59iH7lZVjH7CLbCzbwSqx0ewSG8d2spfYGJbAOVZGv6vhe7mK
PdZbzM6zpmxxuIf0stn/GvIDLK/O8ywHa8z+YvlZCrZPTh3d28M9FI8tj+4R
rdny8Jmz7NY24n+yfNaWYVlYA/YHyx32XLYium+E/WWltY/4InaONWGL2BO2
hF1gzdgSFmPtquh3OuxDq8O9y7I6x7t8P8tjXYQtky/rtWIr9JKznSypGcF2
s9O6Q+Uf9IqzQSyl3iGWyYxnx1g6dlYuEJ4/7DK7Zu2n4ZzWvsKmsqtsaniv
rAabwh6yr9lZ1ph9zR6wr9gZ1oh9xU6wjuxLlom1Y6dYf/YtK8j6sv+wgWwR
y8YGsBtsBjvEarHP2EnWgy1lOaN72HCW2rV6ma9nmcN+bQbI3+kVYn30zoRn
NfuRlWCD2WU2me1l1dhkdp19xg6ymmw6S+tanWC5zP/YaXZL73P5iN6bbCZL
o/cPyxl95oXfDLf15srH9eqyeewum89OsHfYfHaHzWP/sHpsLkvleIdZ5rD3
sqPspt5M+bDeG2wGu8KmsH2sOpvE7rEF7CSrzxaw1I53hGUxE9lxdl9voXxK
rwFbyJ5j7dhsFstasWTW7mBJzHC2h5ViGV37eux3lsO6t8w0eau1Fdg0vbps
TuiwqmwOy2dtjLWVw73KkunkTfT0B1kltobFsSIsGXst7B0sLSvB0rK3wz7B
srBnWTpWm+1iWVkdM1ve47xV2Gznza8Xq1cl3Assqc7bZrq8Lbpfhc/8Ob30
enX4bpZN5xmWlL0a9sDob73iLCWrxX5jGVhhlpjVYBtYKlaIJWLV2S8sZVhr
WsvTnTc+a+68xVircJ+xeKwZK8HahOcxS8BasKKsJZvKIqwpK8JasMnsCW7C
nmHNw+fNHrPGrDBrFvYC9og1YgW9voReXzX+s+Ol0KltZoX3r1eZzdIroBen
V5X/xJKH92aaymP1HjpeQ73KbDBbwnLoDWSlrc1sbf1wr7JcOkVZcvZ6eNaw
dCwPeyJXDN9hFsveNJPkjY5Xhk10vDfYxHCNWWk2gb3GPmHrWDH2McvhePdY
ObOcPWHZ2V25rFnGHrPXrR0d9pHo3hmeW7XYhPCZsVJsfHieW5vBa64b7i2W
XedV87G8Vq8o+69eVr3brLT5hj1iNfXGh2usV5KNY9n07rAyYW9jD8N9wFI4
R022haW3rrp5X15pbT42XK8qGx7eF8vDhrJc1j5iL8Y8/U8S/i/UM1+GZ2B0
Xwv7c269x6xC2I9ZjE4mdkUuFvP0v0b43Z6ZXZWLmy/YLZaRXZALm7nsKkvP
zskFw97BLrFXHHNkeB3OW4C9z6qxEWwFy8uGsZzW3mflg7OITgZ2Xi5k5rAr
elnYNblEeK6w26yK7pBwjaPPhfDM+z8ULsg/
          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TlPVFEAgNE7w4AwjsIvgNDRaEklFaHSakIooAIqKIBQaUWoIIEQKqwI
lVbGSlaVvTJW7MOoSAhhb9glhHiusfhy7kvee3erbOnMdiRCCL26Vhyfa09V
hSGUsZoVrONz1rOGrXzFbjbFf7Cdw3zDMfbzI9/yK9/zO8eZ5zIbikI44K1W
dalTTSRDWOMk1znFDU5zkzPc4mfm+IXbcR7mOcsfnONPzvMXF7jDRf7mQEEI
R/yjXV3pLJ6H9a3wkEvM8RO/8V2clyP8wD6O8jWH2MYeNrKLL9nMF8zyGWtZ
Hs/T/vd5o1Jd6EQZ63vKNJ+wmBkW8TFTTDPJkhAH3sGDS3zEe/p1uGNhPF+m
4r5YEM858e+TMOjh+P/9/wVXT0tq
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TcvhlEYgOHz6cSO0YBfwC9g1/vEYCNEzESsiIiIiB4bETMRs95LtGiL
btSvN4Y71znLk+fkZDe0lDbHQghdenH44APPVJMUQiqbmMkO5rGHBRxkEadZ
zkU2cpVt3GYXL9nPZ47zm/NMTw5hOZrHK75pXU+6U3FCCBss4SZLucUybrOc
O6zgLiu5xyrus5oH0Tt4yFoesY7HrOcJcxJDuOa7TqM9da88e60xi0tM4xw/
7T/GR/bxnJ3cZCtX2MAFlnGShRxgPruZy3ZmRHdzL/iqlGiubjUbH0IyZ5jE
KSZyggkcYzxHGccRxjjMwCH+Og7yhwP8Zj+/2MtP5nr/Tez///8A/XpNLw==

       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1320, 1618, 707, 1319, 2106, 1527, 1321, 2107, 1528, 1322, 
       2108, 1529, 1323, 2109, 1530, 1324, 2110, 1531, 1325, 2111, 1532, 1326,
        1927, 2196, 1327, 2112, 1533, 1328, 2113, 1534, 1329, 2114, 1535, 
       1330, 2115, 1536, 1331, 2116, 1537, 1332, 2287, 1619, 1538, 1620}], 
      Line3DBox[{1334, 1928, 2197, 1333, 721, 1335, 2117, 1539, 1336, 2118, 
       1540, 1337, 2119, 1541, 1338, 2120, 1542, 1339, 2121, 1543, 1340, 1929,
        2198, 1341, 1930, 2199, 1342, 2122, 1544, 1343, 2123, 1545, 1344, 
       2124, 1546, 1345, 2125, 1547, 1346, 2126, 1548, 1347}], 
      Line3DBox[{1349, 1931, 2200, 1348, 1932, 2201, 1350, 736, 1351, 2127, 
       1549, 1352, 2128, 1550, 1353, 2129, 1551, 1354, 2130, 1552, 1355, 1933,
        2202, 1356, 1934, 2203, 1357, 1935, 2204, 1358, 2131, 1553, 1359, 
       2132, 1554, 1360, 2133, 1555, 1361, 2134, 1556, 1362}], 
      Line3DBox[{1364, 1936, 2205, 1363, 1937, 2206, 1365, 1938, 2207, 1366, 
       751, 1367, 2135, 1557, 1368, 2136, 1558, 1369, 2137, 1559, 1370, 1939, 
       2208, 1371, 1940, 2209, 1372, 1941, 2210, 1373, 1942, 2211, 1374, 2138,
        1560, 1375, 2139, 1561, 1376, 2140, 1562, 1377}], 
      Line3DBox[{1379, 1943, 2212, 1378, 1944, 2213, 1380, 1945, 2214, 1381, 
       1946, 2215, 1382, 766, 1383, 2141, 1563, 1384, 2142, 1564, 1385, 1947, 
       2216, 1386, 1948, 2217, 1387, 1949, 2218, 1388, 1950, 2219, 1389, 1951,
        2220, 1390, 2143, 1565, 1391, 2144, 1566, 1392}], 
      Line3DBox[{1394, 1952, 2221, 1393, 1953, 2222, 1395, 1954, 2223, 1396, 
       1955, 2224, 1397, 1956, 2225, 1398, 781, 1399, 2145, 1567, 1400, 1957, 
       2226, 1401, 1958, 2227, 1402, 1959, 2228, 1403, 1960, 2229, 1404, 1961,
        2230, 1405, 1962, 2231, 1406, 2146, 1568, 1407}], 
      Line3DBox[{106, 596, 107, 597, 108, 598, 109, 599, 110, 600, 111, 601, 
       112, 602, 113, 603, 114, 604, 115, 605, 116, 606, 117, 607, 118, 608, 
       119, 609, 120}], 
      Line3DBox[{1409, 1963, 2232, 1408, 1964, 2233, 1410, 1965, 2234, 1411, 
       1966, 2235, 1412, 1967, 2236, 1413, 1968, 2237, 1414, 796, 1415, 1969, 
       2238, 1416, 1970, 2239, 1417, 1971, 2240, 1418, 1972, 2241, 1419, 1973,
        2242, 1420, 1974, 2243, 1421, 1975, 2244, 1422}], 
      Line3DBox[{1424, 2147, 1569, 1423, 2148, 1570, 1425, 2149, 1571, 1426, 
       2150, 1572, 1427, 2151, 1573, 1428, 2152, 1574, 1429, 2153, 1575, 1430,
        811, 1431, 2154, 1576, 1432, 2155, 1577, 1433, 2156, 1578, 1434, 2157,
        1579, 1435, 2158, 1580, 1436, 2159, 1581, 1437}], 
      Line3DBox[{1439, 1976, 2245, 1438, 2160, 1582, 1440, 2161, 1583, 1441, 
       2162, 1584, 1442, 2163, 1585, 1443, 2164, 1586, 1444, 2165, 1587, 1445,
        1977, 2246, 1446, 826, 1447, 2166, 1588, 1448, 2167, 1589, 1449, 2168,
        1590, 1450, 2169, 1591, 1451, 2170, 1592, 1452}], 
      Line3DBox[{1454, 1978, 2247, 1453, 1979, 2248, 1455, 2171, 1593, 1456, 
       2172, 1594, 1457, 2173, 1595, 1458, 2174, 1596, 1459, 2175, 1597, 1460,
        1980, 2249, 1461, 1981, 2250, 1462, 841, 1463, 2176, 1598, 1464, 2177,
        1599, 1465, 2178, 1600, 1466, 2179, 1601, 1467}], 
      Line3DBox[{1469, 1982, 2251, 1468, 1983, 2252, 1470, 1984, 2253, 1471, 
       2180, 1602, 1472, 2181, 1603, 1473, 2182, 1604, 1474, 2183, 1605, 1475,
        1985, 2254, 1476, 1986, 2255, 1477, 1987, 2256, 1478, 856, 1479, 2184,
        1606, 1480, 2185, 1607, 1481, 2186, 1608, 1482}], 
      Line3DBox[{1484, 1988, 2257, 1483, 1989, 2258, 1485, 1990, 2259, 1486, 
       1991, 2260, 1487, 2187, 1609, 1488, 2188, 1610, 1489, 2189, 1611, 1490,
        1992, 2261, 1491, 1993, 2262, 1492, 1994, 2263, 1493, 1995, 2264, 
       1494, 871, 1495, 2190, 1612, 1496, 2191, 1613, 1497}], 
      Line3DBox[{1499, 1996, 2265, 1498, 1997, 2266, 1500, 1998, 2267, 1501, 
       1999, 2268, 1502, 2000, 2269, 1503, 2192, 1614, 1504, 2193, 1615, 1505,
        2001, 2270, 1506, 2002, 2271, 1507, 2003, 2272, 1508, 2004, 2273, 
       1509, 2005, 2274, 1510, 886, 1511, 2194, 1616, 1512}], 
      Line3DBox[{1526, 1623, 905, 1525, 2286, 2016, 1524, 2285, 2015, 1523, 
       2284, 2014, 1522, 2283, 2013, 1521, 2282, 2012, 1520, 2281, 2011, 1519,
        1617, 2195, 1518, 2280, 2010, 1517, 2279, 2009, 1516, 2278, 2008, 
       1515, 2277, 2007, 1514, 2276, 2006, 1513, 2017, 2275, 1621, 1622}], 
      Line3DBox[{1625, 1922, 1117, 1624, 2376, 1832, 1626, 2377, 1833, 1627, 
       2378, 1834, 1628, 2379, 1835, 1629, 2380, 1836, 1630, 2381, 1837, 1631,
        2382, 1838, 1632, 2383, 1839, 1633, 2384, 1840, 1634, 2385, 1841, 
       1635, 2386, 1842, 1636, 2387, 1843, 1637, 1313, 1844, 1923}], 
      Line3DBox[{1639, 2018, 2288, 1638, 1131, 1640, 2388, 1845, 1641, 2389, 
       1846, 1642, 2390, 1847, 1643, 2391, 1848, 1644, 2392, 1849, 1645, 2019,
        2289, 1646, 2393, 1850, 1647, 2394, 1851, 1648, 2395, 1852, 1649, 
       2396, 1853, 1650, 2397, 1854, 1651, 2398, 1855, 1652}], 
      Line3DBox[{1654, 2020, 2290, 1653, 2021, 2291, 1655, 1146, 1656, 2399, 
       1856, 1657, 2400, 1857, 1658, 2401, 1858, 1659, 2402, 1859, 1660, 2022,
        2292, 1661, 2023, 2293, 1662, 2403, 1860, 1663, 2404, 1861, 1664, 
       2405, 1862, 1665, 2406, 1863, 1666, 2407, 1864, 1667}], 
      Line3DBox[{1669, 2024, 2294, 1668, 2025, 2295, 1670, 2026, 2296, 1671, 
       1161, 1672, 2408, 1865, 1673, 2409, 1866, 1674, 2410, 1867, 1675, 2027,
        2297, 1676, 2028, 2298, 1677, 2029, 2299, 1678, 2411, 1868, 1679, 
       2412, 1869, 1680, 2413, 1870, 1681, 2414, 1871, 1682}], 
      Line3DBox[{1684, 2030, 2300, 1683, 2031, 2301, 1685, 2032, 2302, 1686, 
       2033, 2303, 1687, 1176, 1688, 2415, 1872, 1689, 2416, 1873, 1690, 2034,
        2304, 1691, 2035, 2305, 1692, 2036, 2306, 1693, 2037, 2307, 1694, 
       2417, 1874, 1695, 2418, 1875, 1696, 2419, 1876, 1697}], 
      Line3DBox[{1699, 2038, 2308, 1698, 2039, 2309, 1700, 2040, 2310, 1701, 
       2041, 2311, 1702, 2042, 2312, 1703, 1191, 1704, 2420, 1877, 1705, 2043,
        2313, 1706, 2044, 2314, 1707, 2045, 2315, 1708, 2046, 2316, 1709, 
       2047, 2317, 1710, 2421, 1878, 1711, 2422, 1879, 1712}], 
      Line3DBox[{355, 1006, 356, 1007, 357, 1008, 358, 1009, 359, 1010, 360, 
       1011, 361, 1012, 362, 1013, 363, 1014, 364, 1015, 365, 1016, 366, 1017,
        367, 1018, 368, 1019, 369}], 
      Line3DBox[{1714, 2048, 2318, 1713, 2049, 2319, 1715, 2050, 2320, 1716, 
       2051, 2321, 1717, 2052, 2322, 1718, 2053, 2323, 1719, 1206, 1720, 2054,
        2324, 1721, 2055, 2325, 1722, 2056, 2326, 1723, 2057, 2327, 1724, 
       2058, 2328, 1725, 2059, 2329, 1726, 1213, 1727}], 
      Line3DBox[{1729, 1214, 1728, 2423, 1880, 1730, 2424, 1881, 1731, 2425, 
       1882, 1732, 2426, 1883, 1733, 2427, 1884, 1734, 2428, 1885, 1735, 1221,
        1736, 2429, 1886, 1737, 2430, 1887, 1738, 2431, 1888, 1739, 2432, 
       1889, 1740, 2433, 1890, 1741, 2434, 1891, 1742}], 
      Line3DBox[{1744, 2060, 2330, 1743, 2061, 2331, 1745, 2435, 1892, 1746, 
       2436, 1893, 1747, 2437, 1894, 1748, 2438, 1895, 1749, 2439, 1896, 1750,
        2062, 2332, 1751, 1236, 1752, 2440, 1897, 1753, 2441, 1898, 1754, 
       2442, 1899, 1755, 2443, 1900, 1756, 2444, 1901, 1757}], 
      Line3DBox[{1759, 2063, 2333, 1758, 2064, 2334, 1760, 2065, 2335, 1761, 
       2445, 1902, 1762, 2446, 1903, 1763, 2447, 1904, 1764, 2448, 1905, 1765,
        2066, 2336, 1766, 2067, 2337, 1767, 1251, 1768, 2449, 1906, 1769, 
       2450, 1907, 1770, 2451, 1908, 1771, 2452, 1909, 1772}], 
      Line3DBox[{1774, 2068, 2338, 1773, 2069, 2339, 1775, 2070, 2340, 1776, 
       2071, 2341, 1777, 2453, 1910, 1778, 2454, 1911, 1779, 2455, 1912, 1780,
        2072, 2342, 1781, 2073, 2343, 1782, 2074, 2344, 1783, 1266, 1784, 
       2456, 1913, 1785, 2457, 1914, 1786, 2458, 1915, 1787}], 
      Line3DBox[{1789, 2075, 2345, 1788, 2076, 2346, 1790, 2077, 2347, 1791, 
       2078, 2348, 1792, 2079, 2349, 1793, 2459, 1916, 1794, 2460, 1917, 1795,
        2080, 2350, 1796, 2081, 2351, 1797, 2082, 2352, 1798, 2083, 2353, 
       1799, 1281, 1800, 2461, 1918, 1801, 2462, 1919, 1802}], 
      Line3DBox[{1804, 2084, 2354, 1803, 2085, 2355, 1805, 2086, 2356, 1806, 
       2087, 2357, 1807, 2088, 2358, 1808, 2089, 2359, 1809, 2463, 1920, 1810,
        2090, 2360, 1811, 2091, 2361, 1812, 2092, 2362, 1813, 2093, 2363, 
       1814, 2094, 2364, 1815, 1296, 1816, 2464, 1921, 1817}], 
      Line3DBox[{1831, 1926, 1315, 1830, 2375, 2105, 1829, 2374, 2104, 1828, 
       2373, 2103, 1827, 2372, 2102, 1826, 2371, 2101, 1825, 2370, 2100, 1824,
        1304, 1823, 2369, 2099, 1822, 2368, 2098, 1821, 2367, 2097, 1820, 
       2366, 2096, 1819, 2365, 2095, 1818, 1314, 1924, 1925}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{500, 708, 2106, 501, 721, 527, 2201, 735, 541, 2206, 749, 
       555, 2213, 763, 569, 2222, 777, 583, 2233, 791, 597, 805, 2148, 611, 
       819, 2160, 625, 2248, 833, 639, 2252, 847, 653, 2258, 861, 667, 2266, 
       875, 681, 2276, 889, 695}], 
      Line3DBox[{502, 709, 2107, 503, 722, 2117, 528, 736, 542, 2207, 750, 
       556, 2214, 764, 570, 2223, 778, 584, 2234, 792, 598, 806, 2149, 612, 
       820, 2161, 626, 834, 2171, 640, 2253, 848, 654, 2259, 862, 668, 2267, 
       876, 682, 2277, 890, 696}], 
      Line3DBox[{504, 710, 2108, 505, 723, 2118, 529, 737, 2127, 543, 751, 
       557, 2215, 765, 571, 2224, 779, 585, 2235, 793, 599, 807, 2150, 613, 
       821, 2162, 627, 835, 2172, 641, 849, 2180, 655, 2260, 863, 669, 2268, 
       877, 683, 2278, 891, 697}], 
      Line3DBox[{506, 711, 2109, 507, 724, 2119, 530, 738, 2128, 544, 752, 
       2135, 558, 766, 572, 2225, 780, 586, 2236, 794, 600, 808, 2151, 614, 
       822, 2163, 628, 836, 2173, 642, 850, 2181, 656, 864, 2187, 670, 2269, 
       878, 684, 2279, 892, 698}], 
      Line3DBox[{508, 712, 2110, 509, 725, 2120, 531, 739, 2129, 545, 753, 
       2136, 559, 767, 2141, 573, 781, 587, 2237, 795, 601, 809, 2152, 615, 
       823, 2164, 629, 837, 2174, 643, 851, 2182, 657, 865, 2188, 671, 879, 
       2192, 685, 2280, 893, 699}], 
      Line3DBox[{510, 713, 2111, 511, 726, 2121, 532, 740, 2130, 546, 754, 
       2137, 560, 768, 2142, 574, 782, 2145, 588, 796, 602, 810, 2153, 616, 
       824, 2165, 630, 838, 2175, 644, 852, 2183, 658, 866, 2189, 672, 880, 
       2193, 686, 894, 2195, 700}], 
      Line3DBox[{8, 1326, 23, 1340, 38, 1355, 53, 1370, 68, 1385, 83, 1400, 
       98, 1415, 113, 1430, 128, 1445, 143, 1460, 158, 1475, 173, 1490, 188, 
       1505, 203, 1519, 218}], 
      Line3DBox[{512, 2196, 714, 513, 2198, 727, 533, 2202, 741, 547, 2208, 
       755, 561, 2216, 769, 575, 2226, 783, 589, 2238, 797, 603, 811, 617, 
       2246, 825, 631, 2249, 839, 645, 2254, 853, 659, 2261, 867, 673, 2270, 
       881, 687, 2281, 895, 701}], 
      Line3DBox[{514, 715, 2112, 515, 2199, 728, 534, 2203, 742, 548, 2209, 
       756, 562, 2217, 770, 576, 2227, 784, 590, 2239, 798, 604, 812, 2154, 
       618, 826, 632, 2250, 840, 646, 2255, 854, 660, 2262, 868, 674, 2271, 
       882, 688, 2282, 896, 702}], 
      Line3DBox[{516, 716, 2113, 517, 729, 2122, 535, 2204, 743, 549, 2210, 
       757, 563, 2218, 771, 577, 2228, 785, 591, 2240, 799, 605, 813, 2155, 
       619, 827, 2166, 633, 841, 647, 2256, 855, 661, 2263, 869, 675, 2272, 
       883, 689, 2283, 897, 703}], 
      Line3DBox[{518, 717, 2114, 519, 730, 2123, 536, 744, 2131, 550, 2211, 
       758, 564, 2219, 772, 578, 2229, 786, 592, 2241, 800, 606, 814, 2156, 
       620, 828, 2167, 634, 842, 2176, 648, 856, 662, 2264, 870, 676, 2273, 
       884, 690, 2284, 898, 704}], 
      Line3DBox[{520, 718, 2115, 521, 731, 2124, 537, 745, 2132, 551, 759, 
       2138, 565, 2220, 773, 579, 2230, 787, 593, 2242, 801, 607, 815, 2157, 
       621, 829, 2168, 635, 843, 2177, 649, 857, 2184, 663, 871, 677, 2274, 
       885, 691, 2285, 899, 705}], 
      Line3DBox[{522, 719, 2116, 523, 732, 2125, 538, 746, 2133, 552, 760, 
       2139, 566, 774, 2143, 580, 2231, 788, 594, 2243, 802, 608, 816, 2158, 
       622, 830, 2169, 636, 844, 2178, 650, 858, 2185, 664, 872, 2190, 678, 
       886, 692, 2286, 900, 706}], 
      Line3DBox[{524, 902, 2287, 903, 525, 733, 2126, 539, 747, 2134, 553, 
       761, 2140, 567, 775, 2144, 581, 789, 2146, 595, 2244, 803, 609, 817, 
       2159, 623, 831, 2170, 637, 845, 2179, 651, 859, 2186, 665, 873, 2191, 
       679, 887, 2194, 693, 905, 906, 907}], 
      Line3DBox[{694, 888, 904, 2275, 680, 874, 2265, 666, 860, 2257, 652, 
       846, 2251, 638, 832, 2247, 624, 818, 2245, 610, 2147, 804, 596, 790, 
       2232, 582, 776, 2221, 568, 762, 2212, 554, 748, 2205, 540, 734, 2200, 
       526, 720, 2197, 499, 707, 901, 908}], 
      Line3DBox[{910, 1118, 2376, 911, 1131, 937, 2291, 1145, 951, 2295, 1159,
        965, 2301, 1173, 979, 2309, 1187, 993, 2319, 1201, 1007, 1215, 2423, 
       1021, 2331, 1229, 1035, 2334, 1243, 1049, 2339, 1257, 1063, 2346, 1271,
        1077, 2355, 1285, 1091, 2365, 1299, 1105}], 
      Line3DBox[{912, 1119, 2377, 913, 1132, 2388, 938, 1146, 952, 2296, 1160,
        966, 2302, 1174, 980, 2310, 1188, 994, 2320, 1202, 1008, 1216, 2424, 
       1022, 1230, 2435, 1036, 2335, 1244, 1050, 2340, 1258, 1064, 2347, 1272,
        1078, 2356, 1286, 1092, 2366, 1300, 1106}], 
      Line3DBox[{914, 1120, 2378, 915, 1133, 2389, 939, 1147, 2399, 953, 1161,
        967, 2303, 1175, 981, 2311, 1189, 995, 2321, 1203, 1009, 1217, 2425, 
       1023, 1231, 2436, 1037, 1245, 2445, 1051, 2341, 1259, 1065, 2348, 1273,
        1079, 2357, 1287, 1093, 2367, 1301, 1107}], 
      Line3DBox[{916, 1121, 2379, 917, 1134, 2390, 940, 1148, 2400, 954, 1162,
        2408, 968, 1176, 982, 2312, 1190, 996, 2322, 1204, 1010, 1218, 2426, 
       1024, 1232, 2437, 1038, 1246, 2446, 1052, 1260, 2453, 1066, 2349, 1274,
        1080, 2358, 1288, 1094, 2368, 1302, 1108}], 
      Line3DBox[{918, 1122, 2380, 919, 1135, 2391, 941, 1149, 2401, 955, 1163,
        2409, 969, 1177, 2415, 983, 1191, 997, 2323, 1205, 1011, 1219, 2427, 
       1025, 1233, 2438, 1039, 1247, 2447, 1053, 1261, 2454, 1067, 1275, 2459,
        1081, 2359, 1289, 1095, 2369, 1303, 1109}], 
      Line3DBox[{920, 1123, 2381, 921, 1136, 2392, 942, 1150, 2402, 956, 1164,
        2410, 970, 1178, 2416, 984, 1192, 2420, 998, 1206, 1012, 1220, 2428, 
       1026, 1234, 2439, 1040, 1248, 2448, 1054, 1262, 2455, 1068, 1276, 2460,
        1082, 1290, 2463, 1096, 1304, 1110}], 
      Line3DBox[{257, 1631, 272, 1645, 287, 1660, 302, 1675, 317, 1690, 332, 
       1705, 347, 1720, 362, 1735, 377, 1750, 392, 1765, 407, 1780, 422, 1795,
        437, 1810, 452, 1824, 467}], 
      Line3DBox[{922, 1124, 2382, 923, 2289, 1137, 943, 2292, 1151, 957, 2297,
        1165, 971, 2304, 1179, 985, 2313, 1193, 999, 2324, 1207, 1013, 1221, 
       1027, 2332, 1235, 1041, 2336, 1249, 1055, 2342, 1263, 1069, 2350, 1277,
        1083, 2360, 1291, 1097, 2370, 1305, 1111}], 
      Line3DBox[{924, 1125, 2383, 925, 1138, 2393, 944, 2293, 1152, 958, 2298,
        1166, 972, 2305, 1180, 986, 2314, 1194, 1000, 2325, 1208, 1014, 1222, 
       2429, 1028, 1236, 1042, 2337, 1250, 1056, 2343, 1264, 1070, 2351, 1278,
        1084, 2361, 1292, 1098, 2371, 1306, 1112}], 
      Line3DBox[{926, 1126, 2384, 927, 1139, 2394, 945, 1153, 2403, 959, 2299,
        1167, 973, 2306, 1181, 987, 2315, 1195, 1001, 2326, 1209, 1015, 1223, 
       2430, 1029, 1237, 2440, 1043, 1251, 1057, 2344, 1265, 1071, 2352, 1279,
        1085, 2362, 1293, 1099, 2372, 1307, 1113}], 
      Line3DBox[{928, 1127, 2385, 929, 1140, 2395, 946, 1154, 2404, 960, 1168,
        2411, 974, 2307, 1182, 988, 2316, 1196, 1002, 2327, 1210, 1016, 1224, 
       2431, 1030, 1238, 2441, 1044, 1252, 2449, 1058, 1266, 1072, 2353, 1280,
        1086, 2363, 1294, 1100, 2373, 1308, 1114}], 
      Line3DBox[{930, 1128, 2386, 931, 1141, 2396, 947, 1155, 2405, 961, 1169,
        2412, 975, 1183, 2417, 989, 2317, 1197, 1003, 2328, 1211, 1017, 1225, 
       2432, 1031, 1239, 2442, 1045, 1253, 2450, 1059, 1267, 2456, 1073, 1281,
        1087, 2364, 1295, 1101, 2374, 1309, 1115}], 
      Line3DBox[{932, 1129, 2387, 933, 1142, 2397, 948, 1156, 2406, 962, 1170,
        2413, 976, 1184, 2418, 990, 1198, 2421, 1004, 2329, 1212, 1018, 1226, 
       2433, 1032, 1240, 2443, 1046, 1254, 2451, 1060, 1268, 2457, 1074, 1282,
        2461, 1088, 1296, 1102, 2375, 1310, 1116}], 
      Line3DBox[{934, 1312, 1313, 935, 1143, 2398, 949, 1157, 2407, 963, 1171,
        2414, 977, 1185, 2419, 991, 1199, 2422, 1005, 1213, 1019, 1227, 2434, 
       1033, 1241, 2444, 1047, 1255, 2452, 1061, 1269, 2458, 1075, 1283, 2462,
        1089, 1297, 2464, 1103, 1315, 1316, 1317}], 
      Line3DBox[{1104, 1298, 1314, 1090, 1284, 2354, 1076, 1270, 2345, 1062, 
       1256, 2338, 1048, 1242, 2333, 1034, 1228, 2330, 1020, 1214, 1006, 1200,
        2318, 992, 1186, 2308, 978, 1172, 2300, 964, 1158, 2294, 950, 1144, 
       2290, 936, 1130, 2288, 909, 1117, 1311, 1318}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
+cTtIzGFcq7WTvcPo8KJLl1qSCKI7NDZqNl0B14+vHtl/8Qw2hBo+Zp8r9Rx
XkaSfM9U8V/mUfL90g+Zpn/vQT7ba9uT70V6tHj/3oec7REa0SZ6+9pMZS+y
xyc/STEg+/vIF+0nZM9UDJfoJXvn0/dmm8i++aFn/79e9GdUSJ/sSZsP5UmR
/QjneJzrcZ7HuRPnUJw/v3zKfEnmpAvGplfJ3GQr0tlG5iVduYyFNwlfr9qS
vIL0+Rcd9rNIf08vO/WM9CEtlwg10peatD7/8yM1J6nN5N7kLdHfSu7RilDb
PeT+rLptTCd17max+Q6p+xCVq+mk3ke7zv/j5QeHkRSSp7HHnv/jpwWrOHcL
gSOtm/+GTuCascs1lsSz7Pu1WfY+Lwk9lpfb+TyEeYGd/50eGEZLHXW5GtJM
wHNSabfZ9mUcpD/lcTOS2LdTEhuFYv4ywLZP5cOFiUFksmr7Ik1uBVi63j1v
c7AbvLrmFngSPB8tO6Wu/KwMHA8utfx1thu2vhvPGyJyr6KYaQT5uduBIcvJ
3+NbyeeRn380Znt7X3Q3uFzME3Q0VQBlSj6+yomH9moVdetaJ0NlUvbhbcSU
v5LvLDU5jHqUpVvkWefB00Qj2SosGPr7d0bkTw8j/Hz4efFzxkjf4pPnjiy9
cI+8j/fu51fJ85XPJf97voXps1eTz/u03juffM4D1WuSrYlz1z2f27KCuI9Z
vNG/88czBVolZkzAsyNufcQd4vyJw1WuYx/L4epic2/KxW6ovvL34BNvHmqh
L/Eg/z9Fa3Ejf/401M+JvH5h1ysd6pHTgKeGZqxXKXF+yUNz6tuLTDhtZyL5
fSsTFl+XiHk7PIiiVdb8GS4sh3DpM09vJ3fDqOPjahFPHlqkleuUk9gNM5Ln
td24WwZTnIUHFE7w0IfMTAVnS3tos1ovtmrVEVil67P+L3G+Om2XPHnuCXZb
B3mflJ2CS+T5dx+Es8nfP1SR4Emep3zkzT7yHHw/fH9830ZPdbF5xLku324r
pBH3efnc99/5zusqZAq/MsDMZaKy9xMDrLeaBP/YzkFPjrUMF5bRYXEaP7n9
KxMUjpnuu6jDQQHq+74y5zPgsWWFMnsBEzYWQvkWdw6af7jdYVYvDbaadMQ4
rGLBio41R4vcOMgs/o9zoCIdjp+obNB3ZMJAn4r/s1ji/NWG6ovHqDAuUsna
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
b2jc1135w4wFGXZstGFIIk2NtwE6Pj1XDeHepz8tDItSeslGB5Z90LfKqgWB
eFehxvhW0BOQNvg+wEbzHplqsjZXweDOv+F3HFthfn7quqENA+hX5ctlF/3K
YEUyy/z+mlZw+mlk9s1pAP27YzLandQJh+rmHh9s435dDfNVHnPnohN5m0U3
sBkwMOPkb4W5zfC9aYNWRQ4TzRgeHxaQ4t7HRaK38u9phqVmL7+v5j5PDaP/
XAnYRIevh5xq7K80w173vo4H3PPmapTmvEG1A1yV2sOL3zWDhJTaSWHuHPLS
zCVyuVw7GJdt/ZvX2wzx463mt/xZ6NOU9dff/9pgtbrnbA2hFhgMMF4qlsfd
+/6FeN6wb4FNOidVM7a3wGPlR6GXt7OR2j5fr61TTbBw66JnI5tb4Fyv7WJ7
bzZqGTHiuezSCM5RX5N0lrRAfbJcFeJeVyZv6ItZNfUweTApe7y/GXLRw2GP
+QOos1bgYcSiWnjs4eR0OaYZWOGCx/adGECN/rwZPiaVoGP74PmQajMky3jN
tIgfQA6J8oJ7LpSCvsTX/rx3TTBzd92DSe7e7bhDninC7gQ9lQt7bZ0b4e4c
1vrCj0w09XSs6+/mTjhQvTqX/qwRBt9+yGvhXm9iKvXzF1sxoMuDBxXRGmH3
ltowFwnufVuPr6XNnQ7RQsxT6sJN8NCyf7G5NgvFrLN/xHupA6TH899/0WiC
1p5ZFc5+LPRdXlW3xKgd4gxKXjy1b4Jvj73ePMploSnJCN6aVTTQujx3PCak
CWJ8rzwu4+7LlsZRFUVnW2Cs0HSEE9EEhqcNQy2C2Oh3i7PGMUYTNP5cHXL+
UhO0bfSZ866RjdQXKi3TUWkEs6y4obRtTfBKsLDJadUAuqztPNfKth6cVn1X
+8ZoBOSz6VLbpQGUpm5uzOKrAecNOky/U43ceVZ81ovyAWStrXj+6Fg5fCw1
bmjNboBFJUaWgksHUcCUI+fj+2LQ5tOvlmbVwyw9Zudl+0Fkb8jH9ObOTzx/
a6r7huth054qMx4mE4mWsFNivTsh1kf+Ts3KBnBq2Kg/G9/fDDYuKk1hgKFT
ltiQQQO4/1CSUtrLQn05pw8UfqDDJTHakovBDbCzKfe24GUW2to7JhOWyr2v
uu+U+pfZAPY+smzjTBaa/p7BdvBrh/KkTbOf0RpA56Rk8Y8xFlJd6DL8cysN
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
Yic0NQ/ToIDljvQZ4neM2O39551oA2ralDLypcG41Jrva2IZ1KVjpw+P/2iB
QapOsS+OBmxSJyt+jjEovrtxHQeVa0HJ+9ovV5l6ONP4Is+CNkR5OsXTjjlX
QPSqNufUQ3Xg+a1rXqrKMNVnOijpb1sMfVXR3wW8aiBzwa3ffqHDVJZB1amv
2/Lg5to1m/hmKmGJb+BznslhassriTv4HHly7/h1fK58iL3nET5PvuJpNX+4
oh0S5wlfD2mpA8bO+wXrAxkUr6nWq3q3NrjJFaFl9LMOGrjUN2l2MqgygVMf
jdmJb+rJ12XhqoeVxW8VkhSY1PD3S++TZMuA5mbky7O+EqqtElyNk4YpNtXn
kmxvCiBsQegxI6cysDbltVblHaG67uVuljPOgjNatfdlzhfD0h7TmBunRqgK
br/z+Fy4bbvME3xOfEbESA+fD7/fk5YwercNPqz6fGvnyxoY+15VtGEZk6pc
DmOl31vANWIpvehZDWi9Lo/MtGNSfr93PRH8/R7yRjRUYzYUwPbg5TI/bEao
wHO7bUsepYFI4dmKb665oGkqX6yTOkItXjz05znsVN9cI3wua7umbz8+j7X+
ep/NqaEF0o4GneYfqIDd02FmOplM6ozBzXelyQmgvuNauuuSVKjq7zQx/zhC
dcxZ14XPJe+YWT/C55Qraw6cweeTlyr+6tGva3/1acj9ry5xLawTQv6wTqOt
Qh6ZOGvAgRySfjaBC3WK64LIa9StO1/2HEG9ap/7dz4rPP7OqzT975wm6tgq
Ia8kd75KQH6h9gTpI7f0R7QvxL0+h+ayGfd8aHe2JO53zR2vPFHvStnr9VH/
UhSlOVD3dmgr7sE5dzn3axznnit++RjOe0/m33lgJv6dD6fPf+ciztbSGnmo
0MopA/nIZnJVJ3JRitjGQ8gN379em9jl/Kd3wAT5wS+gj1OM7N1PBTV/9jBH
rqk+7l+plnQZ1FnJMo181F2O/oMzqLfaP/ofoL7Yb2pbhnpzYnGPAuqMg/XH
oXVkDu+6OJTiXE5qiMfgPK7/PPbn8706+u/nfbvA38/5s5OX65DPjCZX0pHX
RqO3zSCnnS06YY8c86hish25hn9H+R+eGfnmrI0c4HrW2wO5IMLCPQB5gH1T
4Uncuyum7/3Zw0L8Sotx/+YfC4/BfaC9JskF98PtyBOPcS/UyZvdQR3M1rIY
2U908dnH4AHUw+gz9wJ3Eb2wUudmR/0QWXrXGHVD4vDSomAyh75Lq8KGyFwK
SenP4DxuK1z3Zx70Ht76Mx+3j/ydC9cZ72Lky7p8XV7kzc1TiVnImVEur92R
w2aDz+5FLpM3yilEHtsiKZKFHBMUub0cuYbTS8sSeWbF3jg55IbTSqo7kCNe
T1hPID/YHbWyw73e8D5hDu75h1cHKnG/y1aK9XWRPdfEFW6Ee08nJ2gX7juW
lBIB1PfIUwVSqPfWq1m9UOftmUPyx4kOBqjWPeYkunjFT+qUGNFDnmG2d4ZE
XyJ4RFXriN6sVD5ZhjoT7G1zRZ3MeW/VRtkRMpeyTlEGCmTeDaZY/sznhyeM
P/O6PP7vnB6N1etGnt6Su767kPB1Qc6bxcjVv11/2SJ3qk7kZiOHrrRVCUf+
jOLL9UZu+35AMAc5bss75T/8prdi6jdyUoGxri1yk3vKgj+8JOCecQo5ZmbI
rAG5pv8u3RR5hin7aA9ySY7OUg7klNW3StKQT36BWDbu+4r5KXdw/5/tNI/H
vZ9wKDFkjOy5WD5Hfdx7ho3baLjvgqLypj+SfeDNXDk7SvZDJWvY3l9kL2yU
ydsxO78ezP1/PzciugsiaXOSid5eMuI2AaJ3hgW5vUVE/x4PuCS+JbqXL6hx
kpvoVIIRq4gD0a1if3H9vUSv1Pgu/NEjByPJP/rU8ED3jy4FJjXfQ7+xu1Bx
1pX4j+U/go+i77hn/O0Icol6frufO+GUjgbuKeSTH5H0s+hD1ON9ddGX+M4K
nUQ/Ij6z9zJyvDa9PdiacL2G1CUl5PnlaqEGFOEYuybNkTrCNewbut3eEZ6p
1Ni7tozsdcOPIfMkyZ6fvvTGUZ3sd4MP3RLoZw5IbJ0UJ/7mt412Cvoa88x5
zugHlNYOy0gSf5Ay7/cL9AWGvfflkbPtAuQ2IXeziF2IRd6O/b6Zb5pw0vOk
xN+ahJucivveORNeutR8MKefcAOrq7AZg3AE/27ry16EH+xLCqcvkb1L2/r5
qzLZw4o30ldYkf0rFZEu2kt8VKh+wlQJ8VXN42+90E9tZttLQx9yir1JkJ34
ElerqR3oRzhKbq5ZRvh+A7tPjzbhfYdnMnxxhPPZGjsn9Alne2ktPilMuPuY
UdYG5G2+1p38Rwi3edQsjTAnHEcPOT7VQPjtXGSySCvhGMWa7xdcCde87/B0
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
ujG1YlzpYBimynAkfBF+tjeyjHDF/wNfWOsc
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox["c0", TraditionalForm], 
    FormBox["c1", TraditionalForm], 
    FormBox["F", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{388.99728390054344`, 279.0529325398739},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0.01, 3^Rational[-1, 2]}, {0.01, 3^Rational[-1, 2]}, {
     0.5888395533040279, 1.}}, {{0.01, 0.5773502691896258}, {0.01, 
    0.5773502691896258}, {0.5888395533040279, 1.}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3550771051368278`, -1.8239906211058494`, 1.6052009353904069`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.799670137819394*^9, 3.7996701520384274`*^9}, 
   3.7999270423587027`*^9, 3.7999271494905033`*^9, 3.799927182315302*^9, {
   3.7999272157728024`*^9, 3.799927295813508*^9}, {3.799933959347015*^9, 
   3.79993398797985*^9}, {3.7999340420906067`*^9, 3.799934083678659*^9}, 
   3.799934125543695*^9, {3.799934190663019*^9, 3.799934196524664*^9}, {
   3.799934232364718*^9, 3.799934248482216*^9}, {3.7999343031773567`*^9, 
   3.7999343266447973`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9vQfYJEd1Ljya7pn5vlVC5GCwRE4mfeQcjMk5a7VZm1dpk7RarcJqtUha
lAPJGLjmAfleTE4iIxAiWGQEQogMl2TLBvNgMKb/OedUvedU9amemRX33+f5
Zme6q7urznnrPaFCP2fF1nWrj1mxdf2qFYc/bfOK49etX7Xl8L87bvP4UHVA
r9d/Wq93wD8e3qPvTa8XP/TfM+jDHvl/eeBn/F/V/Od//mfzH//xH/xr3jnG
17xIrvkJ/zfkc6961auaNWvWNGvXrm3OPffc5kc/+lGfTy9qLrrooubYY4/F
EwvF+dwL7Z0XNa997Wub448/vvnqV7/a/OAHP2jOPPPM5vTTT2/++7//m4t/
4AMfaN70pjfJk0ZdxaXiL5Db/zg07F//9V+5BuPb9Prh2He/+12u2Re+8IVe
PWU5795f//rX+fy4Hrjmz3/+c3PMMcc073vf+3DvSeW8e3/mM5/ha37961+P
f8mxk046iUQRfk1Xju/9/PTeH/vYx/iaf//3f8c1u3btai677LLk3pPKeff+
0pe+xNf87Gc/wzVbt25t/vEf/zG596Ry3r0JQXTNN77xDcjxv/7rv5p169Y1
73nPeyDvSeU8ef/+979nBL/5zW/GNZ/73Of4PjfccAPuPamcvXfsPB/+8IcZ
W+9973ubT33qU4zf3bt3D7tPtzvLsPnTn/7UvP3tb29OPvnkZtOmTdzvxn1t
2H3a3un/hjr/z//8TxP+gQTsMXtNg3//v/JV68Cv6L+KRU3/jpSjv6D/ajoq
QOLz9It/vFwK/Tw0MV5Lv/r0iy/p4/hLpbhIqbbFUW6QXvFiuSKSa/qAWHKU
XhPk+lPnGq3PfHqN7Qt8dOhcvSi95rlyzY+ckt7VB6VXP1uu/qFTcuQcOyS9
+ply9Q+cknPOsVukVz9drv6+U3LeOXbL9Oq/k6u/V5JQduzW9KmHniJXfxf3
PNi55nbpE58k19zglPSuvkN69RPk6u/g6KHONXdKr3mcXHO9U7JY6b9KG/oY
ucW3nZK3KF3tPYq/Pkpudh1qeaupb5G06xFyn286Jb073i29+mFy9Teckrd2
jt0jvXpBrv66U/I2zrF7pVc/WK7+mlPyts6x+6RXP1Cu/gqO3sG55n70qYfu
L9d82SnpXf2A9In3lau/5JS8o3PsQenV95arr3VK3sk59pD06nvK1f/ilPQw
8tD06rvL1V90St7ZOfbw9Oq7ytWfx9HDnWsemV4jRXqfc0oWrzb2I5ikxXLT
3/72t5+U+13jXHvEFPcL/7h+L+Nzw+anP/0pe8NUhjwdMv433nhjdFzIo3jN
a17Dvz4oT/+s86S7Fp9eslNiAOeaP/7xj+x47Nixg73Sb3/7283evXub0047
jbzd6OQ59bia/uPb38150hPxpBeGs1/5yle4xNivhg/2ne98hx2n6667rtfx
qE/jZpXzKE+VT0blomhsrHTfcOzKK6/kq37zm9/AvDmPv8p5wD2dY09FNe8S
tFuIqKoADBuAvfWtbx0Gd+gf/uEfcM/ICFdddRXf5aabbuqq6qemrOrTUVXp
uN0hWj80J0R1fIsxSLlJY/DUzcc//vHxA8ZabNX7+9//Pj/4mmuugda/+c1v
ctN/8YtfdGn9k0697+UceybaEh86KSwcBvmT103H3vnOdxLYRWsHs0d9wQUX
cKT3tre9jWVPfYT6BUWAYx0g0A317n1I6vwJp373do49G3W+XTg7KdwchTq/
613v4nKkr3HnlTofxJESRWFUzy1btlCkQ1EaP41gvn379ubaa6+N9Q3V/bhT
tfs4x56L6kaLOimCjdX9xCc+wbx2zjnnUBQmNmBAqueqBIq1IvwonnV/pybP
x9noV0yKd2NvIf4JDCsexLh2pEWqcahCqMFHnOd6dXkh6nJYODspPo5eMHUk
KjfWSKiLxHH79u2zoviw89C/cY69GBWJLuikYHoQjpH5+ed//mfuirHc2NBx
7xlDH9xBlQuQj93zSqciD3COvYQ+K+vcTorGY+Uid4whj3Lf+973+Ni73/3u
EKUEYaUPfWCpIp4nzBHUpIh/jmVAmKUeecUVVzQf+chHmp07d7JMf/KTn4Ta
fAC6eMjUdYgCmg8VKWQERuH0L3/5y+bSSy/litDDiabHtC0hX+/9ziO8qixB
RWN0ZTMJ3rHwgPc5N1twji3DA/4gF77XKfRQ59gKXPh7ufA9TqGHOcdW4cLf
yYXvhmgf7hRfjeK/leLvxAHPz/DauBZXiGfRe4dT6FHOsfW48Ca5cG8oZP2U
uzsXPto5thE3+1e52R7+b4L/UVn/A6mycQfk4tdff70bPj3GOXYMnv8r+/xp
nIrKOhWoBPmF9ICxN+pGgI91jh2HSvxCKnFmKDTJGxC6mWs++clPNh/60Ifw
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
LX4bU1xpiH/ezpzif8+Y9kDvgP8PyLDMew==\
\>"]]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEnXlYjN/7xwtZIrKlRdZCi0i2iGPLGlEpyhKlLFHZQ5QKCWUJWVplKaEo
0SKlxa5SCG2afZrIWkq/pp773PN9fFw//3yuz+s619M9r+fMOWfec+Y8A1e7
WqxpIycnt1BRTq5t83/33P8dGvz94+RxF9K6fBrsNPnshC6zBROqiN8w9wdz
T/SdwuZHdz96OeeE/l/cxZDf/+7GMX/x7toSmzknTP7idl3qcze+n/oXN2jf
+Clpo+lfXF5O+m/OX/x1XZu+c06Y/cULpbzHwr946vZ2MRvfL/qLR39VGH/i
kuVf/Jhbh5ykjYv/4juqO1q9H2vzF1+1XrGyqWnJXxw8vzyUGGWhGU2CPg//
9v4XegYe6Dz9lJ0ch3oGPrFwmHJmBw71DHzWoGGzlLtxqGfgV76Xdp6lwqGe
gV+tnqDtrMmhnoHPm7Xc3F2LQz0D3xW31sRJj0M9A2+TPjF45igO9Qw810W9
vocxh3oG/mno7LbPCId6Bv5+1ampm2dyqGfgDV9KJrefz6GegS845rH3kCWH
ega+b3eKZ91SDvW8zu107SLNRMKLKjgcHsehnoHne7i7dX6EnoEPcen4+uE7
9Ax826qPyfkS9Az8xYNRTrPacqln4KYH7t4a3odLPQNfbNR5zDFdLvUM3Dm6
4oD7JC71DFzFY4VNmTmXegae9uTkqdJVXOoZOJcX7LNtC5d6Bn7np0nxNV8u
9Qx8fpJLmlcwl3oGLtE9/OtPNJd6Bl6oGFU5LIlLPa/va3GyPvYB0bJZPOnt
Ui71DDym6JRDiDeXegb+odeC8VuvcKln4G/TX5iHPuVSz8Dvv3VoM0OCnoHr
BLr4HO7Go56Bj0yRczo+gkc9A7coW562ZQGPegZeu0/u52wXHvUM3ECwYL+2
P496Br54nJOlRjSPega+ztVz7oQMHvUMvP+x4ANBJTzqGXjCp4VXdb/xqGfg
khzvjr2U+NTz2Kr25xZpZpNRjjPnXmtEz8C7Xn5ouWIcj3oGXjm90XzPRh71
DHyu45fbe8N51DPwT9fjV+e+4lHPlHMUjkb/Qc/Ap3VdbGery6eegUeN9Dfs
a8WnnoEHhit3VNvDp56BH+rUqL0zkk89A4+wfexil8unnoGbj7m9uFzIp56B
D9IdnTRASUA90zprdtsaGQioZ+Bmmc5e+gsE1PO4+47CaMcn5POoXeM7hfBw
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
0wD0DDx7n2/O5GL0DHyHity+0yoS6pm9Lx08A++662Wh5l70DLy4tGda/RX0
DPzYT967l8/QM/BZAm3X2dXome6fb0xY86NTDfUMPPejmbf14BrqGfi5a3fz
C40xl6P7zJMWv7kA65Nmz8BHdqwVZ11Dz3Q/tp5m+7ba1dQz8JVD/oRsDEDP
wL+mWp6eUoGegXvvbNwaoyOhnoH32L4yv68zembvSwfPdP/59/v5K3PRM/CG
rSmH51ajZ+DHanb21O5aQz0DH8zlFcfp1lDPwLXmLo33nY6egQ/4WDJt5FL0
2bquiySZtcZmljzMM1s/j4cREw3l1wGvMbc8V+Bz/rLjOTKpz/NQ7weYTz5r
yaOCyan12YPOXsUcstHzhU1jbCBZkuuy7W0g5o32QsO1izX9yJLGLjPnbcP8
cGec7hdbzW2k1D2s6tcSzBsf/yM/LHd4ceVqc/2rgy5U2/bEnPBHy98NI6cE
GccP1WHuN2K0nP215vrTO+5u+/Mj5nvOLfUEk51HTz2Py8Acb9LU3PI21wPJ
4o6vR9yJwLzuRkudfkTr3ObB3b2rqM+gbJ/pe57eJpyp07ZFx2D+1uo5gay+
7Gy8Ngrzt6vhF2YVDI0nNfmDXumdlcnfWvzfJMdfXX+h54/52/6f688s7BhH
Kj6t9Lm4HXPd8y33JYZEq+RU3bLH/DYh7kJYQ8YVUuInZ3V8FuaxTv/I32o/
Rn6T1v9ZY83YhXqYv+2bd/OHtH6u1t2QX70xf1O6l/JLWr/W4YdnghoxRx07
P+j77+b6HdOcf06oxLzUYti1ukXN9c9/nZ7W5xHmoq5tMxuvNNcfuW/i3hlR
mH/6l5bI/2muP/WGVdiHfZhzBrmTKi3bdMJ/amWi7oz5m2bLPJhGVmzT+R2y
CfO3a2ZL+LuSUojdzD1nRG6Yv41t+Zx+n9RlTy06vAnzt8yh7uJXPe6RzrFB
h8udMX8zD/aU/M64Sw4/dg+ZuRxzzpI2hz8PcU0ibVbHf1I0x5zT+R/5W63/
imDt5vp3PtjRedNMzN+8Wu5vGrn96E5D4QTM37qu2RGyu7n+nM95J6v0MH+7
0HLf75O2g798eaOG+ZvelKCL+c31q85e6VTeDvO3ey394S55PGD1HL1qzDln
alyLGNpcv8vOATcrCjDnfHzMM9Np6yNiN2CKb5wG5kKBLf08i5S3m+fvMwrz
t8UN/o+OD8oiRo/sU9SnY/7W2v8ziZxb/KtRCzB/q1x3Oif11UMy7cuNwLVW
mL+1vi8eks+7H22dbI0556Y3kXm8vRlkx+wuaYOsMOcc/Y/8rV5dScO5uf6x
FaNWOVpj/vZwUc8L0vq7CCxWiq0wfzt0SE3zRHP94zfHmXRYiPmb+YP+odL6
J+0wLmuchfmbyg/t/mnN9a+L9c1QnoT520d9/XBp/W8zp5h5QE7Y7PmSw6iB
/Ob6Bw7T+7m+P596fuL4vkdKymOScnvk3Ou56DnofMXJVz0eE6OxPU1OV6Nn
6wJeL+66PJKUc2CqZhfM3zRbPtfkkjnLEm/O08L87RP5ptJdNZekJe5d+GMs
5m/XttefGeKaQz5e71f0ZAbmb65xcmomOdlk1N19x5YukMk5/5G//f68foO0
/nM7bALbWGP+1vo+ekwCluTovFyO+Zv/ih0bpfUrXQgP678a87eFLe+vXNJ4
/M0WMwfM3/o883GV1j9hkb5p1CoB9Vza8r7LIas9rl1euxxzzmjjIHdp/bZ+
U06+s8ac8+kEY4dubV+S+d9U+oWvx/zteMt48oJc7PiH+ysU8zebq6ZrJsQ/
Jw4Lze5deYKe+7WMM8+Jeb3p/M416Lmqt4XzmpXPSOLekA7jlDB/i2kZf56S
jQrfV3Ycgvmbm8+KdUFKT0lsw/Sa0RMwfxv7j/ytIScvRVr/UONj0wqnYf6W
1fjCRLu5/rNpCV5nLDB/Ozy6KE1av5fZZM/8FZi/LdrwfvLC5vq776gbKnDG
/E01suKBtH6LXlNrx2/CnLPsLW/K7ub6HYoEg5U3Y855uZvkobT++wuW3riz
BXNOp0NP3xlqF5DZfpPHDW2HudDjqAXnUl/lk66G9mFqMzF/03+QbztrTz4Z
0mXinc+emL8FtqwD84n4qYVoQxzmnLXf37xfVviK5J0w2sspQs+Lu9td4O19
RSbamo9z+4Wek/VLl23WfUUUG9Ljhb0xf9P4R/62d0HP9qOa6+fXjnZ008Bc
qHW8yicXJ0zPuGWI+Zupn9pBaf2+JjWRNjMwf7vWMo7lk9Qhm2Z+sMT8rUtq
/47Lm+t3rXLbH22P+Ztby/j2imhYTYjpsgFzzsJabX9p/RP6Sx6v3II5p9OW
evkPea/JyFPv3T+dlPHcMm6/Jh+NbuX6VMp4jpHz+dL/NVFbNIk4a2Mu1Dqe
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
JzgsnwlkkuKMrxNPc1g+E8gAgwU9h5z7+/vfGas7y3cN5bB8JpBV19enf43g
sHwmkHK7JfPfRHNYPpvbd0u/mXyNw/KZQPTv7+edieOwfCaQkGuHf2yN57B8
JpDlh++WmieCt6WUV2zkRwy7x6GeYV0UFD7Mq16LSz0Dv31RWa+8L5d6Bt7w
Qvtg5+Fc6hn4XZWwhT3HcKln4BsMGsTdJ3GpZ+CVS7e7dDDlUs/A1XTVyr6a
/f3972jjLKs3VlzqGfi+yiEf45dxqWfgB348OejjyKWegbtv6Oxo5sKlnoFf
7aTu3WUrl3oGLu7VVJ21m0s9Axd9Cbm32YdLPdN1bF5ErWoAl9WfM8n4p6+7
jUnnsvpzJnlVWLm+8haX1Z8zidrZfS6bnnJZ/TmTHPpWkHfsLZfVnzPJddM9
G05zuKz+nEkmV0hC/Gq5rP6cSbp0djm7rIn71/e/C+IUYzS68Fj9OZOIX6Qr
Z6nyWP05k0x5Yq9kqc1j9edMojrrTtlTQx6rP2cS6/pNOcMn81j9OZOEDidN
O+fyWP05k0zrXpATB+eE0/6cSSJK3i15tpqHz7Nm1r1vPfWF/EU86hn4sdNf
1npN5lHPwOfV9SxWX8PD51wzfOBnYac+O3nUM/3edmnQ8tLDPHzONcM1zW5F
uV/k4XOuGd70oPZa/k3eX9//vlEfZtz0ED0DF8Rv6f27ED0D91q69U82Bz0D
Hzlgw037n+gZ+Bdz+7KnHfn4nGv4vvv5zKkd1fn4nGuGG1Rr+qro8aln4N/y
u1v+nMinnuHzgjsxvl1Uhp6B5+QMTo/KRs/ADZceOhNRh56Bz+zteaJTTz71
TNsfVr/fTZ9PPQN3qs3umTSDTz0Dj9+qEPxnGf+v73+7nzDSEm3lU8/0e2rl
YSGeR/jUM/BDg9+k3Y3iU8+UH+MtOH+fTz0DP7Z4SoNOPnoGvj/i2Lo1PPQM
fMiSRwbmjegZuLEg8C2/h4B6hu8rv/GjLdOc+dQz8L5rcx8Mn8mnnoHHRBu+
CTvEp56BP19v9vXdVfQMPPT72EFueegZ+I9DQxOceOgZ+KLBt3IfKgj++v43
Mf7XSr/BAuoZuJZWvkXiFAH1DDyuLNRq8XIB9Qzc/cawX2s9BNQzcIXG6be+
nhJQz8DbVq/J/3VTQD0DX++nfnL3EwH1DHxqd8fu+6rQM/0cZ6Y8ag2cS9/8
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
FUA/18DVTmocneFJ+2RGPhHq0KPo5xq4f/mJd2k29P7LyCda/9h3ZOASev9l
5BMde8YlZR0Ukeca+PktWwec5NDzYuQToX7cgH7egTvXqWxtOC6kP3fMJ868
tOuIfjE9fkY+Eeq4o+h1APiDp2tS936hx8/IJ+bU9Hc06ysm6wDw4SqzFlyb
SOfvGPlEqLM2pNcH4Aaeb+0/29E+jZFPhLrmKHrdAK5tk6va+QztKxj5xD6W
J2bNyxeTdQN8lIZtnsE9C4linWHkB7f3zPEx+1jFig9L9/H+r292ke6DxfTf
E98S7aY+YLKQErDyg3/UjUr/AZ94McA5TPp7fyX9nAKfant+jHW6hKqXn5Nx
IO8L9ZX5JV3yW/TQJ3yn6yv95efNupL9a4B4wR4qkj7v1NuB8KS7w1eM+Fat
eP0UZ8Lnltuq5LblUvdkr0/h/rv36ovdsv6t7/yeS5/5TmQfued+ul2fkVwq
Q5ZPH2OIeZBH7atM3LnUVPk5kCmYx+njFPurkkvpycZj7Ux4/pKD+rek+4t8
PE+mEe5Y4j34Umce5SfLz5rh/thKGL1N1s80Qn4eT4vsL6UWjhNOFnCpALkO
gwnf6KRTHP6NS/0jP183gvABZ7/6fx/IU5y7GDOFcJc607zSXJ5i/IVOhKeV
l8y2r+Ypxj9vGuH8nBm7fNT59DkrzF/cKeznb2tE15dl4z1XS7+8L5T1A12w
f0LLLX81sq8NGh9WPm6GdH+Un+sYiPmCVYIpm47wqFvy8xvDCW82Tk9Jesyj
5svm1Xss4Y5e+YGzVfn0+Qp7wnXbvWycdZyvmO9MJ+TtNdbH5/EV861xwfqy
Bp0OjSK+4rxKFuYL/B+km63vWqOYb5g74evOZA9wG0fXebnOIPx32xXDZf03
A8sHbpt25CcF+7Vm/7rhwhIe9Ub+vepP9vFnA7beTxnAp3Tl5x+GE17aoYBa
t5xP3ZR/3ywIH1kT9XtoCl+hwzwbjJOfbJ4UIqTr4NztMc4feaef2T819Lky
jOdHH6or9IisUeiz3oXwsU0mavl5NfR5M4zn51Z52ufW1yj0cXEn3Lanpndo
P4FCn24zCDd2Xuhr5UjXZ73HeP4wvl9HWX9Ms8n7mj2l6wmpzzoUWX/LiU8d
kp0v1dXHePguG77hRT71WqbbPFPCQyvfRzj8onVzH0N4q6YDKducaxS6rR9P
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
kzgYs59voPK5vv8D6RsrpA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
OZ5W3MauDdbxxsMXJccv1cW34j87c9+mBusD5+mdBGtuWqcfBGtEet7/ovU7
jcvqaE1E11wTrXHovp8Fa3day6ui9RH17e9o7UN9Xhuts+h5lwRrJjtjRbAu
p7VcMTk/+4xx3zNZ4/gYfoE2F2cei72S9/5P8O+TnJN9Dn8RrGUpDlRKzucW
4S+TrBteg79ycs63GP8f0Zqj1sLv0Zqj5vbWaH3zCq3B4DxH47IlWhudAW+P
1hyvgndEa6NXa4yiNSDNtw3R2pPm5+ZoLXU6/Fu0Bqd1sS1ai7xS8zlaP52p
tRatV2od3RWcI2nOrIvWpzQ3Vkbrd1oLdwbnVJrDD8LnZ57nC4NzPK2F9dEa
ltbgL/AZBa/x/ZLz1yW8k32T89cv4RuCczntF7ODczCtiynBel1neHJwjdkJ
nhRcY3aEyyfrgIpRKVmn0x40LFj30/4yJFijUwzcJVmbU2ycF5wran29Ea3r
6fqvRudn7eHXonXADvDr0Xqf7vtmtOaovv0qXaBQimnw6QXHq+uD81XF5MuC
NUPta9IBpQcqDg8MzgMVV8cE65Bag6ODdUjF4bLJ+rXWWkjW9bTv3BKc9yq2
jA3WM7UX7J6sqyo+5Mn69bVwIVmnvg4eT/v6mZ9rXHD+qeftH5xDat/cLVmH
1Z54SXBeqj3irWhdVWt5QHBOq31keLDuqv16aLAeq72+mKwbas+KyXqu9sq9
itZI1Z9l0Tq29s03g2su6dJTknUEaVmTk3UBaVnS3dvR5lT68Wh0rixt827O
PTWzvvFYcE0qnbBf2CmL71zjk5LrfOly0kQrK7dUXhSsf2q9jwj2Kz7cDp+Q
WW+ZlqxBSHPrnFxzSpPpkpxTSjuqqkJA+QjthyTnavXwT03WPqTR3ROsXUgz
fChYi1COJ41f/W9Efx7G3zKz1vdocO2pXOvS5FytLtcZlpwXHg7fG6xRSDvt
mZxnS4P6KFqf1beDkcn5uvTGa4NrUvXzkWBtRLrf9GS9RlrfxGSNQ5qtdGzl
Sk9jZwXXp9o3Rwbrw4qBE5K1Bmm51+BvkDlnuy9Yn5HWOjg5bz4sWmOuhb8y
9plg3UY64dvBdb0G7Z1gDUHfRN4Krs31neKm4LpY+tsbcM/M3zW+iq4bVRM9
G6zVSGP8EO6fWbt7Kli7kJar+klaXE/68FqwtqDvHU8GzzFpwq8Gaxr6xvFK
sI6hbytPB+tL0pnfC9Y09B2nR3I9Iw3t5WDtQt9fXgyuu/XdpFNy3JC21j25
RpIuen7yNxjp1d2SayTp5/OD9QFpkrcF6wbS9Lom5/fSMxcEa1nSIT+Prmn1
fWoO/kaZtcSX4C6Z9fnngut96ahLoutkfUd7P1jTkOZ5Y7DmIE3yxei6Ud8F
LkiukaQx6vub3n87/nd/sG4mffiy5Bqjvvaf4NpZ2ohqCPWnluq+5PqnOm2m
B2sm2iP6JNcq0oGnBc8T7RdjkrUqafLjkjUsfUd4O/rbj2qTj4P1EOVy/ZPr
VdUvg5LrtDqa27Q5KPOefklynVYb//hkjUyaSV70dz3t0SrA9U1Qe+vcYO1F
+vbQ5FquAe0HJtd+0vDL0u7ezHvup8GajHTpVPR3Ge3pexb9XUnxuWrRdZ/W
hb5p6NvByzzPgUXXa+rz/kXr4epnraLrcd23Enxf5ly3YtG1tt7nomBtR7p3
7aJrdsWKmkXXmxqXXYr+pqO8okLR39qUw4xN1hD1PaVj8j4u7bdD8h4nrbh9
cu0mzbl60bWtYl0N5ayZY1Sh6G+vyjfeDdbc9N1zVHJNru87ZYr+xqqcp2+w
LqFviBOCtRflUTOCdTPVEb2Ta3J9CxiRrDvo28r/AVchvZs=
          "]], 
         Polygon3DBox[CompressedData["
1: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
XgGuahx4I3h5+Cd+33qd6IsF4R/gdeDl4Pnh3+FN4dXgxeA/4KHw6vDi8I/w
uvDy8ALwr/DG8CrwIvA0/L3L4TPhreGp4cvgM+Ct4J+5fkN4JXgh+Dd4E3hV
eFF4NDUavCG8HGyzGs4/68JLwR/1RGvNB88IfwIvAy8Azwy/Cy8KzwZP6/zn
50/sRG9tCn/F+KrwEvCc8Nfwap34mbngT+Fl4QXhWeDCz28NbwAvC7/H+GLw
7PB08AfwEp3ozRngfmo4eD14abixp8Hrw8vA73P94vAc8PTw9/Da8LLwfPC3
PdFqSztH4Y/hpeH54Zng7+C14GXgeeF9mY/HwQfAn/dmjbnWXJMdxvbmdQyH
+3HuU8Y+qdG/KzC/P4F/qPGj65Ssp+v+FQfpyfbiz2r08YolP/95jd5eCf4M
/rZGf65Zoue/q/E/a5Xo/S9r9O0qJf7pxxq/tG5JffiiRp+vXPL+v6/xw2uX
+IFvavTsGiV6ubdd79uW1Pe+dv1uV1JPRm/X6/Yl9eSfGr09rKQ+dVr/sXnJ
vdqixse/1KRfq8HUYmrC02s0sFpYjXaa/rqtd7uW1MM/au7/xiX14Lea+71h
ST0pbb3assTf/sr40c6nknrVtP5neInf/Z3xY12vJfWmX+uftiiph+O29XS3
kn4yR1u/TynxR/3b+rl7Sf85scbf9yvxQ8fU+Om/mvjjk2r8ZlPib46u8dd/
NskXTq7xj6XEfxxV47f/aOLv9q/RS183yTv2rdFDXzbx59vUf21F541Wv+1X
o3++auLnt4fHhN9u9dC2akj4zVaPbQePAb/V6is1ulpdjXwGY0fW5Am/N/GL
h9T0y++b+OdJ2n6zX0k/nLjVB/uW9D+91KfwZ7yu4Hj2tr+eXOKfL+Lf9+HP
eV3J8cE1+ve7JnnJgDav2KNEP0zV9ssRJf15RE3/+aGJ/x7c9t+jS/TDyJq8
4ccm/n1gqxdGlvTjQa2eOLSkH+sJ9AZ65DNrPJhezGfss9Zz6b30RMfVeB69
z1HwzzWeS+/lHHQu6hH0CtbIv2s8wMlt/XCu6yn0FqPgsbvRfGo/Neg03dRU
a6trzLW2Tzfzd/8m9UGPo9cxY9ippqfZ2/QsY3WjydRm9pC7azSR2khN1NON
plHbqJlqN55F7+Kccm6pgdXCasTputGEahvvsfdajafWU8NO1I2GVRs6B5wL
9iB7kRrxrpqeae+0xz5T0zPtnfbUp2o0qFpUDzF9Nz3OXqemnLAbTau2VcNO
3o3H0GuoWWfopgfaC+2R43ejidVWzhnnjppX7aumnaIbTau2VUNP6fPgPfBf
5+UmfkIPq5cdyLkDazyoXknPtHdNj7PX2eOur+lx9jozvBtqeoy9xp5yc01P
t7erEW6v6TH2GnvULTUaQa2gBritpofZy+yBF9T0XHuvPfLcGs+ud9ezH17T
M+2d9sDzazy8Xn4wfESNh9fLmzGcUJMJmA24xl3remi9tJ57r5qeae9Uw9xa
o7nUXmqua2syBL2qa9a1q+ZR+5ix3FFTM82WzLSspa55vYiexFrgGlVLPtHO
JzWcWk4NcV1NT7Y3q0EurdGoatXlrSc1mlBtqCa8ukZTqC3UtJfXaAa1g5nV
qBoNo5ZRg1xWo3HUOmqAS2o0n9pPzfec67X+29I6rzTxz/vU+NkvmuShZprm
J580yTq9B97bb5vcG9eQ9/L1JmvLOWTt+KbJ3PIe++w+bXLvnVM+q8+azDWf
sZ9trJJnr0fS789V4p1c887Nd5vUAjMR84E5SvSkHuJgeEiJt7i35rPNVqIH
zSDVe7Ukm7QHey+6Jb3ZHu297ynp3c4Re8NvTeaOc8pe/muTuWYmYTZhpq6P
cQ2bHxxRsrZdo+YFR5as3ftq/PjsJXrYOawW+KXJ3LbGOtf/blJ7rck+276S
Wm0mb572c5Os3p7ls+0t6WXOcdfCP03mvjXctdQpqe331NSiWUv0tWvGuT12
yVqyZlqbZimppc4p1+bEJXPNNat/mK5kLTvHrAXjlsw9M0v15vglWaZr2Lk9
Tsnadg66tiYqmZtmiMOs/SXZojVkKDywpLa4JtTzU5asFWuK/mbaklrjmrTW
T1GyVq1J+o2pSmqVa8RaPHnJ2rGmm+ccXlLrXWPWoglL1p5rzFo1Scnae6gm
r5unxE89XJPnzVvinx6syZ/mLvFf1gD1/YwltcEeoF+auaQ3uOasjROUrMVH
avLO+Ur8yGM1edkCJfreGjTc3lBSmx6tyd/mL/ED1kz9wQwltfRxeG94wRJ/
Yc3VLwwuqcXWHGvPUSW9zT0H89tjS/YiZukmDzu+JK9xT0f/uGnJXo893V47
tKTX26NHwZuV9G57qr1oq5Jea0+yt+9Z0qvM9M0vX2uS9duT7XVbl/RqNYK9
aZcS7aC/OApeviQvVK/be7cpyTfMLM1/dizJMtUU9rqdS7SGmsDeuVOJVjAD
Mc9crSQb8XlbWyctycfPrtkPG7NkP2WXmrzu/SZ5ya41ed0HTfz/7jV53EdN
9n+sT2qT95rkmdY3e+fnTfanrqzZD5isJL/frSbf+7DJ/pDz3146iPGXzHJq
9j/GKNk/cH7Za2aCX+lNfVC7jV6y/+J6tPb3L9lPu7Bmv2FAyX7hDvBY8DtN
8kg1nFpovRJtpz9Su61ekq+rGcz3DirREmoG88CDS7TEbN3kiSeW5IPuIbwL
X1iSv9nz7H0nleSJF3Sjj9XJ7j2oUe6HDynRLmbs5ocHlGTvZmbmmceVZGlq
ILO0A0u0kZrxEfiwEi2pBlMb7VOizWbtJk88oSSfVKOqBdcv0a4Pcx++hD/u
JNNclOvfsXeW5KMLwm/A55bsb7gf417oWSV5kHtor8PnlOytqdnUjnuVaLn5
4FfhM0vy4rH5e190ku9dbA1l/BWOzyjJm+eBX4ZPL8mbF4Hfhi8oyUPVnGrF
vUu06MLwW/D5Jfn13PBL8GkleelC8JvweSV5sJmO2Y496IWaNWTWpQd2bZmR
mJVYs56oeWZmg3oYn6XP2CzYZ+azN69071DPtmRvnvmDrf5xLjjHzL71aM49
M2Pvs/f7PMaHce6DTjzR2d3c8wdaveSzWJzXV53MmVF68W5+9hM/czcZqffy
I59BN/fI7Ng56b1zDfZv9axr0zVrdqency1b48ymnePWPueIWbZz3LljRv9T
6zfce3VPU/8xbvt+rQkDWj1ordCT1lZPqoX0mGb5aii9pzXCvWI9mrXDNe/e
sJ7OWqBnNcvX8+pl9aw9rf7WyzpH3JtQUzh3nCPuTag5nDs+c7Nye5xzQU85
qNW/ajU9oXu7enC9oh7SvVw9u95Sj+1euJ5c763nnbr1g3phPbZ753p6vbce
3r1Ea4ze3gzAvXJrqNmAGcBcrR41GzAzmLPV92oTPb7fbTBD0Ptbg1do/YK1
2Rq5YquvrZ3WsCVbv2Ftc867d+Mady24JtXXZuquVdfcna3edi26Btwbsce5
NlzT7l1aY1zr1uhJW/9g7baGDmn9jrXVGrtQq7etve7ZuHdjj9i8pkYv3Op1
a7c9xL15a769RQ09Wes/1NZ6Lvdy7AF6MTW3e1f2FLW4GZJ7P/YcsyW/4+F3
Pcy03oU/tsc0ycA+rMnUzOb042ZtfofA7xIc5hqryej06/ZUe6t72O5lm8E9
W9NTzCbVMPYaPbfe2wzKrM49bfe2zfyerNnzdi/PPb3/1eyZu3duxvd0zXdQ
/C7KSPjtmu8w+F2GEfCbNXvU7lWb2T1fswfq3vDUJXuje3XzWXzPvvc94SM6
+cx+9q272Ts1T7ZfbqNH7+Qz+Fn0B47PWbKX6pq11jzfZC275+7eu5niizWZ
odmnmYNZonve7jUf3Im38BkXr23y7N0jd6/cTPH1mszIPEXPoHcwo/S7HmZ6
ZpdmaO7lmMmYrZnZWX/tSfYmM0+/y2D+YRZqRmkeYk+2N5vhuXdgRmm2Zybq
dyHMIM1KzQzdSzCzNEs0I/S7MGZKZofeI+/V0E60hhmm+cyoTrScmaB7JRd1
khWaIfrdmYs7yRbNUP1uhRmi2aoZr3snZo5mv//u0TTJKM1mzUzdizEzM0s1
Y3TvynzC7NGMy70yMymzLzM08xZ7uL28t+0/9hu1ghnWzW0/Mtsyw3Jv6cFO
si0z0mPafmZ2aqZqHqKmVFua8ZrXXNn2OzM897bMd8z2zHzdSzLPMQs2k/S7
J2oss0r3cI5vsmfj3o4aff12vajd9ZjuPehB9J7uSbs3rYd4o8bzrdbef72g
ntXn4Rx1rvodAb8roCd4p8ajuReiB9K76UHc29GD6U30HO796In0Iu6Juzeu
J3mtRsPt2s5P54/fqfC7FXqI92r28N3L13N8UOMZXDuuIb2Ema3fDVODmuW6
h+xesp77pRpNvm1bD6wnehL3KvQcehW/4+B3HfRMb9V4JveehnfipfxOgN8N
0LN8VOOB3JvR0+iN/h9sqrPG
          "]], Polygon3DBox[CompressedData["
1:eJwt2HWAFtUaB+CFZZddSqRbJCVFulFUUFoQEClppBuRUBqlpEFKJdSr4rVb
r11goCItqJjYAgKC93md/eP1m/eZ35kZvm/mzFkv7j+686jsKSkpR1SampKe
ktIuNSVlJJyu/xGuZnPYNvYkK6evkJGScgt7gD3DirCL2Gi2mT3C8rAlahxb
we5j+fUV5aawB9mzrCgrzyaz+9nTrBAbrEqwJqwNe9C1rGKz2Vb2BLtYX87Y
SWw7e4oVZrXYQvZwXIuamOn4vA0brp8q973jrWSz2Bb2OCurv9jYsexe9ijL
xwqxTux2dps6ri+rxrB79Dvk8srdqtqz+FJnsOPOUUluGtvINqnhrqUMG5Wa
9OEprCqbyR7Tv4LKOFZlNoPtYC+ykqwKu539l73MSrPC7Do2ky1lPzvvNN6Z
jWez2K9pyb+jIxvDxqoeWdcyki2JsWoAm2TsNay77WPGfaPmswFsjswKx8um
X6SGs0VsA8ulX6AGsrlsJcuuL+UcQ9ladn/ca2ym6s5uYfPZCeeYxW5kU9lC
dpoVNbYHu4OtZSdZEXYDW8DWsFNZ3/P01OT3jt89p2uf53j92Wz9crkU/SVy
t7FH2UuoFLtFtWUj2DT2g+PtUZ+pXPKX2/eFz7lyvW3PkFsi97f9pfnNbB17
gOWMe1T1ZNPYInZGbg7rxaazxewsa2Ls3eyF+H3V7a55qlwHNjruNbmf5Naw
O9lD7AVWRZ/N2AZsSNzf7E250bwFa5+ZXHv8G1awqWxDfC9yJfS7+ccqwzGa
23fI5/K4f22vl3tIrrj+oMwBlc/+q+z70udH+g9VTtvN2EGfh/WH1AW2r2Zf
xT1qfDfbkx1vnuP9af9SNp6tZFvYhfov+VF1oTGt7Tvm82v9V6pARnIffuOz
oLrW9hRjFxj7nf1H1Bcqv32t7Pva5wf6XSrddlN2II6X03jbdY2tpy7x/Qxz
7sbsGtvvyr+nRqQnY9pkJv/G+LeOSk++o3bsE/2n6hfHK8eudKyrVJ3MxGN/
ZkbyGxz2OdzYJravzUyuKa4tN78iNXn+4jmM+2o/36fy2r7SvqNxjxrb1fYk
mbn+vX/Yv1d9rvLY39K+I3HPy3WxPUFuttxv9t/FJrBVbCsroP/bNV/GOrMu
6nLXtIxPZKv12+QK6j+VO6EvooqqYnI7HfN9lSMj+c72+TwnV8f2gJhLjH3V
/lTeiN3MJrO305Lz1mb9WT+1Vya7asiG6ifJvSV3Xq4uG8jGsdfihSRXnw1m
E7RvsH/k6rFBbDx7ne1ke/Xns9mv8rvmYsb2SU3m65i3e7OzcrXYTfrRxr5i
7Bl2KevLRrGX455nOVhFVkldZOxpVpP10Y+Ue0nuL1aD9WYj2IvsFKvOesVc
z55nJ1k11pMNYy/EM8S+iblfZVMFneMEqyLXQz/Ermey7su4P9Mykntpv88/
5CrH/Cw3SO6prPsq5qkOjtNRdVK/y1Vi3eQGyj0p9ye7hN3ABrOn2W+sIusa
8z97gi12L4xgi+MdxXKnJ99p39TkPRHvi1PxnuXD2EL9+niV6Q85Xk7WgF3N
Vjne96x4PAusO7uf9ZXNzsrHM8SWs4Ny6ax+PFtsJesvl5tVZ03Y3awfy8Wq
scZsXdbvlpaaPOPxrO+M70Tdwz7SH5ZratxNKpVViBxbEXO9saf0lWOOYHNZ
n5hn5cqx2mwZG8DysBqsKVvPrnCOe9nH8TyzZjLfOV6xmF9YN7ZdroXcZvYh
O8SayF2hPtH/6b61K2WAXAO51Zq3+GesjswXjpfJGrHWbE1aMq8VSk3moJiL
dht3jBVmV8dzLrcl3t+sCGvFrmdb2Y+sdLwrWC/2EGto/Br2NtvD6jrvt3JF
WWvWlW2T+4GVijmR9WQPs+OsTNx/8ayxR9hP7CLWkfVhO9hhlsEaslZsNevh
PH/qC6uKbA5r5lo2yu1iB1gjmX3G/qO/VDVni+W689/j+VHl2Sw2Lj15X3XJ
TN5L8X7aa+x5mZqqmdwSNkSupFxT1pb9hw1iBVid+E7ZfWwgu5DVZi3Zvaxa
rAfYU+wNVkFmv3PEj1iLtbC5VK663Dz2NHuTlZerweazZ9hbrCK7Qf2hL6Qq
sNnGNpfbJPcBO8gay3zuHKf1VVQDNj/e8+yveK+p+mwe6xVzvr60qs4Wst7s
nL6MqsEWsRvZGX1JVZXdwXqys/pSqhq7M95tzvGrvmx8/2wG281+ifkxvld2
G2vqmje45p1sP2uY9U45mTWXxpz6Rkay9lkv977+PXWB36oxW8fejfeEsfWN
bcTWsnfY56weGxrrdNaSdWaPOW9JuSFsDdseS71Ya6Qn65HrM5N1QqwXjrqW
fKy5XHu5Dax1rHX06So3G86uZYf1uVReNpK1Y0f1JzyrBdhY1o39xgqocmwm
a8UO6HPEeDYsa77/NuudGu/W52NuirWY7ftS/30NpPSTax9rophbnaMgG8fa
xPPP8qh8bFRaUrG9xdit8V3E2ivuD5m/jY1bcYjM2PRkTdE5M1nLxZquA/tK
7rRcIbnx7JqYt1lGnIeNYDezqsa2ZTey51gJ5+nHlrHN7Dwrzm5id7FN7Byb
mJ6s57plJmu5WNP96qIqxO8h11/u8ay1VPnUZE0Sa5M9jnWHsYPYPP2qeKRi
/Rt/E7L5bDXLof/Y2O/1xWPeZpMdr6bxC+SeZW+zSnJj0pP10nWZyTprf9aa
YV/Wuze+/B3G7WL7bafG74SHpiV/Sy5KTdbnsU7PE+9Xx/va9lnfX2G5CXKd
2DF2jhVhE1kdY5ca+wrfxarHuiw9Wat2zUzWvbH+rSe3jL0q96FcTZnabAl7
Od5jrBr7yPV9py8WzxKbZOxlcovlXmLvs6pyP8uVZZ1YX/ao3KXxvbLn2Dus
slxddhf7H/uA1Yj7wtj87HLWkW02dmR6stZvm5n83RB/P3wpdwFrIddBblOs
b9kRff6YE9gYVt85Vsm9yT5lteN+VJ/p/8qW/H+HQf7TNa475oGYn9h0tpYt
N/YJ9hqrpb9e/RTPZMxtbJrcjHC5iWwO+511YcfjeY55jE1lndmP+syY79it
7Dr2gz6nKsGmsKvYHv2ZbP/+yZgymLWMeYydZDnYQLaOrXDeJ/nr7DL9hvTk
fRDvhW32bdRvVtttv85223eP/ojvKi9rxtqxjY73f0HRIjI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
YM3cudj+g76jvuudwZpwWLE9Kf2/qi/Ngvvf1/QZwd+rL3xNXk9UNzZm7nlb
ML8hcy98BfwxXB2+HC6d7As0h+cUOv+/ZS2sydwXN2P+o7x+ag+dkNnTaMD8
qsx9btNia1H1HPo+8zL7VI2Ynw8fDV8C3xzspw2EVzNfBb5MtSjZg7gUbh3s
1/XWO032AtQnql/U83xAazvYf+vF/FXBvl9P+Ep4HNwdbhXsy/XQe8zcgzeB
xxb6u29R/5t57TdmvnyyB6Ees3uh83aGfNHov9G9NeUe1jD/FD/Pj+7/pcc2
Rvspys9Poj1E3cOn0b6h7mFNtEepPPwiWosr51dHe4jKn4+ivUXl7cfRfqXy
eX20p6lcXRvtaSpPNkR7l8qBrdH9g9bOl9H6XmtnVbRnKp02N9qn0F4wK9rX
0F4wI7pfVd2eE+2DaO+YHe13aF9YEd23SPutjPZfpPe2RPeNyr2p0X2y6vPm
6B5P7/GzaC9V72tTtPeq9zUz2qfQnjU52i9QzR8ZXV9Ui16L9miUSxcm101p
j/rJfp/2ym7RnotyrHGybyWN8Ue0ly29/Va0D6LaODra19Ae93u0Z63e5O1o
D0U1v2u0d6Pa1Tnae1XO10neA6SFJkV7H9qD+kX3hFpffaN7fq2vXtGejtbI
tOi9UB5Fj2hPSjn5ZrQXo1rdKTr/VBu7R3tYys/e0T6R1mPPaC9Ja+eNaJ9I
tb1/tKeg9T4q2qfQHj092ivRXrww2v+S/m+W7NNJn1RN9jeleY5J9pGl4S9L
9v6kr45O9pSl289M9m2lV5ske4LScmck+7zStKcn+7zSgacl+8LSh6cme8rS
UdWSfWTpqLOSfWRp2hrJXrM0cO3kfVQ96cnJfq40aq1kf1Z6+Nzk/VVa93/J
Pq90aZVkr1Y6vHKyzysNXzPZ75ZOPiXZC5bGOy9535VO3hG95qWvzk/e46WZ
p0T7UNIkZZPPYNSfHpHs3at3WxztiahH+y7aU9D+MiBaV0mfLIr2UNSv1U3W
GdL5S6I9TfVBy6P9FPU+H0R7KOpr+kTXa9XtZdE+i/qgpdEejfqpC5K1hTT8
r9HnPeo36yXrDGn+MslnD+qnDk8+k1CPdmTyGYZ62MOSfWT1xeWSz2ak5ysk
+/LqfSom+/Xqm36OPitSL3xosmet3vbH6LMi9fuVkr1+9Vw/RZ8nqTf/LfrM
Sf3y2clev/qasdG+pDTbkGi/UvpkQrQXKV03PtqPkw48KNlDV6/3XrT3J00S
k31n9REh2e9Wf1GY7Murd7gk+dxCmnx3tI+jffyH6HMseQt/Rp+lyd84Pvk8
Rn3f99FnWvIcTkg+w1OvlyV7/epB/o4+I5S/8W60Rynt9G/0WaA8kKLkMwP1
OMXJ/r56maHR3qV04Ihor1PabFi0jylN2Cj5TEK9RkHy+Z88mQOTzxjU8x6c
fK4g32N4tO8pDbkn2quSVtke7R9J5wyK9p2lG/+KPr+UD/NOtAetvqBE8hme
/JCSyedM8kwuTu5h1Gc1TPaP1PsMjPa1pbcPST7PkCezN9pHk0b6Ktqfku5q
kHwGoB7t62jPS1piZ7SPJu/iuORzR/WSY6I9XPUm+6K9POm6cdFerfqC/dFn
pfKjvon28uSHlEo+G5P/Mzj6XEE6eWK0D67+5cTk8wz19Qckn7HJFzop+dxC
vsG30b6h9Nv/ASIb9cU=
          "]], Polygon3DBox[CompressedData["
1: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
zcbgRgpNxth8MPe/Tnu7Kuonc2aVosYzl/5/jkqhYZi7LmH8OvWoQeR7aiLf
l/xmvFBj+rbkU7WnS3Pka2t++aec+a1GvKNc2hri3UbUwNYWamTfNCLHqJ1d
nuPZ/oa5WQ3nu5Kf1XauxL5FPXK68e+KHPnLnGu8PzfH3pdTyC0uzhEvrank
52fmqBesGY3vcoQ23nenenAHc+w/jdCQzL0X5NACrMGtBy7MUd+oEVhvXM74
N2ivRN8LjL8oR/6x5rM+OR+8Wj2+gd/iKcYsBR5jzAOfjX2FetT85g85TZYj
14PrnJ5jvJqZ+e0/Oeofa2LzyX9z1B/WzOaTM3LUL9aw5jNjdDNFjWrsfqAt
6sWb6PsH21k5+LwahPnttBz1jhqc+evUHPWZmpv5bvcc+tBWVeg/u+XQF7es
ij4E3rsempbxXg1RLdGaxdpFzVDtUI1xkxz1iXrkMlXkFzVQtVA1xo1zaIJq
g2qMW4LXzdFeqgp+oyapNukzeufQINUi1Sx75aipra3l0HLp9XPYlq6iXrVG
t1ZXE9kuR8xQK/UdjSXGGLWCJ+sRe8w55h41hP1z1MzWztbU++Soqa2trbn3
zbHGbzfCB1x7NRe1F2v4HXLEAGtzc5qxwT2ptuE3da+qyajNqBkMyKHJqM2o
2WydQ4N6tuir1oJqTi8VPcRaVg5hbbdQFdxCjWh60Teebgt9dEzRD61N1aie
KXrpo+A1cqzFwlXo3+Zn126RKvR0NQy1DDWMbXL41AuN8Fl9zfpa/jBPFfqj
mrPaszWJtYk1p7XO8lXUonLiuVNwTLmyHGXOFBxZ7mKOUetWEzf3rJhDf+hY
hT4qBxhd9FP1XjXXSeU8QK4nB1AbUkOSG1i/WEdaT07NoRmqHU4C75nDZ323
larwZX1ULmRNre/qw67NilX4tj7r2qxQhS/ro3Jx56jv6iMv0u5fhe/4DT2b
kPP4bf3GnjV4ZuG3l7PKBXMVXFZN11xtzrb2dY5+i95VzH0z/G077CPo65GD
a71vPOLaowqffdm1qsKXd83xLbaoQg/dI8d5Qq8q9Fh9eLq+VoVvu4bmfjmA
a+s3V5tWY3YtnJNzb1YxV3P60Sk0OXO9+oBja1Xo9f6G2q+arb/tHNRm1Zyd
Wx/e51/gceB+4J7ct3fBQ3JoYGphasQ75ohJatNqysYqNV+13/vBO+fQkNWS
1YR3yhGz1LbVtI1lfXj+QSk0A7UDa465UtRk1iLWfB1S1GTWgtZUxjpjnrWW
9dl8KTi0XFqNe3bRk603rSE7pqiZrC39Bp1KPea3seacJ0XNZC1qjFJbcw8Z
u9QLrGV+TaHNXJaDH6jBq9dYo71X9GJrNzU3v/3mVWhxctB1U3BWuamayEng
aeV91Tis9e9KoX3s3Az9zxxtrh7SjFxtzjf379EMriRHkivt3QyuJT+R+2wL
Xtfc3gi9ejvweuBPGqGnbw9e39zeCH36qGZ8a2OAseDoZsQCv7nf/phmfHu/
od9y32ZwYzmYXGyfZmhbcma5857N4G5yNrnbDs3Q+tX81cd3aob283Ujzvv2
aga3kzPKHXdvBteXE8oNdwNvWY8awFpAjWhIyS9qRw/naJtz1OceyaHPOMax
j+fwXX1Y/UWfdq+uVYWvP5pDX9wlRf1kDWEtIQdXq7HGsNawxlBLOrYZvqTP
6DtqWrumeIZalxxfrm/NMHfx7xNL/DR27NIM7ibHkmvt2gyuJf+S683H/V82
wsdebYsc6l5dv4rc+hj4rnr8pr89Ocdec8+pN5kT3IvrVZErjmuGb7tn3Dtb
M+aokl/dz9aH+uNz4OdynMm4XhPou7I9NK6DSnxW+1ITO7DED+fmb+5V9rf5
xW+8d9n/al/T28LfxhvD2yMHykXvTpEbzZnunXtS5NKtmqH1mUPMJXI8/feB
FNxPDfjgEi/Uho+QI9Qj5jp/azRrNWs8a/EBzTgrkt/7Pls3gzvOaMR8rOGs
5azROpR4d2ThG8av/oxfsR6c09/vzvgtsV9N32o5NNDuJX8Yi83hPn9kitxu
zSLXfSPFfti/GbWenFfue0AzuK81hLXE4c3gonJIuaQ1mLXYu1zP+L7N0HPM
0ebq/ZpRC1lDWks+myO3zuaaRvvIZuRyY6qxVc7i9xiVgssc2IzaxZrG2ubg
ZtQu1iTWJgObEZ+sIawlBjdjvYyxxlrrxacbocmMwnYQ13b1qIGshQ5pRm1j
zWPtox4tX1BD8Dz2sGZ8Hzm4XPzQZtRG1gjWCmrSG6bQKNWq5Yxqnz2q4JJP
5vAFfVRfVYPpn0ITUZtR49kixRmI2o+azuYpzgzUejzj2KzwC88+5LByxdWr
4LZyYLnqalVwY9dj4Xq8s+8uBzYXrlEFN1ZT65dC01ZrM6YYW4xJajXGqJ0L
f5PreAbSs+Qb8/tTxrR6+Li+7hnCoMK35T/6pL65aRW51jOdbVNozJ71eAY1
oRE1h2dTatqeBa1dhdYthzXXr1MFt1Xz7VvqBbVgNaA+pV6QH6n5bZ1Cw1cL
9Px2VtF7PPtwT80serKxY0wOfdE1c+1G5+Ba7hH3yr9znDf5fxQ8j1Effr+c
16kHuydnlPNdY4cxUC7/UIrYaM4wd5gj/b8jno9Z+1oDqwcbg4xFa1bBfdU0
PFuXY6l1qIGcWPKv2siUHLHPGGhulvPLTdatohYwR5orjYme7ZpTza3GJM+G
zanmVmOcZ9fWLMbWQVWc/ZvzzH2ex3t+Zw1i7bJRFbWJZ1aDCz/3LEuNRK1E
DcyzDTWfroXvyVfU0LoUPurZw705fFcf0pfuyqFH9khxHnAP+BLwxinOS4xZ
cpEFq4hld+fQdzdKcV5yf47Y5p5x74zNsXfcM+6d+3LsHfeMe8czpA0Kn/Zs
yWf4LOfgWcwTOXKHOcPc4Zycmz7i2YUal1qXmpJnh87RuTonz3rUmLoV/utZ
SY8yv+Wq4N4PlXzuHnAvqKnJ1+Vscjc1KOPpjBT84oEce1Of1/fH54gV7ln3
7rgce8E94F6YkMP3jSnGljtzxCLf2XcfUvjFZlXkVjmxtejGVXDlieCb67GH
3EtqnGqdaqCeLcmJrUU3qYIrP5jDF9zz7n01MrUyNTTPWtVE1UbVTD3rU0NV
S1Vj9axoUo5YoE/pW/8HkprN6Q==
          "]], Polygon3DBox[CompressedData["
1:eJwt13W0VWUeBuAjNw6SSjfSDKm0Sji0wAWklXIkJQ0EFAREJBXQAWFGQkdC
pEFKSpBOAUEF1BlAnZFySY2kz7f2+eNd677P/e19Yn97n72LPDew1YB0sVhs
t6TI9PSxWF1/dEuOxbrL6ftjsddZTlZNry47WDf2nb9vJsVit2QRW5Yai8Xv
i8WeMdtRFpqpJ1PMrTGzViaYa8E2hn3r38t09iF7yjYv8Zflv+xJtsTfB80c
kinsTVbcXAPeUPaxIeyGv/NIXtnCJrHK5trobeUoa8Bm+3udfa2XSexVlmqu
FC8tX7AJ8VjsU3/vN1PQ5/nS5+pk7isWk5bsF7bcXBbbVmSjWEl9pWRjldlb
rGw8+g6mJkevGV77qtd4kU9ki/Xbdvux/b3EJrGl7A6bx5axzPZXgY+0vxL6
azJd32YulS019yqbxrayFLaELWWZbFuej2DF9SWSkZVjr7Ni4bPK/awMG8aK
6OulIKvNprCq+lrJz2qyd1hlfY3kY4+zt1klfYi8p2/0XpLYp97LOlbAXC0+
mVXRV0l2VoWNZeX01ZKDVWXjWHl9sWRgZdlwVlRfIQ+ySmwMK6N/JnnZY2wS
e0QfKn/XN3svyWyx9/Iye5stZ3d9z/PZNPYlO8eqmjvFRjpueeyvMZ/JKpoZ
wXKzRmwGqxCPzo9cKdF6DOvy0QzWAyvEmutzzVUPx0z26r96jZrsjNd4y1wp
c+35QlbbzBusMGvBPmTVwmeQ7fpZ21ZhJ237HtvGzrDK7Ds2lW1gJ1k5dpS9
E75rdowVZ/vYK2wyW81ibCEbxN5hK9k9vIANZu+yDSyduUVsSviu2XFWkh1g
M9hRdoXVZ7+y99kR9jurx/7H3mWfs1OsPDvGZrL/sHTSmv3BFrEU30FJNpQV
0j+RZFaCDWEF9YWSxIqzwayA/qb8K5zLXiMH+9z+RrOPwrWBZWcb2Fg2n+1i
udlmNoy9z75Miq5l4Zq2jVXyGq35fNZUHyMf69vN5WQbzW1nj5p7JpzX7Cn9
C3mEtWLzWJNwfOVDfZNts7H1th3B/slWsMxsdVh/7AO2imVhn7GJ4XxgB1gh
toONC98N28vys21sPFsUro+sANvONrJi3kt9/j6rGc6DcM0K10dzxdhec5PD
eci+ZiXYfjYpnHPsCCvK9rBRbBb7jGVla8J6ZvPCbwTLxTaxTewvXrcJ/4D9
Vd8q5Vgam8Pq61ukLGvGZrN6+hz5Q88nfdmD4ZjJfeaKskEsn75A0rFi7BWW
P7wPuac/JC+y3Ppsua7nludZ1vAZ5JqeS3qzLPo/5Hc9u/RgGcPxkSt6DunJ
MoXjI1f1nNKLZdbHOn9Ley8d2CesTlgrclcvLC+wXGENyC29gPRn2fUd8rht
O4XfAdY6XJfksfCbypawVvpmKcOaslmsrj5Xbur5pR/LFs41KWquHpvOHg/X
BynC6rJp7DF9pzRhfcO6ZM+F80Vu6wVlAMsRziu5oxeSgSyn3t7n3aefd8wv
yGy/b2NYSftrxxeYq2VuNHuItWQfsRqsOzulZ5SO7HfrpQc7rWeSTuwK68m+
1zNLZ3aV9WPnEscjHKPbbAD7OXEsw/G4y3qxH/Qs0oVdYwPZL4l1EI75PdaK
bdUv+wx12AnWm/3IskpXdp09z/6tPyDPshusLzubWC/d2U3WkM3VD9tfYbY2
NboHmZMc3c+E+5p74f4qrDe2TM9kblW47pr7LbF2w3qJm6nPZui7zeVhK8w9
xbawS6w2O54a3V9tSo6ORTgm2fwe9WFnWDbpZu6Wuf7sp8TaDev5DmvG1ug/
2a4aOxR+K9jlxNoNxzzVe3mZXUysjbB2k1kHdkC/bdtm7Kxtu7CvWbK0ZedZ
V3ZcT5F27CLrzI7pSdKGXWBPs4P6HftLY+dSo7W2Pzm65wz3nrl9to7sMLun
tzD3s7ln2CF2lzVnP7HWbAe7yhqw71kbtpNdYw3ZadaO7WY3WGP2Y7g3YxcS
52o4t5J83hfZ+cT5Fq5N6dgL7NfE9aoPu48NYpcS50w4j1Li0f3zST2D3B/m
fY6/sW/8HZcO5i573efYt3p6eZr9xtqyXfp1768R+4E9y06wVGnPLrE0tlb/
2Vx1dpA1Z+vYL6wGO8xass3sIqvFvmazWJpz9fWwVln3cK1jzdhwdpB1C9cD
1oaNCb8XrE+47rJ2bCw7wfqxcaw86xzWOWsYrsWsORsRzhHWI1zHWQc2nn3L
BoTrPWvPxrFvWP/wu8BasJHsK9YzXK9Ya/YmO8aej0fPFa3YaPaGtPA9D00f
Pew8HMxcXnPDWFZWh01lpdlw9gB7gr3LSoXfANaYDWV7WNd49Pzx/+To+SE8
RxTxGq+x9OZq6OPNFY5HzxrxlOgZKjxLVTA3l7Vko/Qj5nqF3wrWlr3FjrO+
4frAGrEh4fxnXdhM1pANZrtYZzaDNWCvsJ2sE3uP1WYD2FbWLtzTsVqsP9vC
2rCprCbrxzaztuG+k9VhA9kXrD1rypbrP1ovFdku66UxWxiODyvNtqRGz29L
k6NnvPCsl8HnbcKWsR/0CuZ2mmvEFoS1wkqxranRc16JlOjZLTzD1bXtNPYE
e0HfZq5DPHperZcSPTOGZ8c0c5NZddZLX2euebivZdVYT7aWpYV7H1aV9WBr
WLNw78fqs0FsB+sYj54lq6REz8PhufhJrzGBVWRd9RXmGpkbzyqwLmw5a8Cm
sBqsN1vPWrCJ7GH2LFvJGrM98eg7D999J//bq/8J/X32JQ==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvX1EAwPFT71eRNF2JxkpiJ/6AmoxsNoYyMohJGMTIIGwVmo46iNHP
W73fbxFar8W7IvicpMM3n3Nv7j0595xbVNdY/e1DCKFdD4rjG52oLjWEfDax
kG0sZTcr2M8q/mQtx9jAOc6rxfgvO/nIXqalhTDIz/zFYiY4wD980qrudKVE
UghrnOA6J7nBKW5ymluc4TZnOacd43nu8jf3uMB9LvKASzzkMo84lBzCOf/p
WPe6VqW1rbCM4/zCEX7id6awJz7vGzt4xlM1x/WxnqOs4Q9+ZR/L2cUStrIg
3jfXadwv5elWl8q1xlzm8COzmMMMZsd9ZVZcCzOZxAy+OdBXpRu/0PThmalx
r5kSz53Jcc/ptTDs4uL///AOKc9PKg==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stOU1EUgOFdaAF5gcKQSeEF0BcoPICFMaTOuU25tVbFGTwBJk5JuYRg
QqAhhBATuSiIggqGoDAA5TbTgvKdMPjzrcHZyTlrn4Zs9+OuWAihoAvDX55x
X6+rQnjAadZxiY3c5EMesIW/2MYyn7C2OoQ+1jPPJo7xEV+xlZNsZ4nveMgr
reu3jtUfD2GDA9zkIN9ziB84zC3muM08n+qjucAdPuMnPudnvuAuR7jHl/zC
jkQIR7zWV53rRD3ebY1ZLjLDItMcZzNHmWKOSfayhln+sZMMT5nmNzZH38kU
S0zyree/8zI6G+1UP7VaGUI1V1jFZSaiu2A8Os9KLrCC84zxDecUzLP8b5zh
P07xlkXecIJldtrBj9j9f3AHhD1QnQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1378, 1690, 2216, 1600, 1377, 2217, 1601, 1379, 2218, 1602, 
       1380, 2219, 1603, 1381, 2220, 1604, 1382, 2221, 1605, 1383, 2222, 1996,
        2320, 1384, 1997, 2321, 1385, 2223, 1606, 1386, 2224, 1607, 1387, 
       2225, 1608, 1388, 2226, 1609, 1389, 2227, 1610, 1390, 2114, 2228, 1611,
        1691}], 
      Line3DBox[{1392, 1998, 2322, 1391, 2229, 1612, 1393, 2230, 1613, 1394, 
       2231, 1614, 1395, 2232, 1615, 1396, 2233, 1616, 1397, 2234, 1999, 2323,
        1398, 2000, 2324, 1399, 2001, 2325, 1400, 2235, 1617, 1401, 2236, 
       1618, 1402, 2237, 1619, 1403, 2238, 1620, 1404, 2239, 1621, 1405}], 
      Line3DBox[{1407, 2002, 2326, 1406, 2003, 2327, 1408, 2240, 1622, 1409, 
       2241, 1623, 1410, 2242, 1624, 1411, 2243, 1625, 1412, 2244, 2004, 2328,
        1413, 2005, 2329, 1414, 2006, 2330, 1415, 2007, 2331, 1416, 2245, 
       1626, 1417, 2246, 1627, 1418, 2247, 1628, 1419, 2248, 1629, 1420}], 
      Line3DBox[{1422, 2008, 2332, 1421, 2009, 2333, 1423, 2010, 2334, 1424, 
       2249, 1630, 1425, 2250, 1631, 1426, 2251, 1632, 1427, 2252, 2011, 2335,
        1428, 2012, 2336, 1429, 2013, 2337, 1430, 2014, 2338, 1431, 2015, 
       2339, 1432, 2253, 1633, 1433, 2254, 1634, 1434, 2255, 1635, 1435}], 
      Line3DBox[{1437, 2016, 2340, 1436, 2017, 2341, 1438, 2018, 2342, 1439, 
       2019, 2343, 1440, 2256, 1636, 1441, 2257, 1637, 1442, 2258, 2020, 2344,
        1443, 2021, 2345, 1444, 2022, 2346, 1445, 2023, 2347, 1446, 2024, 
       2348, 1447, 2025, 2349, 1448, 2259, 1638, 1449, 2260, 1639, 1450}], 
      Line3DBox[{1452, 2026, 2350, 1451, 2027, 2351, 1453, 2028, 2352, 1454, 
       2029, 2353, 1455, 2030, 2354, 1456, 2261, 1640, 1457, 2262, 2031, 2355,
        1458, 2032, 2356, 1459, 2033, 2357, 1460, 2034, 2358, 1461, 2035, 
       2359, 1462, 2036, 2360, 1463, 2037, 2361, 1464, 2263, 1641, 1465}], 
      Line3DBox[{1467, 2038, 2362, 1466, 2039, 2363, 1468, 2040, 2364, 1469, 
       2041, 2365, 1470, 2042, 2366, 1471, 2043, 2367, 1472, 2264, 2044, 2368,
        1473, 2045, 2369, 1474, 2046, 2370, 1475, 2047, 2371, 1476, 2048, 
       2372, 1477, 2049, 2373, 1478, 2050, 2374, 1479, 2051, 2375, 1480}], 
      Line3DBox[{1484, 2265, 1642, 1482, 2266, 1643, 1486, 2267, 1644, 1488, 
       2268, 1645, 1490, 2269, 1646, 1492, 2270, 1647, 1494, 2271, 2059, 2384,
        1496, 2272, 1648, 1498, 2273, 1649, 1500, 2274, 1650, 1502, 2275, 
       1651, 1504, 2276, 1652, 1506, 2277, 1653, 1508, 2278, 1654, 1510}], 
      Line3DBox[{1509, 2391, 2066, 1507, 2390, 2065, 1505, 2389, 2064, 1503, 
       2388, 2063, 1501, 2387, 2062, 1499, 2386, 2061, 1497, 2385, 2060, 1495,
        2383, 2382, 2058, 1493, 2381, 2057, 1491, 2380, 2056, 1489, 2379, 
       2055, 1487, 2378, 2054, 1485, 2377, 2053, 1481, 2376, 2052, 1483}], 
      Line3DBox[{1512, 2067, 2392, 1511, 2279, 1655, 1513, 2280, 1656, 1514, 
       2281, 1657, 1515, 2282, 1658, 1516, 2283, 1659, 1517, 2284, 2068, 2393,
        1518, 2069, 2394, 1519, 2285, 1660, 1520, 2286, 1661, 1521, 2287, 
       1662, 1522, 2288, 1663, 1523, 2289, 1664, 1524, 2290, 1665, 1525}], 
      Line3DBox[{1527, 2070, 2395, 1526, 2071, 2396, 1528, 2291, 1666, 1529, 
       2292, 1667, 1530, 2293, 1668, 1531, 2294, 1669, 1532, 2295, 2072, 2397,
        1533, 2073, 2398, 1534, 2074, 2399, 1535, 2296, 1670, 1536, 2297, 
       1671, 1537, 2298, 1672, 1538, 2299, 1673, 1539, 2300, 1674, 1540}], 
      Line3DBox[{1542, 2075, 2400, 1541, 2076, 2401, 1543, 2077, 2402, 1544, 
       2301, 1675, 1545, 2302, 1676, 1546, 2303, 1677, 1547, 2304, 2078, 2403,
        1548, 2079, 2404, 1549, 2080, 2405, 1550, 2081, 2406, 1551, 2305, 
       1678, 1552, 2306, 1679, 1553, 2307, 1680, 1554, 2308, 1681, 1555}], 
      Line3DBox[{1557, 2082, 2407, 1556, 2083, 2408, 1558, 2084, 2409, 1559, 
       2085, 2410, 1560, 2309, 1682, 1561, 2310, 1683, 1562, 2311, 2086, 2411,
        1563, 2087, 2412, 1564, 2088, 2413, 1565, 2089, 2414, 1566, 2090, 
       2415, 1567, 2312, 1684, 1568, 2313, 1685, 1569, 2314, 1686, 1570}], 
      Line3DBox[{1572, 2091, 2416, 1571, 2092, 2417, 1573, 2093, 2418, 1574, 
       2094, 2419, 1575, 2095, 2420, 1576, 2315, 1687, 1577, 2316, 2096, 2421,
        1578, 2097, 2422, 1579, 2098, 2423, 1580, 2099, 2424, 1581, 2100, 
       2425, 1582, 2101, 2426, 1583, 2317, 1688, 1584, 2318, 1689, 1585}], 
      Line3DBox[{1599, 1696, 1695, 2440, 1598, 2438, 2113, 1597, 2437, 2112, 
       1596, 2436, 2111, 1595, 2435, 2110, 1594, 2434, 2109, 1593, 2433, 2108,
        1592, 2432, 2107, 2319, 1591, 2431, 2106, 1590, 2430, 2105, 1589, 
       2429, 2104, 1588, 2428, 2103, 1587, 2427, 2102, 1586, 2439, 1693, 1692,
        1694}], 
      Line3DBox[{1698, 1990, 1161, 1697, 2543, 1905, 1699, 2544, 1906, 1700, 
       2545, 1907, 1701, 2546, 1908, 1702, 2547, 1909, 1703, 2548, 2115, 2441,
        1704, 2549, 1910, 1705, 2550, 1911, 1706, 2551, 1912, 1707, 2552, 
       1913, 1708, 2553, 1914, 1709, 2554, 1915, 1710, 2215, 2640, 1916, 
       1991}], Line3DBox[{1712, 2116, 2442, 1711, 1176, 1713, 2555, 1917, 
       1714, 2556, 1918, 1715, 2557, 1919, 1716, 2558, 1920, 1717, 2559, 2117,
        2443, 1718, 2118, 2444, 1719, 2560, 1921, 1720, 2561, 1922, 1721, 
       2562, 1923, 1722, 2563, 1924, 1723, 2564, 1925, 1724, 2565, 1926, 
       1725}], Line3DBox[{1727, 2119, 2445, 1726, 2120, 2446, 1728, 2566, 
       1927, 1729, 2567, 1928, 1730, 2568, 1929, 1731, 2569, 1930, 1732, 2570,
        2121, 2447, 1733, 2122, 2448, 1734, 2123, 2449, 1735, 2571, 1931, 
       1736, 2572, 1932, 1737, 2573, 1933, 1738, 2574, 1934, 1739, 2575, 1935,
        1740}], 
      Line3DBox[{1742, 2124, 2450, 1741, 2125, 2451, 1743, 2126, 2452, 1744, 
       1208, 1745, 2576, 1936, 1746, 2577, 1937, 1747, 2578, 2127, 2453, 1748,
        2128, 2454, 1749, 2129, 2455, 1750, 2130, 2456, 1751, 1216, 1752, 
       2579, 1938, 1753, 2580, 1939, 1754, 2581, 1940, 1755}], 
      Line3DBox[{1757, 2131, 2457, 1756, 2132, 2458, 1758, 2133, 2459, 1759, 
       2134, 2460, 1760, 1224, 1761, 2582, 1941, 1762, 2583, 2135, 2461, 1763,
        2136, 2462, 1764, 2137, 2463, 1765, 2138, 2464, 1766, 2139, 2465, 
       1767, 2140, 2466, 1768, 2584, 1942, 1769, 2585, 1943, 1770}], 
      Line3DBox[{1772, 2141, 2467, 1771, 2142, 2468, 1773, 2143, 2469, 1774, 
       2144, 2470, 1775, 2145, 2471, 1776, 2146, 2472, 1777, 2586, 2147, 2473,
        1778, 2148, 2474, 1779, 2149, 2475, 1780, 2150, 2476, 1781, 2151, 
       2477, 1782, 2152, 2478, 1783, 2153, 2479, 1784, 2587, 1944, 1785}], 
      Line3DBox[{355, 1042, 356, 1043, 357, 1044, 358, 1045, 359, 1046, 360, 
       1047, 361, 1048, 1049, 362, 1050, 363, 1051, 364, 1052, 365, 1053, 366,
        1054, 367, 1055, 368, 1056, 369}], 
      Line3DBox[{1787, 2154, 2480, 1786, 2155, 2481, 1788, 2156, 2482, 1789, 
       2157, 2483, 1790, 2158, 2484, 1791, 2159, 2485, 1792, 1256, 2486, 1793,
        2160, 2487, 1794, 2161, 2488, 1795, 2162, 2489, 1796, 2163, 2490, 
       1797, 2164, 2491, 1798, 2165, 2492, 1799, 2166, 2493, 1800}], 
      Line3DBox[{1802, 1265, 1801, 2588, 1945, 1803, 2589, 1946, 1804, 2590, 
       1947, 1805, 2591, 1948, 1806, 2592, 1949, 1807, 2593, 2167, 2494, 1808,
        2594, 1950, 1809, 2595, 1951, 1810, 2596, 1952, 1811, 2597, 1953, 
       1812, 2598, 1954, 1813, 2599, 1955, 1814, 2600, 1956, 1815}], 
      Line3DBox[{1817, 2168, 2495, 1816, 2601, 1957, 1818, 2602, 1958, 1819, 
       2603, 1959, 1820, 2604, 1960, 1821, 2605, 1961, 1822, 2606, 2169, 2496,
        1823, 2170, 2497, 1824, 2607, 1962, 1825, 2608, 1963, 1826, 2609, 
       1964, 1827, 2610, 1965, 1828, 2611, 1966, 1829, 2612, 1967, 1830}], 
      Line3DBox[{1832, 2171, 2498, 1831, 2172, 2499, 1833, 2613, 1968, 1834, 
       2614, 1969, 1835, 2615, 1970, 1836, 2616, 1971, 1837, 2617, 2173, 2500,
        1838, 2174, 2501, 1839, 2175, 2502, 1840, 2618, 1972, 1841, 2619, 
       1973, 1842, 2620, 1974, 1843, 2621, 1975, 1844, 2622, 1976, 1845}], 
      Line3DBox[{1847, 2176, 2503, 1846, 2177, 2504, 1848, 2178, 2505, 1849, 
       2623, 1977, 1850, 2624, 1978, 1851, 2625, 1979, 1852, 2626, 2179, 2506,
        1853, 2180, 2507, 1854, 2181, 2508, 1855, 2182, 2509, 1856, 2627, 
       1980, 1857, 2628, 1981, 1858, 2629, 1982, 1859, 2630, 1983, 1860}], 
      Line3DBox[{1862, 2183, 2510, 1861, 2184, 2511, 1863, 2185, 2512, 1864, 
       2186, 2513, 1865, 2631, 1984, 1866, 2632, 1985, 1867, 2633, 2187, 2514,
        1868, 2188, 2515, 1869, 2189, 2516, 1870, 2190, 2517, 1871, 2191, 
       2518, 1872, 2634, 1986, 1873, 2635, 1987, 1874, 2636, 1988, 1875}], 
      Line3DBox[{1877, 2192, 2519, 1876, 2193, 2520, 1878, 2194, 2521, 1879, 
       2195, 2522, 1880, 2196, 2523, 1881, 1345, 1882, 2637, 2197, 2524, 1883,
        2198, 2525, 1884, 2199, 2526, 1885, 2200, 2527, 1886, 2201, 2528, 
       1887, 2202, 2529, 1888, 1353, 1889, 2638, 1989, 1890}], 
      Line3DBox[{1904, 1995, 1373, 1903, 2542, 2214, 1902, 2541, 2213, 1901, 
       2540, 2212, 1900, 2539, 2211, 1899, 2538, 2210, 1898, 2537, 2209, 1897,
        2536, 2208, 2639, 1896, 2535, 2207, 1895, 2534, 2206, 1894, 2533, 
       2205, 1893, 2532, 2204, 1892, 2531, 2203, 1891, 2530, 1993, 1992, 
       1994}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{500, 723, 2217, 501, 737, 2229, 529, 2327, 752, 544, 2333, 
       767, 559, 2341, 782, 574, 2351, 797, 589, 2363, 812, 604, 2377, 827, 
       2266, 619, 842, 2279, 634, 2396, 857, 649, 2401, 872, 664, 2408, 887, 
       679, 2417, 902, 694, 2427, 917, 709}], 
      Line3DBox[{502, 724, 2218, 503, 738, 2230, 530, 753, 2240, 545, 2334, 
       768, 560, 2342, 783, 575, 2352, 798, 590, 2364, 813, 605, 2378, 828, 
       2267, 620, 843, 2280, 635, 858, 2291, 650, 2402, 873, 665, 2409, 888, 
       680, 2418, 903, 695, 2428, 918, 710}], 
      Line3DBox[{504, 725, 2219, 505, 739, 2231, 531, 754, 2241, 546, 769, 
       2249, 561, 2343, 784, 576, 2353, 799, 591, 2365, 814, 606, 2379, 829, 
       2268, 621, 844, 2281, 636, 859, 2292, 651, 874, 2301, 666, 2410, 889, 
       681, 2419, 904, 696, 2429, 919, 711}], 
      Line3DBox[{506, 726, 2220, 507, 740, 2232, 532, 755, 2242, 547, 770, 
       2250, 562, 785, 2256, 577, 2354, 800, 592, 2366, 815, 607, 2380, 830, 
       2269, 622, 845, 2282, 637, 860, 2293, 652, 875, 2302, 667, 890, 2309, 
       682, 2420, 905, 697, 2430, 920, 712}], 
      Line3DBox[{508, 727, 2221, 509, 741, 2233, 533, 756, 2243, 548, 771, 
       2251, 563, 786, 2257, 578, 801, 2261, 593, 2367, 816, 608, 2381, 831, 
       2270, 623, 846, 2283, 638, 861, 2294, 653, 876, 2303, 668, 891, 2310, 
       683, 906, 2315, 698, 2431, 921, 713}], 
      Line3DBox[{510, 728, 2222, 512, 742, 2234, 534, 757, 2244, 549, 772, 
       2252, 564, 787, 2258, 579, 802, 2262, 594, 817, 2264, 609, 2382, 832, 
       2271, 624, 847, 2284, 639, 862, 2295, 654, 877, 2304, 669, 892, 2311, 
       684, 907, 2316, 699, 922, 2319, 714}], 
      Line3DBox[{514, 2321, 730, 515, 2324, 744, 536, 2329, 759, 551, 2336, 
       774, 566, 2345, 789, 581, 2356, 804, 596, 2369, 819, 611, 2385, 834, 
       2272, 626, 2394, 849, 641, 2398, 864, 656, 2404, 879, 671, 2412, 894, 
       686, 2422, 909, 701, 2433, 924, 716}], 
      Line3DBox[{516, 731, 2223, 517, 2325, 745, 537, 2330, 760, 552, 2337, 
       775, 567, 2346, 790, 582, 2357, 805, 597, 2370, 820, 612, 2386, 835, 
       2273, 627, 850, 2285, 642, 2399, 865, 657, 2405, 880, 672, 2413, 895, 
       687, 2423, 910, 702, 2434, 925, 717}], 
      Line3DBox[{518, 732, 2224, 519, 746, 2235, 538, 2331, 761, 553, 2338, 
       776, 568, 2347, 791, 583, 2358, 806, 598, 2371, 821, 613, 2387, 836, 
       2274, 628, 851, 2286, 643, 866, 2296, 658, 2406, 881, 673, 2414, 896, 
       688, 2424, 911, 703, 2435, 926, 718}], 
      Line3DBox[{520, 733, 2225, 521, 747, 2236, 539, 762, 2245, 554, 2339, 
       777, 569, 2348, 792, 584, 2359, 807, 599, 2372, 822, 614, 2388, 837, 
       2275, 629, 852, 2287, 644, 867, 2297, 659, 882, 2305, 674, 2415, 897, 
       689, 2425, 912, 704, 2436, 927, 719}], 
      Line3DBox[{522, 734, 2226, 523, 748, 2237, 540, 763, 2246, 555, 778, 
       2253, 570, 2349, 793, 585, 2360, 808, 600, 2373, 823, 615, 2389, 838, 
       2276, 630, 853, 2288, 645, 868, 2298, 660, 883, 2306, 675, 898, 2312, 
       690, 2426, 913, 705, 2437, 928, 720}], 
      Line3DBox[{524, 735, 2227, 525, 749, 2238, 541, 764, 2247, 556, 779, 
       2254, 571, 794, 2259, 586, 2361, 809, 601, 2374, 824, 616, 2390, 839, 
       2277, 631, 854, 2289, 646, 869, 2299, 661, 884, 2307, 676, 899, 2313, 
       691, 914, 2317, 706, 2438, 929, 721}], 
      Line3DBox[{526, 931, 932, 2228, 527, 750, 2239, 542, 765, 2248, 557, 
       780, 2255, 572, 795, 2260, 587, 810, 2263, 602, 2375, 825, 617, 2391, 
       840, 2278, 632, 855, 2290, 647, 870, 2300, 662, 885, 2308, 677, 900, 
       2314, 692, 915, 2318, 707, 934, 2440, 935, 936}], 
      Line3DBox[{708, 916, 2439, 933, 693, 901, 2416, 678, 886, 2407, 663, 
       871, 2400, 648, 856, 2395, 633, 841, 2392, 618, 2265, 826, 2376, 603, 
       811, 2362, 588, 796, 2350, 573, 781, 2340, 558, 766, 2332, 543, 751, 
       2326, 528, 736, 2322, 499, 2216, 722, 930, 937}], 
      Line3DBox[{715, 923, 2432, 700, 908, 2421, 685, 893, 2411, 670, 878, 
       2403, 655, 863, 2397, 640, 848, 2393, 625, 833, 2384, 2383, 610, 818, 
       2368, 595, 803, 2355, 580, 788, 2344, 565, 773, 2335, 550, 758, 2328, 
       535, 743, 2323, 513, 729, 2320, 511}], 
      Line3DBox[{939, 1162, 2543, 940, 1176, 968, 2446, 1191, 983, 2451, 1206,
        998, 2458, 1221, 1013, 2468, 1236, 1028, 2481, 1251, 1043, 1266, 2588,
        1058, 1281, 2601, 1073, 2499, 1296, 1088, 2504, 1311, 1103, 2511, 
       1326, 1118, 2520, 1341, 1133, 2531, 1356, 1148}], 
      Line3DBox[{941, 1163, 2544, 942, 1177, 2555, 969, 1192, 2566, 984, 2452,
        1207, 999, 2459, 1222, 1014, 2469, 1237, 1029, 2482, 1252, 1044, 1267,
        2589, 1059, 1282, 2602, 1074, 1297, 2613, 1089, 2505, 1312, 1104, 
       2512, 1327, 1119, 2521, 1342, 1134, 2532, 1357, 1149}], 
      Line3DBox[{943, 1164, 2545, 944, 1178, 2556, 970, 1193, 2567, 985, 1208,
        1000, 2460, 1223, 1015, 2470, 1238, 1030, 2483, 1253, 1045, 1268, 
       2590, 1060, 1283, 2603, 1075, 1298, 2614, 1090, 1313, 2623, 1105, 2513,
        1328, 1120, 2522, 1343, 1135, 2533, 1358, 1150}], 
      Line3DBox[{945, 1165, 2546, 946, 1179, 2557, 971, 1194, 2568, 986, 1209,
        2576, 1001, 1224, 1016, 2471, 1239, 1031, 2484, 1254, 1046, 1269, 
       2591, 1061, 1284, 2604, 1076, 1299, 2615, 1091, 1314, 2624, 1106, 1329,
        2631, 1121, 2523, 1344, 1136, 2534, 1359, 1151}], 
      Line3DBox[{947, 1166, 2547, 948, 1180, 2558, 972, 1195, 2569, 987, 1210,
        2577, 1002, 1225, 2582, 1017, 2472, 1240, 1032, 2485, 1255, 1047, 
       1270, 2592, 1062, 1285, 2605, 1077, 1300, 2616, 1092, 1315, 2625, 1107,
        1330, 2632, 1122, 1345, 1137, 2535, 1360, 1152}], 
      Line3DBox[{949, 1167, 2548, 951, 1181, 2559, 973, 1196, 2570, 988, 1211,
        2578, 1003, 1226, 2583, 1018, 1241, 2586, 1033, 1256, 1048, 1271, 
       2593, 1063, 1286, 2606, 1078, 1301, 2617, 1093, 1316, 2626, 1108, 1331,
        2633, 1123, 1346, 2637, 1138, 1361, 2639, 1153}], 
      Line3DBox[{953, 1169, 2549, 954, 2444, 1183, 975, 2448, 1198, 990, 2454,
        1213, 1005, 2462, 1228, 1020, 2474, 1243, 1035, 2487, 1258, 1050, 
       1273, 2594, 1065, 2497, 1288, 1080, 2501, 1303, 1095, 2507, 1318, 1110,
        2515, 1333, 1125, 2525, 1348, 1140, 2537, 1363, 1155}], 
      Line3DBox[{955, 1170, 2550, 956, 1184, 2560, 976, 2449, 1199, 991, 2455,
        1214, 1006, 2463, 1229, 1021, 2475, 1244, 1036, 2488, 1259, 1051, 
       1274, 2595, 1066, 1289, 2607, 1081, 2502, 1304, 1096, 2508, 1319, 1111,
        2516, 1334, 1126, 2526, 1349, 1141, 2538, 1364, 1156}], 
      Line3DBox[{957, 1171, 2551, 958, 1185, 2561, 977, 1200, 2571, 992, 2456,
        1215, 1007, 2464, 1230, 1022, 2476, 1245, 1037, 2489, 1260, 1052, 
       1275, 2596, 1067, 1290, 2608, 1082, 1305, 2618, 1097, 2509, 1320, 1112,
        2517, 1335, 1127, 2527, 1350, 1142, 2539, 1365, 1157}], 
      Line3DBox[{959, 1172, 2552, 960, 1186, 2562, 978, 1201, 2572, 993, 1216,
        1008, 2465, 1231, 1023, 2477, 1246, 1038, 2490, 1261, 1053, 1276, 
       2597, 1068, 1291, 2609, 1083, 1306, 2619, 1098, 1321, 2627, 1113, 2518,
        1336, 1128, 2528, 1351, 1143, 2540, 1366, 1158}], 
      Line3DBox[{961, 1173, 2553, 962, 1187, 2563, 979, 1202, 2573, 994, 1217,
        2579, 1009, 2466, 1232, 1024, 2478, 1247, 1039, 2491, 1262, 1054, 
       1277, 2598, 1069, 1292, 2610, 1084, 1307, 2620, 1099, 1322, 2628, 1114,
        1337, 2634, 1129, 2529, 1352, 1144, 2541, 1367, 1159}], 
      Line3DBox[{963, 1174, 2554, 964, 1188, 2564, 980, 1203, 2574, 995, 1218,
        2580, 1010, 1233, 2584, 1025, 2479, 1248, 1040, 2492, 1263, 1055, 
       1278, 2599, 1070, 1293, 2611, 1085, 1308, 2621, 1100, 1323, 2629, 1115,
        1338, 2635, 1130, 1353, 1145, 2542, 1368, 1160}], 
      Line3DBox[{965, 1370, 1371, 2640, 966, 1189, 2565, 981, 1204, 2575, 996,
        1219, 2581, 1011, 1234, 2585, 1026, 1249, 2587, 1041, 2493, 1264, 
       1056, 1279, 2600, 1071, 1294, 2612, 1086, 1309, 2622, 1101, 1324, 2630,
        1116, 1339, 2636, 1131, 1354, 2638, 1146, 1373, 1374, 1375}], 
      Line3DBox[{1147, 1355, 2530, 1372, 1132, 1340, 2519, 1117, 1325, 2510, 
       1102, 1310, 2503, 1087, 1295, 2498, 1072, 1280, 2495, 1057, 1265, 1042,
        1250, 2480, 1027, 1235, 2467, 1012, 1220, 2457, 997, 1205, 2450, 982, 
       1190, 2445, 967, 1175, 2442, 938, 1161, 1369, 1376}], 
      Line3DBox[{1154, 1362, 2536, 1139, 1347, 2524, 1124, 1332, 2514, 1109, 
       1317, 2506, 1094, 1302, 2500, 1079, 1287, 2496, 1064, 1272, 2494, 1049,
        1257, 2486, 1034, 1242, 2473, 1019, 1227, 2461, 1004, 1212, 2453, 989,
        1197, 2447, 974, 1182, 2443, 952, 1168, 2441, 
       950}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
2veC65GRXzSi68jd1st+RUsfrDvmdbwaewDDGt/QdnIdWRu7b1Se0gW7AXdn
slgPeJ54mGmmTInPc/mHk5XawCEtO//yfjfsKi9NP0brCMORYWKWoAXi0cYf
0/50AW2K5us+o3UUHJvTc2PHD4S4mdlY3nYCO2sXtdzpdUT7UnKycdULZLIB
d2q5BybMYo1DpNZRQEqHX62cBwzmqnRn1/XBA8dmw+iD66hQ/88Z+p4zUNcn
CkcK+yGO+1ZzE/U6epqdeKU7wgnOXktUrfzZDwl+xowOvyn5bxJTskTrACEN
p6Ka1/oh+avgN7M/ZJSfS/jDr2sLOSFfjzRk9sPZ0ICpvD3/x7/h/4d/a1qR
NjU+bArYMePGSJNO+DjkG5Pqto6COkoCtucNgb/XLPpWcgd8j05OpfFdRxni
1enJivpwPFCXaV9XO4h2XzE0DFlHldcyYvJ/6ABPfAt7AH07xFNXF6nHrKPe
JEnR7yzakB8W+1DVpI2Cp8QvYBLW0QthD3M0rQHpZhM3Em63wr2oUAeFlHVU
MGn287ULttGbNnJA4Mc85J5ca6evI6D7rNKzxOKZxnjmPfEjllgQcVP5ZIfH
I5vioaDrXqxgEn/lU++vJVjXkzQdpOB61eX29OP1vpQ+q/Tu55Fe8HkQS7AS
X0dJzOuas79UAf+14p5K7WfIOu/A8/3+OqpnS+lY6lQCrFpI6NfjzfB3HZ1n
r15HaymqOm4mSkAWmH/+taAJ6j8nvbn/4f/pDFA9+Zwm9p97iXMe5IH/3AOM
XsDKSKRuNX5/pR9KrToPvrd/XKNa/7/7gf97P3OIn5emPGarcc9vDtWSuHno
juavFZ7+t3+hX+AzQ7+tRo057OmS1nkIxreDZvu//VVSbLj6HLcaP7Vw2MfT
YCD5sfc186p/+7/+GmNobbjVePj09d2p4xigutQxa/Pk3/68XQ9ZZxW2Gi+E
jwjjTDAgLuT3zjLl3/7/sh8OVLriK7TVWNNrppXlj4HWKsNpvah/v7//r3U8
z7LXXqLaajSm3mrb+woDvlqikses/u2PTSmZpFrfbIxO07Ko78NAqi7dXzr1
f/uPQH7undnNRj9zuWnhdQzIHoo4TxL9t79sghWtUA/F36fiqyYLFliOkIX7
Dv3bf6/Xh8K6D5uNB1hvcNJJY6Fn/8BO2V/8P/1FT+hr2pRsNsbmDwxep5wL
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
Rw==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{346.6908745321704, 130.93472691345136`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, 100}, {0, 3^Rational[-1, 2]}, {0.6321912915727654, 
     0.9839759102483668}}, {{0, 100}, {0, 0.5773502691896258}, {
     0.6321912915727654, 0.9839759102483668}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.2404558541238333`, -3.1453713883827907`, 0.1338211609306128},
  
  ViewVertical->{0., 0., 1.}]], "Input",
 CellChangeTimes->{{3.7985470457970324`*^9, 
  3.7985470549325733`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9vQfYLUWdJ9zbVd3nnDfdjJN03M+d2dmdcUY95lHHMKOOk/bb3XHGDIIk
yUkkiCJcwiWLJMWEis7qiMqgSFZBggQRkQuSVJAgwQA3cW9v/VPVv6qr+5yX
+z3f+zzV7zl9+vTp7vr9/rmq/mG7/XZ+z+7b7bfL9ts9+w37bLfXzrtsv++z
X7/nPm6X+U9FUQ6Lovjuswt43biXvAl/M7DRe7p27I3/TPPb3/62+dWvfoXv
ZjL78DtH03f2xH81fnbcccc1O+64Y7PTTjs1xx57bPPTn/7U8ElOPvnkZo89
9vC/2HE4fnaUPvOgOfPMM5u99tqr+cEPftDcc889zYc//OHmgx/8YLNp06ai
xGNmmwsuuKD51Kc+5U/f9x08YDX9xh58d4888ghehjsPn9M0P/nJT/Dyrr32
2qKa8rjcuX/4wx/i5+46/He2bNnS7L777s3555/vzz3puNy5v/vd7+J3fvnL
XxaG9x144IHyLAo75XF47iPjc19yySX4nccff9x/59BDD20++tGPRueedFzu
3DfccAN+5/777/ff2W+//ZpzzjknOvek43LnBhjBd2655Rb/HNevX9/svPPO
zde+9jX/vCcdl3ve69atQxh/+tOf9t+5+uqr8Tx33HGHP/ek4/S5hUHf+ta3
EFtf//rXmyuuuALxe/jhhw/6P24zpm6eeuqp5ktf+lJz0EEHNbvtthuSzxFu
0P+xPtP/4mvWrP8D3rd58+aG/7x00Pv0ef5f/skOupfc2Vo6fP7zn6/hOHfW
T3ziE/FZz9FnXehjOR6upcKdd96Jv+xu2jaXXnqpO/2tt96aPf3/4JuaTihY
fJaw7ytf+QoSFv6+EJ9qErdrPtV5552Hx8Gdbdy4EU91bnyqSVSWU1122WUI
5WOOOQbhiM82PtUk5g5430033YSnct1UPAP2Vfg1+Ds2PuMkvg55H/QMHHf9
9dcXK2GfgbfI+m38ufeLzz2JryIz7rvvvubLX/5y8+CDD/rjfvOb32BXnnvu
ucUy2GcZYvDHv1f8bvzz74x/fhKl5efvvvtu3Oe60h9311134b6vfvWrxRLY
V8JbeUDyg3BFz4uv4Y10DUKjDhlQ8bMFFoJIAFR94QtfaC666KLm4IMPxif0
85//fN7/cpX5ZdmnbIfiVbBd5Q8b09W8nI/UwmElX2GHbKn544ceeqg59dRT
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\
\>"]],

Cell[BoxData[GridBox[{
   {"c0", "c1", 
    RowBox[{"cp", "=", "2"}], "5", "10", "50", "100", "500", "1000", "10000", 
    "26000"},
   {"0.1", "0.1", "0.687135", "0.687488", "0.688074", "0.692716", "0.698396", 
    "0.73946", "0.781748", "0.987561", "0.999908"},
   {"0.1", "0.2", "0.73633", "0.737505", "0.739451", "0.754408", "0.771699", 
    "0.869503", "0.932911", 
    RowBox[{"5000", "/", "0.999587"}], 
    RowBox[{"6200", "/", "0.999909"}]},
   {"0.1", "0.3", "0.779421", "0.781677", "0.785378", "0.812533", "0.841193", 
    "0.955035", "0.990166", 
    RowBox[{"2550", "/", "0.999907"}], "\[Placeholder]"},
   {"0.1", "0.4", "0.815859", "0.819386", "0.825098", "0.864222", "0.900333", 
    "0.990649", "0.999488", 
    RowBox[{"1290", "/", "0.999905"}], "\[Placeholder]"},
   {"0.1", "0.5", "0.844802", "0.849887", "0.857962", "0.907975", "0.945777", 
    "0.999103", 
    RowBox[{"720", "/", "0.999905"}], "\[Placeholder]", "\[Placeholder]"},
   {"0.1", "0.6", "0.864946", "0.872275", "0.883556", "0.943489", "0.976595", 
    
    RowBox[{"420", "/", "0.999909"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.1", "0.7", "0.874222", "0.885692", "0.902401", "0.971452", "0.993651", 
    
    RowBox[{"240", "/", "0.999903"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.1", "0.8", "0.86937", "\[Placeholder]", "10", "11", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.2", "0.2", "0.785991", "0.789768", "0.795894", "0.838244", "0.878115", 
    "0.985776", "0.998967", 
    RowBox[{"1450", "/", "0.999902"}], "\[Placeholder]"},
   {"0.3", "0.3", "0.87338", "0.885021", "0.901958", "0.971607", "0.993761", 
    RowBox[{"240", "/", "0.999908"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.4", "0.4", "0.945184", "0.962068", "0.979348", "0.999831", 
    RowBox[{"55", "/", "0.999907"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"0.5", "0.5", "0.991024", "0.997816", "0.999792", 
    RowBox[{"12", "/", "0.999919"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"0.6", "0.6", "0.999762", 
    RowBox[{"4", "/", "0.999994"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.2", "0.3", "0.829558", "0.836442", "0.847243", "0.91038", "0.953058", 
    "0.99969", 
    RowBox[{"595", "/", "0.999905"}], "\[Placeholder]", "\[Placeholder]"},
   {"0.2", "0.4", "0.866355", "0.876414", "0.891418", "0.960354", "0.988398", 
    
    RowBox[{"297", "/", "0.999904"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.2", "0.5", "0.895521", "0.908854", "0.927251", "0.987454", "0.998559", 
    
    RowBox[{"162", "/", "0.999901"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {"0.2", "0.6", "0.915941", "0.933429", "0.954681", "0.997768", 
    RowBox[{"92", "/", "0.999903"}], "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"}
  }]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzk1IkwEAxvHlomaEJRERQs1Q0HDWMgqGNWcfm+YklpPqMErcq7g0UslL
+blUTGsYFC0LmYdikE3XlpW5xhrMdehDMKn1AQ4vMy+RtmjS/u/h4Xd5Dv/M
qosGc4pEIslNDoft7qC3fFFTu1P7FU33bVFsveJZwb7Y7gT2L8+kP0s6EFzY
ipG9NXL8GfXnYUbInI8/mq4XYJEhXYW1Da1q3NCxXITu7Ymj6Lgn6NAbO1OG
pjajHo/NSWqwuOWW6Ifu2XaUrT9pRV29vh/tJ0oH8NuTx0O4ru6pqCtn3oFy
9YMRPH81+BBV4TePsHlcO/08admf/W9x38G/7zDUF4lhg6V3Bb1+m+xF0p4s
IQ2FO5sysM76XY6ysWoFJnZNKtFy01WAEyHhCK5qsypwrWr8NC64PgrYla20
oE3z+RKeNUsvo3oi3oKGkrk2HD2Q0o7/7nYOYmPO1BB+8ikcOBw/7sTCjnOj
qLr9S/T9xma32KHPncSlkS1+8e+8Fkbrlwsz6IvORjC1vnoeAxXdv7FX5Ymj
J3tVtLCncc3LpGOv41LsNJpk6Ep7tRmdVcI2LPV0yfFwIDMPlUtNCjTGUg/h
DV+gGKc0lTosCS+W47R0xym07xkU/Q8aJlnY
  "],
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"u", ",", "d"}], "]"}], ".", 
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"d", ",", "d"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.798198316064547*^9, 3.7981984200268793`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7981983557071447`*^9, 3.798198420516415*^9}, 
   3.798198481438567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"y1", ",", "y2"}], "]"}], ".", "b", ".", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"y1", ",", "y2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.798190283646041*^9, 3.798190290976924*^9}, {
  3.798197228185335*^9, 3.79819725121469*^9}, {3.798198181936399*^9, 
  3.798198195661339*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["c2", "2"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["c2", "2"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["c2", "2"]}]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["c2", "2"]}]]}], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["c2", "2"]}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["c2", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["c2", "2"]}]]}], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["c2", "2"]}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["c0", "2"], " ", 
       SuperscriptBox["c1", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["c2", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7981902921355124`*^9, 3.798190400731099*^9, 3.798197252139605*^9, 
   3.798197286238559*^9, 3.798197342427421*^9, {3.798198183600168*^9, 
   3.798198196659815*^9}, {3.798198245392189*^9, 3.798198266269052*^9}, 
   3.7981984828557663`*^9, 3.798199161738845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "w2B"}], "]"}], ".", 
     "\[Rho]w", ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "w2B"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "T", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "w2B1"}], "]"}], ".", "T", 
     ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "w2B1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "T1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]w", "]"}]}], "Input",
 CellChangeTimes->{{3.798189965797204*^9, 3.798189990397977*^9}, {
  3.798197458264303*^9, 3.798197467425556*^9}, {3.798197603096458*^9, 
  3.7981976149182243`*^9}, {3.799725238503984*^9, 3.799725301254314*^9}, {
  3.7997255601476088`*^9, 3.79972560123816*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a4", "2"], " ", 
       SuperscriptBox["c0", "2"]}], 
      RowBox[{"a1", " ", "a4", " ", "c0", " ", "c1"}], "0", 
      RowBox[{"a1", " ", "a4", " ", "c0", " ", "c2"}], "0", "0", "0"},
     {"0", 
      RowBox[{"a1", " ", "a4", " ", "c0", " ", "c1"}], 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["c1", "2"]}], "0", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"a1", " ", "a4", " ", "c0", " ", "c2"}], 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "c1", " ", "c2"}], "0", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["c2", "2"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.798189991403718*^9, 3.798190022637211*^9, {3.798197448500868*^9, 
   3.798197468324149*^9}, {3.798197523856728*^9, 3.798197553025051*^9}, 
   3.79819758515519*^9, 3.798197615489641*^9, 3.7981976473128633`*^9, 
   3.7981981537084217`*^9, {3.799725283912524*^9, 3.799725301706444*^9}, {
   3.799725345567718*^9, 3.79972536090631*^9}, 3.799725604190181*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a4", "2"], " ", 
       SuperscriptBox["b4", "2"], " ", 
       SuperscriptBox["c0", "2"]}], 
      RowBox[{"a1", " ", "a4", " ", "b1", " ", "b4", " ", "c0", " ", "c1"}], 
      "0", 
      RowBox[{"a1", " ", "a4", " ", "b1", " ", "b4", " ", "c0", " ", "c2"}], 
      "0", "0", "0"},
     {"0", 
      RowBox[{"a1", " ", "a4", " ", "b1", " ", "b4", " ", "c0", " ", "c1"}], 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["c1", "2"]}], "0", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["b1", "2"], " ", "c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"a1", " ", "a4", " ", "b1", " ", "b4", " ", "c0", " ", "c2"}], 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["b1", "2"], " ", "c1", " ", "c2"}], "0", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["c2", "2"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.798189991403718*^9, 3.798190022637211*^9, {3.798197448500868*^9, 
   3.798197468324149*^9}, {3.798197523856728*^9, 3.798197553025051*^9}, 
   3.79819758515519*^9, 3.798197615489641*^9, 3.7981976473128633`*^9, 
   3.7981981537084217`*^9, {3.799725283912524*^9, 3.799725301706444*^9}, {
   3.799725345567718*^9, 3.79972536090631*^9}, 3.799725604202394*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0", 
      RowBox[{"c0", " ", "c2"}], "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0", 
      RowBox[{"c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c2"}], 
      RowBox[{"c1", " ", "c2"}], "0", 
      SuperscriptBox["c2", "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.798189991403718*^9, 3.798190022637211*^9, {3.798197448500868*^9, 
   3.798197468324149*^9}, {3.798197523856728*^9, 3.798197553025051*^9}, 
   3.79819758515519*^9, 3.798197615489641*^9, 3.7981976473128633`*^9, 
   3.7981981537084217`*^9, {3.799725283912524*^9, 3.799725301706444*^9}, {
   3.799725345567718*^9, 3.79972536090631*^9}, 3.799725604213387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7963014352772293`*^9, 3.796301629394225*^9}, {
   3.798196908005289*^9, 3.7981969622333717`*^9}, 3.798531736034289*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0", 
      RowBox[{"c0", " ", "c2"}], "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0", 
      RowBox[{"c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c2"}], 
      RowBox[{"c1", " ", "c2"}], "0", 
      SuperscriptBox["c2", "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.796301591114707*^9, 3.796301630534287*^9}, 
   3.796814174552767*^9, 3.7969007044967003`*^9, 3.7979334013899508`*^9, 
   3.798189489925872*^9, 3.798196963427087*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "\[Psi]w", "]"}]], "Input",
 CellChangeTimes->{{3.796301710765802*^9, 3.7963017205187187`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"c0"},
     {"c1"},
     {"0"},
     {"c2"},
     {"0"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.797933413608004*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.797933443030253*^9, 3.797933582514676*^9}, {
   3.798209480475576*^9, 3.798209550988695*^9}, 3.798543585790277*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";", 
  RowBox[{"\[Lambda]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x1", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], 
         RowBox[{"\[Sigma]", "[", "1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], 
         RowBox[{"\[Sigma]", "[", "2", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"\[Sigma]", "[", "3", "]"}]}]}], ")"}]}], "2"]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x1T", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "x1", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
         RowBox[{"0", "<", "\[Phi]", "<", 
          RowBox[{"2", "\[Pi]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", 
     RowBox[{"(", "x1", ")"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", "\[Gamma]", "-", "\[Lambda]"}], "2"], 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "E0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "\[Lambda]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.800023068396143*^9, 3.8000232989792557`*^9}, {
   3.8000233853647623`*^9, 3.800023395997805*^9}, 3.800023442900333*^9, {
   3.800023618503251*^9, 3.800023624772941*^9}, {3.80002383231492*^9, 
   3.800023900237021*^9}, {3.8000239790200577`*^9, 3.800023988293272*^9}, {
   3.800024079800693*^9, 3.800024089186014*^9}, 3.800024312138513*^9, {
   3.8000262655564117`*^9, 3.800026366367848*^9}, {3.8000265431295977`*^9, 
   3.800026546948761*^9}, {3.80002676199129*^9, 3.8000267756249332`*^9}, 
   3.8000293580392227`*^9, 3.800030200349121*^9, {3.800031196291061*^9, 
   3.800031212874669*^9}, {3.800032338067151*^9, 3.800032352905632*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "\[Gamma]"}], "2"], "0"},
     {"0", 
      FractionBox[
       RowBox[{"1", "+", "\[Gamma]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.800023396754685*^9, 3.8000234441588182`*^9, 3.800023626433675*^9, {
   3.8000238404164133`*^9, 3.800023863499913*^9}, 3.800023901605053*^9, {
   3.800023980445985*^9, 3.800023989483852*^9}, {3.800024081435638*^9, 
   3.800024093973612*^9}, 3.8000243176278553`*^9, {3.80002633851926*^9, 
   3.800026367309618*^9}, 3.800026547905064*^9, 3.800026776146937*^9, 
   3.800029358925914*^9, 3.800030200874317*^9, 3.80003121400598*^9, 
   3.800032353803234*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"d3", "/", "d4"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"y2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"d2", "/", "d4"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"y3", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"d1", "/", "d4"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"y4", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"d0", "/", "d4"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7963020229114513`*^9, 3.796302100533381*^9}, {
   3.7963022532400303`*^9, 3.7963022695093107`*^9}, {3.796302471610824*^9, 
   3.796302483378243*^9}, {3.796303474334096*^9, 3.7963034950352297`*^9}, 
   3.79630360082187*^9, {3.796303696305007*^9, 3.7963037263022547`*^9}, {
   3.796900730909745*^9, 3.79690080659451*^9}, {3.79690101349117*^9, 
   3.796901055284639*^9}, {3.7969010989277287`*^9, 3.79690112684239*^9}, {
   3.796901164716981*^9, 3.796901173445051*^9}, {3.796901206530218*^9, 
   3.796901255342886*^9}, {3.7969012963317432`*^9, 3.7969013210583553`*^9}, {
   3.7979336343081427`*^9, 3.797933678718713*^9}, {3.797933783614533*^9, 
   3.797933783732108*^9}, {3.798189766841174*^9, 3.798189778673527*^9}, {
   3.798190006860393*^9, 3.798190013630289*^9}, {3.7981902258388557`*^9, 
   3.798190249559046*^9}, {3.7981903846286077`*^9, 3.7981903875271606`*^9}, {
   3.798197198520262*^9, 3.798197208445566*^9}, {3.798197273969161*^9, 
   3.7981972769865017`*^9}, {3.798197329207841*^9, 3.7981973352482367`*^9}, {
   3.798197401066773*^9, 3.798197439065606*^9}, {3.7981975099018507`*^9, 
   3.7981975790086927`*^9}, {3.798197638346052*^9, 3.798197641400565*^9}, {
   3.798198119666493*^9, 3.798198146772676*^9}, {3.798198455038163*^9, 
   3.79819846595262*^9}, {3.798208038645171*^9, 3.798208049478815*^9}, {
   3.798208123675552*^9, 3.798208165527731*^9}, {3.798209568283555*^9, 
   3.79820959421762*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"w1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c1", "/", "c2"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"w2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c0", "/", "c2"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w2B", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a1", "0"},
       {"0", "a4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"w2B1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"b1", "0"},
       {"0", "b4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.798208214179212*^9, 3.79820824317199*^9}, {
  3.7997251849304457`*^9, 3.7997252217102537`*^9}, {3.7997253402706203`*^9, 
  3.79972535501077*^9}, {3.799725537302737*^9, 3.7997255435998077`*^9}, {
  3.799725587907645*^9, 3.799725589290819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", "\[NoBreak]", GridBox[{
    {
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c0", "2"], "/", 
        SuperscriptBox["c2", "2"]}], ")"}]}], "0"},
    {"0", "0"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]], "Input",
 CellChangeTimes->{{3.798200000815907*^9, 3.798200083890214*^9}, {
   3.798200151662054*^9, 3.798200159445773*^9}, 3.79820024097058*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["c0", "2"], 
       SuperscriptBox["c2", "2"]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.798208148083454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]6", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "E0"}], "]"}], ".", 
     "\[Rho]w"}], 
    RowBox[{"(*", 
     RowBox[{".", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "E0"}], "]"}]}], "*)"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]w", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\[Theta]", "]"}]}], "Input",
 CellChangeTimes->{{3.7982082572827797`*^9, 3.798208293546049*^9}, {
   3.800023326091858*^9, 3.800023362731288*^9}, {3.800023458854594*^9, 
   3.800023468014509*^9}, {3.8000266669043617`*^9, 3.8000266868287897`*^9}, {
   3.800026726734201*^9, 3.8000267279687138`*^9}, 3.800027229509943*^9, 
   3.8000293642785473`*^9, {3.8000302061721163`*^9, 3.800030208837941*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["c0", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", "c0", " ", "c1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["c1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", "c1", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", "c0", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "c1", " ", "c2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["c2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7982082946734467`*^9, 3.800023364257258*^9, {3.8000234488448963`*^9, 
   3.800023469165172*^9}, 3.800023631745261*^9, {3.800023844142991*^9, 
   3.80002386975115*^9}, 3.800023937370798*^9, 3.800024322224658*^9, 
   3.800026377203444*^9, 3.800026555181951*^9, 3.800026687749673*^9, 
   3.800026728904461*^9, 3.80002723288299*^9, 3.8000293652151003`*^9, 
   3.800030209702992*^9, 3.800031218168116*^9, 3.8000323582166452`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox["c0", "2"], 
      RowBox[{"c0", " ", "c1"}], "0", 
      RowBox[{"c0", " ", "c2"}], "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c1"}], 
      SuperscriptBox["c1", "2"], "0", 
      RowBox[{"c1", " ", "c2"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"c0", " ", "c2"}], 
      RowBox[{"c1", " ", "c2"}], "0", 
      SuperscriptBox["c2", "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7982082946734467`*^9, 3.800023364257258*^9, {3.8000234488448963`*^9, 
   3.800023469165172*^9}, 3.800023631745261*^9, {3.800023844142991*^9, 
   3.80002386975115*^9}, 3.800023937370798*^9, 3.800024322224658*^9, 
   3.800026377203444*^9, 3.800026555181951*^9, 3.800026687749673*^9, 
   3.800026728904461*^9, 3.80002723288299*^9, 3.8000293652151003`*^9, 
   3.800030209702992*^9, 3.800031218168116*^9, 3.800032358228672*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "y1", ",", "y2", ",", "y3", 
       ",", "y4"}], "]"}], ".", "\[Rho]W", ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "y1", ",", "y2", ",", "y3", 
       ",", "y4"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]5", "]"}]}], "Input",
 CellChangeTimes->{{3.797933689643488*^9, 3.797933748317768*^9}, 
   3.797933797307386*^9, {3.798208079292791*^9, 3.798208100256714*^9}, {
   3.798209606845468*^9, 3.798209615206608*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d0", "2"], " ", 
        SuperscriptBox["d1", "2"], " ", 
        SuperscriptBox["d2", "2"], " ", 
        SuperscriptBox["d3", "2"]}], 
       SuperscriptBox["d4", "6"]], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.797933749978487*^9, {3.797933786055035*^9, 3.7979338020436583`*^9}, 
   3.798208069210843*^9, 3.798208101331561*^9, {3.798208149920322*^9, 
   3.798208169386001*^9}, 3.798209616197978*^9}]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.797933861457181*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c2", "/", "c0"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"x2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c1", "/", "c0"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"x3", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["c0", "2"], "-", 
           SuperscriptBox["c1", "2"], "-", 
           SuperscriptBox["c2", "2"]}]], "/", "c0"}], "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7963020229114513`*^9, 3.796302100533381*^9}, {
   3.7963022532400303`*^9, 3.7963022695093107`*^9}, {3.796302471610824*^9, 
   3.796302483378243*^9}, {3.796303474334096*^9, 3.7963034950352297`*^9}, 
   3.79630360082187*^9, {3.796303696305007*^9, 3.7963037263022547`*^9}, {
   3.796900730909745*^9, 3.79690080659451*^9}, {3.79690101349117*^9, 
   3.796901055284639*^9}, {3.7969010989277287`*^9, 3.79690112684239*^9}, {
   3.796901164716981*^9, 3.796901173445051*^9}, {3.796901206530218*^9, 
   3.796901255342886*^9}, {3.7969012963317432`*^9, 3.7969013210583553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]4", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"x1", ",", "x2", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w", ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"x1", ",", "x2", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]4", "]"}]}], "Input",
 CellChangeTimes->{{3.7963021029389963`*^9, 3.796302218958465*^9}, {
  3.796303021793797*^9, 3.796303036702778*^9}, {3.796303559032371*^9, 
  3.796303563296906*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c0", "2"]], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.796302183740074*^9, 3.796302190593989*^9}, 
   3.7963022206842318`*^9, 3.796303038862788*^9, {3.796303544257574*^9, 
   3.796303564510235*^9}, 3.7963036033773613`*^9, 3.796303698539616*^9, 
   3.7963037286340847`*^9, 3.7968141884744673`*^9, 3.7969007770855007`*^9, 
   3.796900809082368*^9, 3.796901059983457*^9, {3.7969011040854683`*^9, 
   3.796901129421973*^9}, 3.796901175509309*^9, 3.796901210579824*^9, {
   3.796901242416286*^9, 3.796901257998911*^9}, 3.796901298319046*^9, 
   3.7969013299005203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"x1", ".", "x1"}], "+", 
   RowBox[{"x2", ".", "x2"}], "+", 
   RowBox[{"x3", ".", "x3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796900978953556*^9, 3.7969009978683643`*^9}, {
  3.79690106461194*^9, 3.796901067162568*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.796901068234902*^9, {3.796901105019946*^9, 3.7969011306374187`*^9}, 
   3.7969011768648376`*^9, 3.796901211843297*^9, 3.796901243866548*^9, {
   3.796901276034268*^9, 3.796901303018306*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"sided", " ", "DI", " ", "for", " ", "W", " ", "state", " ", 
   RowBox[{"(", 
    RowBox[{"n", " ", "=", " ", "4"}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.8009651712766743`*^9, 3.800965187127286*^9}, {
  3.8011737278383837`*^9, 3.801173754240843*^9}, {3.801179481562591*^9, 
  3.8011794816298532`*^9}, {3.801180863418942*^9, 3.801180863559226*^9}, {
  3.801186707777664*^9, 3.801186709449596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Lw0", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c2", "/", "c3"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"Lw1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c1", "/", "c3"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"Lw2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c0", "/", "c3"}], "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "Lw0", ",", "Lw1", ",", 
      "Lw2"}], "]"}], ".", "\[Rho]w4", ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "0", "]"}], ",", "Lw0", ",", "Lw1", ",", 
      "Lw2"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.801186999657765*^9, 3.801187013159299*^9}, {
  3.801187070371318*^9, 3.801187154064558*^9}, {3.801221926989773*^9, 
  3.801221974222905*^9}, {3.8012220112991056`*^9, 3.80122210162789*^9}, {
  3.801223119602216*^9, 3.801223119739106*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c0", "2"], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"]}], 
       SuperscriptBox["c3", "4"]], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.801187156911224*^9, 3.8012219449166937`*^9, 3.801221975055571*^9, {
   3.801222017174732*^9, 3.801222102516589*^9}, 3.801223079814701*^9, 
   3.801223120631661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "\[Rho]W", "]"}]], "Input",
 CellChangeTimes->{{3.801222974033739*^9, 3.8012230045599327`*^9}}],

Cell[BoxData[
 TagBox["\[Rho]W",
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801222983869853*^9, 3.801223005045443*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "0"}], ",", 
    RowBox[{"l", "<", "2"}], ",", 
    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "<", "2"}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], "i"], 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"1", "+", 
                 RowBox[{"l", 
                  RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
            RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]w4", 
          ".", 
          RowBox[{"ConjugateTranspose", "[", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], "i"], 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"1", "+", 
                  RowBox[{"l", 
                   RowBox[{"(", "2", ")"}]}]}], "]"}]}]}], "2"], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"u", ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
           RowBox[{"S", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}], ".", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"u", ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"d", ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
              RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", 
           RowBox[{"S", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}], ".", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"d", ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
             RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c0", "=", 
        RowBox[{"1", "/", 
         SqrtBox["4"]}]}], ";", 
       RowBox[{"c1", "=", 
        RowBox[{"1", "/", 
         SqrtBox["4"]}]}], ";", 
       RowBox[{"c2", "=", 
        RowBox[{"1", "/", 
         SqrtBox["4"]}]}], ";", 
       RowBox[{"c3", "=", 
        RowBox[{"1", "/", 
         SqrtBox["4"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Clear", "[", 
        RowBox[{"c0", ",", "c1", ",", "c2", ",", "c3"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pgf", "=", 
        RowBox[{"Simplify", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", 
              SuperscriptBox["c1", "2"], " ", 
              SuperscriptBox["c2", "2"], " ", 
              SuperscriptBox["c3", "2"]}], 
             SuperscriptBox["c0", "4"]]}], ")"}], 
          RowBox[{"cp", "-", "1"}]], "]"}]}], ";", 
       RowBox[{"Pgs", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", 
               SuperscriptBox["c1", "2"], " ", 
               SuperscriptBox["c2", "2"], " ", 
               SuperscriptBox["c3", "2"]}], 
              SuperscriptBox["c0", "4"]]}], ")"}], 
           RowBox[{"cp", "-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gD", "[", 
         RowBox[{
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"l", 
            RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
         "]"}], "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Pgs", "*", 
           RowBox[{"g", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}]}], "+", 
          RowBox[{"Pgf", "*", 
           RowBox[{"s", "[", 
            RowBox[{
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"l", 
               RowBox[{"(", "2", ")"}]}]}], ",", "0", ",", "0", ",", "0"}], 
            "]"}]}]}], "]"}]}], ";"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"l", ",", "q", ",", "r", ",", "i", ",", "j", ",", "k"}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YfX541m0BvHrpc6DFpA2qbtJAuIfhcQwwGifTqE
eUH0nqcKgiD6l/ZRaRA9S6pIE0SLM3YbgejanxKWIJrD08QWRO/wTnMC0dMC
tnmCaDsD/UgQXdExJwVESyhsyQPRswV3zwTRHfYK80F098yny0H0BNHHO0G0
3y/xgyDaI//EGRC9UyrUTBtI/5MqsgLRElV7LoLoda2Tr4DobQxht0F0ks03
ML3hdAunDpA+NSWHB0RbrI9bA6L1+h9sANHn2ENYdIH0MuftMiC66WZEJIg+
sPBzNIhmFm9MANERyVNLQXQoe5CPAZBWvrkxCET3eb8tANHfui4Xg2gA9JyT
pQ==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"s", "[", 
   RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80118040309548*^9, 3.801180413675795*^9}, {
   3.801181110938692*^9, 3.801181122083819*^9}, 3.8011864392128057`*^9, {
   3.801187348761511*^9, 3.801187357263249*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox["c3", "2"], "2"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c0", " ", "c3"}], "2"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c1", " ", "c3"}], "2"]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c2", " ", "c3"}], "2"]}], "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c0", " ", "c3"}], "2"]}], 
      FractionBox[
       SuperscriptBox["c0", "2"], "2"], 
      FractionBox[
       RowBox[{"c0", " ", "c1"}], "2"], "0", 
      FractionBox[
       RowBox[{"c0", " ", "c2"}], "2"], "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c1", " ", "c3"}], "2"]}], 
      FractionBox[
       RowBox[{"c0", " ", "c1"}], "2"], 
      FractionBox[
       SuperscriptBox["c1", "2"], "2"], "0", 
      FractionBox[
       RowBox[{"c1", " ", "c2"}], "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"c2", " ", "c3"}], "2"]}], 
      FractionBox[
       RowBox[{"c0", " ", "c2"}], "2"], 
      FractionBox[
       RowBox[{"c1", " ", "c2"}], "2"], "0", 
      FractionBox[
       SuperscriptBox["c2", "2"], "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8011804146280327`*^9, {3.80118111248422*^9, 3.801181122531014*^9}, 
   3.8011864398395147`*^9, {3.801187344682478*^9, 3.8011873583358383`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assemblage", " ", "fideity"}]], "Code",
 CellChangeTimes->{{3.8011759953630123`*^9, 3.801176004055703*^9}, {
  3.8011760894549437`*^9, 3.8011761034438343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg11", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801179239723168*^9, 3.801179291352203*^9}, {
  3.8011804759247503`*^9, 3.801180553237626*^9}, {3.801181130562378*^9, 
  3.801181144990155*^9}, {3.801181206256137*^9, 3.801181211899199*^9}, {
  3.801181252689066*^9, 3.801181260989092*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       FractionBox["1", "4"], "-", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox["c2", "2"], " ", 
             SuperscriptBox["c3", "2"]}], 
            SuperscriptBox["c0", "4"]]}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "cp"}]]}], "+", 
       RowBox[{
        SuperscriptBox["c3", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox["c2", "2"], " ", 
             SuperscriptBox["c3", "2"]}], 
            SuperscriptBox["c0", "4"]]}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "cp"}]]}]}]]}], "+", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["c0", "4"], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["c1", "2"], " ", 
          SuperscriptBox["c2", "2"], " ", 
          SuperscriptBox["c3", "2"]}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "27"}], " ", 
          SuperscriptBox["c1", "2"], " ", 
          SuperscriptBox["c2", "2"], " ", 
          SuperscriptBox["c3", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["c0", "6"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c1", "2"], " ", 
               SuperscriptBox["c2", "2"], " ", 
               SuperscriptBox["c3", "2"]}], 
              SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["c0", "5"], " ", 
          RowBox[{"(", 
           RowBox[{"c1", "+", "c2"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["c1", "2"], " ", 
               SuperscriptBox["c2", "2"], " ", 
               SuperscriptBox["c3", "2"]}], 
              SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
         RowBox[{
          SuperscriptBox["c0", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"9", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c1", "2"], " ", 
                  SuperscriptBox["c2", "2"], " ", 
                  SuperscriptBox["c3", "2"]}], 
                 SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c1", "2"], " ", 
                  SuperscriptBox["c2", "2"], " ", 
                  SuperscriptBox["c3", "2"]}], 
                 SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
            RowBox[{"8", " ", "c1", " ", "c2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c1", "2"], " ", 
                  SuperscriptBox["c2", "2"], " ", 
                  SuperscriptBox["c3", "2"]}], 
                 SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["c2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["c1", "2"], " ", 
                  SuperscriptBox["c2", "2"], " ", 
                  SuperscriptBox["c3", "2"]}], 
                 SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}]}], ")"}]}]}], 
        ")"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.801179313075334*^9, 3.8011805564051456`*^9, 
  3.801181263171875*^9, 3.801187370480062*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fg12", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]], "+", 
    SqrtBox[
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "]"}], ".", 
       RowBox[{"gD", "[", 
        RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "]"}]}], "]"}]]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8011791665432453`*^9, 3.801179225270756*^9}, {
  3.801180563512278*^9, 3.801180633121704*^9}, {3.801181269406196*^9, 
  3.801181271755023*^9}, {3.801181335827292*^9, 3.801181369224983*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["c0", "4"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"], " ", 
        SuperscriptBox["c3", "2"]}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"], " ", 
        SuperscriptBox["c3", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["c0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox["c2", "2"], " ", 
             SuperscriptBox["c3", "2"]}], 
            SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["c0", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"c1", "+", "c2", "+", "c3"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["c1", "2"], " ", 
             SuperscriptBox["c2", "2"], " ", 
             SuperscriptBox["c3", "2"]}], 
            SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
       RowBox[{
        SuperscriptBox["c0", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
          RowBox[{
           SuperscriptBox["c1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
          RowBox[{
           SuperscriptBox["c2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
          RowBox[{"2", " ", "c2", " ", "c3", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
          RowBox[{
           SuperscriptBox["c3", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}], "+", 
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "+", "c3"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["c1", "2"], " ", 
                SuperscriptBox["c2", "2"], " ", 
                SuperscriptBox["c3", "2"]}], 
               SuperscriptBox["c0", "4"]]}], ")"}], "cp"]}]}], ")"}]}]}], 
      ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.801179316240815*^9, 3.801180635279974*^9, 
  3.801181370638253*^9, 3.801187379289979*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["c0", "4"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"], " ", 
        SuperscriptBox["c3", "2"]}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", 
        SuperscriptBox["c1", "2"], " ", 
        SuperscriptBox["c2", "2"], " ", 
        SuperscriptBox["c3", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["c0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", "Y", ")"}], "N"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["c0", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"c1", "+", "c2", "+", "c3"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", "Y", ")"}], "N"]}], "+", 
       RowBox[{
        SuperscriptBox["c0", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}], "+", 
          RowBox[{
           SuperscriptBox["c1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}], "+", 
          RowBox[{
           SuperscriptBox["c2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}], "+", 
          RowBox[{"2", " ", "c2", " ", "c3", " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}], "+", 
          RowBox[{
           SuperscriptBox["c3", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}], "+", 
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "+", "c3"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", "Y", ")"}], "N"]}]}], ")"}]}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8012236671432734`*^9, 3.801223773606352*^9}, {
  3.8012238841308117`*^9, 3.801223947805456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c0", "=", "0.01"}], ";", 
  RowBox[{"c1", "=", "0.01"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"c2", "=", "0.3"}], ";", 
    RowBox[{"c3", "=", "0.1"}], ";"}], "*)"}], 
  RowBox[{"cp", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fg11", ",", "Fg12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c2", ",", "0.01", ",", 
     RowBox[{"1", "/", 
      SqrtBox["4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c3", ",", "0.01", ",", 
     RowBox[{"1", "/", 
      SqrtBox["4"]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"c0", ",", "c1", ",", "c2", ",", "c3", ",", "cp"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.801187400724512*^9, 3.80118744060035*^9}, {
  3.801187472360489*^9, 3.801187855496738*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
1QBm/HHv7cekyjTRs7rl6jnM+K1L7hjtddFGz5x2hhbav+PvSl1+s/SaDnr+
yBiULGWevxfObhJv1kXPxU45w8z4lw3fCQwYJXm2h/s2zLLnKaPearuVSX39
iZ5nTbx2gFmvaeObnhLRwImeTXjXLC8YeEV1xN+YfTdVCD2LCRlNZdZxxnvU
r9k6WRw9D4p91+SpKaW8okQGEy9Jo+e30o+5mfV8Ry5GHXIplEfPsN1X2mTm
/Jbk2WLp/NWEv/JsT2zYtjPjpyryZo/EkPzP2l3Fpcz4qyZPLZe7ro2epwef
vcuMXy/A5Rf3GV30bBAy/wwz/uAHL+XP+emjZ+GjSluY8ac/nxp0mdcQPX89
+X4OM36hw5emnZxhhJ6rziZbeP6Of4+gnx77RGP0bKfZ+Tnpd7zH3GMsObeS
/E/SrRfNzHrWKQfrk6Xe85BxQy+pzOPRG2q76mqDjGYR9HwqOSyfWeeaXcRp
2SothZ5ZjLemDmi9oQqfC05IV5RHz/5p8+KY9ZHtgUtzer+TPFubuW1EdHQZ
xfZifUfOFFX0DFuDv/JssO2L7SgKjST5n8xlCzlYWMqp8t0NTV/69NCzbqfj
IDP+F15z7WUMDdFzzGr198z4VXsVFFuuG6Fn/m6ut8z4R1ZYtlZeN0bPQRt6
ipjxC+Zqyc87T/JsX768zmDGf0XFdKPPDpJnyy9deFLhUCUlrz2kO7KC5H9M
Zk0KYsYbo8qp87GEHz3HlatvKhiooHJSq1oG+sVIf57LvZhZH9wWXHA45rUM
eg6p6Zm1cmUFlWsS515lp4SeB+eXOTLrTZe4NS159p3k2VY1pJnw1JRTDWLr
tQSjSJ7tLZ2/mvJXnu3Vka+pzPgn9skVia0l+R/Yhtm7+S7gIfmflBOZEcz4
PfN8Wm/OIvkfZcFLh5jxzxJ3vFRwxAQ9nz2zfzszfl/Xj0+C75qi5wnj56sV
1LUvDPbc5yTPtjXSxZsZ/zlGauTKMpJnm7q1Rvd0QTUV/VkiVWyIDT0/HMyU
Y9b9bwqdmcs+ieR/tHZe4mfGK/7OKsWnQwI9R/3c/yuku4panKY4+/kCefTM
E7TiS3VcFTXL85Ud1xuSZ/tzHl5FuW3fXK9XT/JsPQf03uwSq6IGPA/svlZM
8mx+dP6q8q8822yD9R7M+NlYCkL3TyT5nycp7pOY8ces5MoN3U/yP7Cddz2t
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
tv/WQVzMjOn+EkHqIBTH3+cetX3feT/BCaQO4ul4P0+iLtgPfc36Tx3EMXo9
mRNRaw/OdiV1EDPHfdyiqpbfWjD4itRBiND5wIC/8qhL6TiXHs0YsDpP6iCm
0nG+49WKPt5B6iB06DgtlIL6ip6ROgiB8f6TQj3a7PpIQYHUQbTT8YfppPx4
oErqIG7T8Xv2rtWS7iJ1EJvo+Nmve0tYawiSefvjnyObSs6qlkl1Ifk0s/G4
sihPzmV3Hqj9WwcxY8lnmxUvSR3E2/HTjYfU5EU6ZckMUgfxx98DqrX07J4p
raQOIiaa+XefGioWDHL7Tx1EEJ33K/krP+lNx1kqlU/d+08dhB0d523uMz0l
/6mDUKTjVOZb8YNrlNRBTBi/cH1EHQ3j3jrhPamDeE/Hv1FXomn7BVIH8ZKO
fweDf8hGitRBJNHx75ww6YrTElIHET+eUCugWlRkBsxPkLzZH28F1IebtQIt
30kdxOHx45VPPd7XfNt58r91EI6RX+0X7Sd1EKtWMv/yqNz30zk5WPnRc8r4
9yiXcmXXkHMLJXUQZ8e/p48pkR9uz/y8SR3EVjrvF/1XfvIGHT+fVEminS7J
m0nT8ducXT6vx5TUQRyn4+e+kMx9lZXUQYzA+gdL7G59/E8dxEY6/j6+HjXt
PaQOIo+OPyVYbflzQVIHEUfHvyiiINo2lNRB/PleP6ea3OR9NG+QvFnYePtn
FJ/qBzuhc6x//R49owwbXaxlVpE6iM3jHp5S/RqfflU9+7cO4uXXdaHcPqQO
4o+/J9TQ2bGIM5KkDuLJ+PexkLLhMhT0jCF1EOZ03k/6r/ykCh2/1acz084s
IXmzCDp+R4vTtt7ZpA5iIh1/XIcbx+VhUgexg45/TrDIyzvSpA7iIx3/Y+tl
phVypA5iAR3/jay8jzv+UwdRQsdf6rZKWegVyU9eGO/nxdSUrtln14eQvNmf
+QnFlERto3HVV1IH8ee+yUuq7oVG9GIzfvTcMz7QvKCOZJWdsNhH6iD8xsfJ
F9SBCtUPFboS/9RB5JgJbdeIJXUQfzz9Pv/yKPHaWknykyl03u/mX/nJWDr+
rpOz2O3iSR2EIB3/DBvfXd9nkzqI/XT8d03kZrp0kDqIfjr+/tt+KZu8SR3E
cjp+hyv9+3OSSB1ENR1/+MGNNWEdpA7CmY6f/1zwOW8W/b/ub5ZRM910f+X6
kLzZn/HhNXW7ZrKi5HSSN/vj9RXV6TB51bufpA7iz/jwitqXG85lF0nqIP6M
z6XU1ScMj5pvpA7ij6dSyuVkrvoLSYV/6iD27zxme2OM5Cd1IZ/5V36Sj46/
rOWlcWIDqYM4Rsc/umhGRGEzqYMYoeMXYkk7u6GQ1EFspON3E30zsfMIqYNo
puOfEBUQF6hP6iA86Ph5ThhMdvAhdRAFdPyCN4W33BUgdRDOdLzX6fOZ/z2P
LacMJ24o/BZD1sEY/9iP3lD2JfXanN6if40bb6iTki/OXo+X+isP/IYqeWBt
y5tO6iD+PF9GqSgd0VWYrIye/3y/yqgLidrRD07+Wwfx7q/8JGy9qhn2n7hJ
3oyNjj9+VDvv1kKyDkYWHb9HxuW2hrOkDmIrHf+nmxbzF1aQ+RL6dPx1geJK
zqWkDqKTjp9f5ozS7IckP3mZjv/yrQUf0s+Q/OSfdfkqKaeTFWau30kdhD0d
byV9/gOe/6zTWUGJcKuZDiSJ/3Vfo4LaNRh08/Jtsg7GeDdZWUHtsyjbZpJO
6iD+/C5UUGbNWkOXt6iS9UbG+085ZTFZrjtRVAM9h9F5P/2/8pOH6fiPqd0Q
nahr8E8dxMjpqSNFq0jebIiOf9fOcCXDW6QO4h4dP9+TgTmltaQOYi0df3HD
TIHCYZKfVKXjp3K+3rPkNkfPDXT8b2avZl3AZUHqTcbFVVMHng87cVaRvNmf
+6fVlMP93aa7RUjezISOV5w+L8J1A8bHtypq0VO97Bk3yDoY428bV0VpPLN9
szaUrIPx5zy8ipr5qmXh8xiSnxx/W7EqKqlnZlpxGMlPltJ5P9e/8pOFdPw3
tD0/775M8mZ76Pitjy1+kCxl8k8dRGranXbvfWQdjM90/E73WVpOVZM6iBt0
/Lu/O+SvlyXrYCym4z8tJJIk4W6JnqXp+J1K1D0yNpP85K/x9TDfUieUk4Rd
kkje7OH4535LlZ26oKORRPJmm8Y7+lsqNf2VxoUpJG+mRccbQZ8Xgec/65TW
UDvu3slU8yLz88e/XtE1VMPl5v2fc0h+8s95ew0lPnh/0yx2Mj+fh877nfkr
P/lnfKulVJa6BC1UIXmzDDr+n6MTbwXkk/n5AXT8NywPKDrPNP+nDuLn4Oi+
niKyDsY7On7DSkuD3cZkfn4sHf+V526PREOt0bMXHb9Uq8Cq5hKSn7Qdj6ue
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
QVMfVbHpngcz5DP4eXneUmPKd5HXs2Yx+GThszY+3zY1MbuZJp4jeJ8bzUqE
nC9g8EZpve5Mg7ZNJxYy+Gd13oV37BeB930NHih4q2I7mm+7HmTCxUev+24L
l3iTsud79a3DJzUf4F/uT2+DNxz+b0jBz2c8y2TwXOv+g/Do50MG5DB4meEv
OkUEFnyfx+ARht9POL+kYGSAwXurfRx1NuxO3rGAwR8Kv3h23fM+G4MMvkv1
67dJXf/PNsEGP6Peh974rt+ZO8UNPkH43ITAS0Xbhxr8enq+WZ50CLz8IR8T
r4p6YqNHxGavVcLgned+4UJ2f9ftIz5muPjT4Qdn3zrQLn0WU11833rfEfND
pfwlfQ1+ani7NxuexBXyM/iU4atzzyjTdHU+g/8XHnhsW8dGxQsZ/J7w/jt7
zFy1pbjBRwmvNrRho46tQw3+RPhPk2qvOZMi3OAThDcKPXWs+NwSBk+fztv8
bdGFTSER5gvxwut90L3ONZtcy2KCxWMOn1vIc2O+X3OZCPFuw8tkC6oyoIC/
qSCeaO0TabCx8vJ/8xu8xnDPwZePjt9V2ODThPtOTfNNqS1hBv8jPMvFFuEb
BpQwe8W/Bn974Kf4HlERpop41uDNsncuNutupEknvnXy5xlPn6UasDq3ySl+
cPiAjn83SfLM3wSIzxp+vvxGj2KpChr8y/BrX7dtOylLEYOPUv0Wl7Lt2H+4
pMHPqD7ywitP11kYabaI9xC+aUKH4PG9Spk34iUn/4w52miO5eFMKR5t+P2D
t9YkvVjQpBPvM7xGufBdv+YPMgvFdwavevnpm+Z/Rxm8ZvDeB2bUDN8XbfAt
an116OuW41NsUR8iPHbpyiV1Lp1WX6HWASv+OrTbgUT1M/K7M6dHh0EHJ8er
PxE+ekepI4+vX1W/of6edv3j6Onqj9TnyPq/58ChQ79X/1t9i/C3dW8VeeB6
qD5E+BcTdk7w8Hil/kfdXzt2VI6E3lfV/6h1kL0Lhl36wPE2wsccGVjg0ann
6m3UeeK9vC9ZHN8ifNTw++9+3J7U4FuEn2lcqEm/D5z8lrgt3hp5e/JPp9Rv
CL/UcGvaYsPt+h28bIrOdf/Kmai+QnjH66G3K39tz+OEv/znn5XlntxSXxW8
p2t+93r3UunxEP+U3xZ4tufaZT0eeIt7LeOGBtvzWeEebbpVuvjLAz0e3Y8b
fKLyju03bZ8j+cPvh/ZlnJ6gXOtWM2vGW59LlORX3Bf8dDBD5/Z+BUxDyT/J
b2Pfnp8Y0qKguSkeeV7faPS7gZZHsYLkY/BaPyY9GhsXaB6LD133DxUfXLHy
h9/NLyVP0zljdwYtzOsTbM6IJ52/O31468qr/YsafN+8fntYrxZtA4ubZeJJ
h3/TbYR3ZLkQgwdc++gbjr3Wr3Fxg8+a139R7t67p01DTbB4wOG7rp7tb/kS
8TLDl+UZ8Ob0iHCDR1j3+w7o0zXT4pLmd8kb4aveba6adV+UwUsIXzRoZs9+
R6INXkLdB1Dg2qJ38aUNXkL4toSyg5YdKGPwb3JeR7+J83kf9ti1Xa4znZ8p
fkLul+Hl7oc1KNv4jss7OPGRldfBp05Y+H3WeflNlv4ni1rrMDxF/l2zD5QP
NHn+2NvBWofV91n4/rp//i5mJqducsrqV4Yf3Nv74YyQEPP5mpPdrf5a9TM9
2pD96w/xnN2oenqrHxQe9jDuzaYFJUzA+72/Weuyzg2eVL33L8cjzOIFpWtY
67z2gY6pPOPO4yiD7wweEFdqfWzK0gZvHXzb6z2/jErvMvgH+T62WLyk4KJX
R9Q/yPeoZcPVqU+8/Ef9g/BVyV+0PvWBb7w1bJHVT6we9JJp35ffFmbwdKsn
qb73hH1nw03SvDP/sXzl8MKJP07u1bqEqSD3X7bnoGnLEf1KmlLj31a0fke1
rydnynOWnxA/tc7Rmh8afdYrwow4kPFHq78T7jep04hcEyPMIbmP0/gE/X4q
54JIs6tEr6vW777OM0mVao9/zkiDlxl+JsPd93uDokzqzjHZP3r4+R61LTXH
8h/WkPtBeKbZMzfs3F3KVLpwf4iVP+jn5fFH8mnRpQw+TZ2/fbhF4z5Vog0e
Oni988WSNzhV2qiHTvjM/ouvVKhd2uBPhP+RInqL61wZgy9Pr6upKadtOOcy
+PLg9b+beCVFY5dpKffR8BztpmY/7BFkat0Nn2blUXod5pufbPyFQLNe7q/V
R9hraZ9Nh4PNV5EFTlv5FXxTsallckcFmyiZ66D9UWH121u+xJDy3p/V2WR/
X5ZnLXP62YAQg08f/tuYqm1nzw41/fr6lbH60eE7fLcc7RUUZo5+Xy+TlWfC
S85qEJZ0UmlTN2f8GmvdgFfwqBOadbrLxPhl2/fRfy78WIjHkbdjok36Q+Nb
WeuPek/3br6y85cyhj4q9ahJ39qnPk67bwoP1UrZ56N9TeJNwkcDx/Pj7JvC
S4PvA45H5eN//qdvCu8HPgU4ngr2/+vxiFeB/erwveIBYH81nH3rxIF14KH0
lXWVfXq6L1P8ZsQHjo+L+KjfVPxRxAeO78jZN5VX/DzqWxGOT4b42H2Xn/wn
xAeOr4P4aN+U+CWID3yw+BB0f75w9u/Tzwdnv/mnfne7bwqvI/GE44HsK/tL
4fj3iDO8ofjiiDMcvxlx1r8rPi7irHmR+KOcfVMnxXdEnNVPIH4e4qxcfDLE
WfuyxX9CnOF1xdehngXh+CWIMxwfAnGGs3+fOOtzGPFhEmc4/kzirHNWxWdI
nOH494izPp8RXxxxhuM3I85wfFzOvin8UcQZju+IOMPx86j/RTg+GeIMx39C
nOH4OtQHIRy/BHGG40MgzjqPXTyixBmOd5Q4w/FDEmc4PkPiDMe/R5zh+OKI
Mxy/mbNvCh8XcYbjjyLOcHxHxFl9SOLnIc7wduKTIc5w/CfEGY6vgzjD8UsQ
Z56z4V8lzvBB4mslzrpvUnybxBmOH5I4w/EZEmc4/j3irP4G8cU5+6bwmxFn
OD4u4gzHH0Wcdf+W+I6Is/oXxc9DnOH4ZIiznpf4T4gzHF8HcabPB28tcYZv
FM8tcYbjLyXOcHybxFl9QuKHJM7adyQ+Q+IMx7/n7JvCF0ec1ZMtfjPirPOs
xMdFnHWOivijiDMc3xFxhuPnUQ8L7yM+GeIMx39CnHUesvgo4DwXxetL/Hk9
3mA4r8cbzOeifVniZ4DzevyxfF68Hg8qnNfjQeVz1Lmssl8erh4I8Xny+fJ6
vJRwXo+Xks+d1+NXhPN6/IrOvik8gc6+KTyBXCe6T1r2k8J1vrr47rh+dD+Z
7IuE675q8bZxXem+VdnfB+f1+Me43rSPS/apwXk9Hi2uQ16PDwrO6/FBcX3y
evYNwXUejniNuG55PX4eOK/Hz8N1y3Ns/NJcn3B81FyHcHzFXG9w/LpcV3B8
sFw/cPylXCf6XF18m86+qXLih+Rzh+Mz5POF49/jc4Tji+PzguM343OB4+Mi
/jqHUPxRxBmO74g481wdLzdxVp+oeLyJMxz/M3HWfifxFRNnOH5d4gzHB0uc
4fhLnX1TJcW3SZy1TiF+SOKs3lnxGRJnOP494qzvL7444gzHb0acdX6m+LiI
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
jwu+eU3aTEvrBJm+Mk8aPnx5rSQV1hczSXw/zXOFp9+5+55HiuImS4P/3b9/
SvbvL3d4AI6LB+C2Y//+Dtm//86xT/9L2ac/2rEff5Psx5/k2HffRPbdz3Ls
rx8i++vPOfbF75J98c0c+9/Ty/73RMc+93Oyz/07x352H9nPftexb72w7Fvv
5tiffl72p29fNW5Qsw/rsHp2M/z05GjW964trZontzyw8CF396V1LS5iKu1d
6mX1JZIHrrreZkfEnbeuEm82vrXWVd3v7PVDbu8aaUzg9bLPrXUV3vPbuQkr
BxU1q2K2TLbWVZ3nWbnsqIqfFzczpO+a/M27VFTD/f++dr2S/mr4rP3Jxi2s
ncb4SB81vP+NCz8mdM5qYtvmu2Gtw+pP7Xj6VEXvYJM37ezh1jqs+3AzVLsX
7RViFq7PEmD1ecKHp+xUvPnrULNU+szJ61LELmuXteZLVz/pM4cnHvtucbaz
Pua49JnDz+UdMPSXJVnN07nVt1nrLbzK9PknXobkMT53Up6z1lv4sdDyX+dc
E2wmThjcy1pv4X923zB1+B8hJmvEq0yWh1TnzDz8c+yS82Em9mL3tdZ6C2/7
YM7QeVdLmK3Sb08+OW1Si80NPZ67PEM/9dvDvwyfGmjOe5up0m8PD76zJaFi
TFaz5MsC0Zk/rKvwHDUf9/NokMeMlf5/8oE2F9ZX9qqa2jSR/n94xUbrKs57
nMV0brj+vbUuwZdeqpa5rV8e00Y4v/ueq39t2njWbdc8+bv8vi/pVObBaf9/
XQ8lntpPVevn3xdf4nnRRX2fAnWWVA/76jNz8WM+sFeP3zNfirCYqwFm17+H
t1nroT73iyuSp9OVAHOk4vaXH/3aPP9sdbpSj1GFzHrZl8f7zKuaOeX1KSVM
lOzLg3d8NarU2DURZoLX0XLW+g8/1abbnbW/RxrmguscjyrVMsfluej6XfY/
an61osPtdFXDzfhMyTdZ9x3wJV321ModH22qyP0274OPeoIjv2IOCH5q7bsT
TzU+ZThe5fqS1xHnPDI3hHkYcOZifHoeaOdRZcR3jZcZjp9ZPcLCs8h9MV5s
8h/82J+eM9t5FD7nO+LthTcX/zCeXPgkuT9l3gl5SFaZe8I8D/h0mevBXAp4
BZlPwRwFOPMU8HfD48XjjW8aPlC80x/f/j95FJ5kfL5wvL65WHeE46GNlvs1
8ooaMrdltNyvwf93LomdRyXKfA3mQMCryjwI5hbAmV+AlxyOnxyPNhyf9qfn
53Ye9aX4n/EUwy+Irxivrs7zEb8uHlg4PtgYuS8mT5gic2qYvwJnDgtzROAv
ZZ4Icy/gzL9gToPmSzKvgbkC8F0yXwA/u/raxdP+qXxh51F4xT/efv0nj1ou
Hmx8zerJFm8zfmE4nuGPYflPHpVbvLj4W9UfJc8TdH4PfSvSz8N8Gjhzapiz
Aj8s/TzMBYEzH4Q5FnDmWTB3Ac78BeYEwJkXgG8djncdPzicOYapHH0veK0r
O/pb8DDjC4bjDcZvC98u/SrzZb0lX4qVeUb49OFx4tXvIOsq+U9nmXPE/B71
lMscH/z7cDz8+OLVuyLe+NbyHIB85pDMS2IOkO4rlHlAnjLPBh4jc23w+6sX
RTz/+Og1TxMvPf50OB71x7Lekp9kkDlNzB+CM4fopqy38C4yT4e5Lzr3Sea/
MG8AztwB/PhwPPn43OH9xOuOfxyOh3ywrKv8jveUeVLLZF3VurPMSzos6yqc
uT/Mp9H9VjKnpqmsq7rfSuaqMC8BztwE/P5wPP/46HVOqXjp8adrPVo86vi+
4Xi/u8o6qXVSmffEvCLdNyRzi5ivA9c5O7JOwpkLo/NLhDPHhDkQ6uuQeRDM
LYAzvwDPvuaZ4tvHCw/HD4/HHI7PHO82vL34t1M68sm/5fkY+Qo8+EXvjZt9
b2ieAfdu6pPodf6enQcIX5IqY85jgx/bzx2E9yu91OuLv57puqxzMILn3osN
fKnrDry9+HtZX9THe3favydXJlWfNrxRSp+nf1f2UJ82vMj2qJYe/3iqT1uf
JzcZ43WpfQr1aescg79eZE361Es9yeqHlnxb8z+ey+X69ohn0acaH/jhMnN6
9PF5pfHRemvMrV2LCyRRDzncpP05f/F0Huohh6d6vuev0KfJ1UMOfyL+Xu3r
En4r39h3dU6l0zjAW9e53OhYaAaNg3q4TzZtumhcRo0DfNDbmtG9rmbSOMCn
/zb4l3Nh9txe4tE+6lb1Oz8nU++6XZ+tMWp4Ci89X/i89Tua9S+cWs8X3rf1
nlfvKqfV84UvFI8u5wWfn7DkXqmH2fW84JEzJzU5eyGHnhd87BufZuX2+up5
wWdnq7X33jx7Hi7nl+1k/YFDTtlzxOAL83xRe+S09Hr88AZF1v4wo1wmPX54
JvHTcpxwr3VXT/h7++lx6nPU5euCH1fy1+OEH23UrefGfgGOuTl7XadX5r5S
c5w9bwu+vN6VyvuPZ9PjgW8Wjyt/F36/+emXcbH23Cvdj9DkWt7ErPbcB/7+
iywZo6t+6avvDw8Sfynvo/NXv84VMnm2PSeC9zsqHk6+b9RbB/nuruLV871e
f/AKQa7EgwH2HCJ4aGzmkQHV7TlEOk+7bbVqq5PZ87vhu9YuGdhkbS7HvKcT
rjERZfvnK2rP79b6eMsk/R6/DdDjV9+I+CFZr+B1cx0JzFHHnjek82OHNcl7
Mpk9pxse3eD8teBG9pxuePct88fsXByinxc8+ZWchbM/DdU467zl+IJv/4wM
13kK2pfb73yVW0d8NG7wcfmm1B+Y354rBK/5enFgmlb2XCF4lcaxcycdsecK
wX8rHN6ixRV/xzyyU64CPS9FeD2z5wppv7F4FImP1qlHX4sZOdSeEwR/Grrn
4pkX9pwg+JWmA/adaxOm8YF7natwJ/sxe04QfFneyaf8Q0tqHPj7L5r0PPTV
NXt9g08aHB4yeo6vxgF+rvSIMl8Vtuf+wG/fG9wpfqA99wde69j0jfOPFnTM
vzvjaiOeQ84XHlljXW7XQHteDzzl9jFHL6ay5/XAExYGZwgbb8/rgRe4W2f9
9jSRel5ap16y78f+q+11D96q5ehjpTvZc8B1PmTf3XW3vsmv5wU3bbfH5R9R
2DEH7Zxrm3gFOX74ovCE8fvH2nO64ZWj41xXi9hzcNRPmDT1+7l7o/Q4eb9T
9/PUtzwh6jUWHlrtYtlFNQvqccKTT55YY653ET1O+G3x8nE88JVrp33WcUaU
Ho/mz2PTnmxeJVrngLBu1Tv0R5RV11NPq3z/fo4+sCHPxdS6PsD9Ikr0tup6
vJ7rMd8x/ybd/8yor4ffXBzxsMbNzPp9gVcIKjPcqtPxPrrfsH3txT//mt0x
Z2enq/v+U+VK18qp76P7Css3fpHlZS69DuE3v91a3arTcZ58Dq8fXhvfp+9j
PR/4hqL1Y2t/iAPHBy+XO3+lv26l0OtQ1+M9xYaE7vDR44c/zHmovWmWW48f
PiVXn/qNaufV44dX3Z11fr0Hfnr88GF1S5XLOSpAr0N4j5cdBlp1Os6L66hD
s95zNu14pucF3/Pdgx96X02m56V1tx9bNivzIJWeF/xJVMChuX3T63UL73r4
dvI+fTLr+epzp6Jbyucd7KfnC/9+wl+tH3YM0POFL5ua5Vbxuvn1fOHmu7L5
G4cW1POFnyzeKfKMtz2HUY/z5LnRVp1O+yTke7Pps3u+WZ7Ycy11HlFEzajg
Jck1DpoHlXv+8GRCGo0DPGlGV+jUlJk0DvB+aZtsHB6bzTEP94irXkx234qF
fR1zdo64rnZbcaJLhXwaH/jNl34rdvcuoPGBv3uxN3TD/EIaH32ulezBvSV/
BGp8tJ6Y7/qelzeDND7wIpUTu799V0zXAXiqwiuSeKaw5yeyrnzd90mRNpns
OZXwEY9qV5zS1J5TCX8/LOfrtU3Sa9zgDUs3eBA5IovGDe5fs8eFnstyOOau
HnONjV9fLqF1Hl334J0ybKp68oE9j1J90ePu/tj4mZ23wEu07DO1Wmf7d1nn
YG+N3uF9yf6dgt/sun/RzS+KaTy13jdj+eBJp4M1nuqRTnm96/Ck9pxEeMx1
P592Be05iRxXcNt9fxUNTKrHD/er9mXRv9LYc0I53vVlKvy5d3QyzX/Ue7zp
Wpur6dPp+8D7rwroHtKqmMYBPnJGoyPhdezPV/ePrHx+v/Zxe56g7rNoEltl
SQF7nqD6r6r3KNG+czb9u/BkaY/Hvd1rz/XTOXJLC6U+PyjEMTfqnOuX2y2W
1CoZpsdDvOs395pZ87WnHg+8a6Etm73z2nP31Fvb968y++Oz6/UGj+i2a+nI
rXn0OOFpCh7o4beluB4nfNiL7km8xtlz8dTf9VVg0pxN7bl48NwZL6yM9y+p
x891MeRw4tgXb+y5gfCFjXucC3psH796froUifV/ZM8NhPc4GfF8fq+8+n2B
N/s29xiPnvn0OOFxn53O7VenhB4nfP2N3jdqBdlz5eCtS5867J00So+T6/er
zSdnefXLqMcJ71E11xMzL4cep3p4/hqx8Hai/fuldcbL1fZanhmOBz665dkx
loeHuOl967i6az8LvOGYo73FFfN84s0JhZ/aHlL5+3tqtb/d/tI9fT281vQe
I86+ean/P3zf4G23b4ywv0fqL22R4F0kv72fWeuAVaoWtzxUrD9ab320/eCc
WvacNc6r3crmr1b523MYeX2u0d//MmN4iOZp6pUSr6/2B3DfI35ark+9rw3s
PMfyR+lzMeG/TfBL7TnOnvfHv88VX5Puhxc+/dbBo6E+9jxE/bwylfkzMqf9
e6p5YpjndcvrwvvrHK2w+Gf1i9v7DHl90I8pBxT2CNfrDd7fN+6Y5fkhPvBv
Xp0Ya3lsnPnnIqmTOvPPhYUehX95yT3/PCP1UOd1ta5h4QM9fN2vq5CpM786
W/Spy5mvTr2dqU7C/5Ovzis/qunB/ydfzSb1UOf1WXrqmQyr/na/Pl/903jk
V2leuV2fTztdruo5OZlb3jtz6u5h4XHueW/7Q8uD+tdxz3sXdPmjdeQr97x3
itRVnXnv+BYxXr8Pcs97tx6vsClZQfe8N6zswjtHU3m55b3jTy9fufWqe947
IiFfuq0d3PPeyUtftC7Y0D3vbV9r/KRFT9zz3vRf5Z/+fox73rtB6qrOvPd6
ji5zJ55zz3ur/POmUqt0Hm55b/fIWZnPBaV2y3sHPnt699mv7nlvVr+cqWvP
c897R4+433bmJPe8t93lt9d79HfPe888anHm26/d8946Sx8XTe5yz3sPtKm+
+Upm97x3jNRVnXnvqN7R8U8CX7rlva7XkwcPe+qe9+bN/bRV3app3fLeLRVG
BL2p4p73VtozM/PUq+55b4Vn71on6e2e974M2XymdHv3vHdtp75r+sx0z3sr
73Wtm73PPe89u2/D9mI33fPe/F/0TbsiWVG3vDdN6Y6eVVMFu+e9jrnhrMcn
xR/lzHv9xJvkzHvx/Djz3rPipXHmvffEo+LMe1eI98OZ904QT4Uz7w0QL4Ez
7y0v+9OdeW+E7Kd25r2pZf+vM+8dJvtVnXlvZdlf6cx7j8s+QWfeO+Nl5W/H
r3PPe1uWu9xozj73vPdOlpX7/q3l4Zb3zl9V9vPa59zzXu+EpOMPlAp2y3sv
B/ff0Pmye947ZcSemP63PN3y3m1XYu9ViMrglvcWfPP9pEOPs7vlvWUqfJ46
5ufibnnvgxkuv2z1Q93y3h/uZliRKmO4W967oV+qosf7p3DLe3ekXH+l6bSM
bnnvhoPzUuxJzOGW97bf7pF+jrefW94b/XJJisMXQtzy3vgpUdPb7g5zy3tD
p/fdPGR2Cbe8t9291oem/mdeNtfF7m3dUizwSemW93r7XhhX93Emt7x3WJ+d
SScc8XXLez2qV2yTv4q/W967/uXOtFNnFXDLr25W//JmsfxhbvlS4Y5Psict
VMItT7783N+/oV+EW5585UXJVnHpo9zy5GXpJuyv87yUW36VIHVGZ/5calSN
5omVs7jlz9kWvOod/1tut/z5xNhvvoscGOCWp83LO3fO/GyF3PK0VTvqf+4T
F+SWRyU8XHC9VVt7PrL2xdVdmnnQqJJu+Xm2Nq3S5pgd6ZafrzUrp0xfXMot
fzs0KW2rJotKu+WH736st3bLdJcev+6zkLzCWT/ld9lZPx0pv1PO+inrsLN+
ynrirJ+ybjjrp3zfnfVTvnfO+inXs7PuuU3yImfdk7zCWffkd9ZZ9/SX3xFn
3XOBrG/OuifrkrPuyfrgrHvyvXPWPaPk+nTWN0Mlr3PWN8mLnPXNPJInOOub
p+R30FnfzC/rp7O+yTrmrG8Ol/XBWd/ke+Ssb5J/OuubAyR/c9Y3yWec9U1+
r531TdZVZ32T9cpZ3zwu32tnfZO80VnfJI9y1jfJE5z1zQ2yHjrrm6wbzvpm
ecnHnPXNlZJvOOubq2WdcdY3J0oe4qxv0tfqrG8ukvs1Z32T+yxnfZP7HWd9
k/sIZ32TfNtZ3yTPdNY3nfkS/GvJQ5z1TR/JK5z1TZf87jvrm/zOOuubt+R3
ylnfvCTrtrO+yf2ss74ZJ/ehzvpmO7kfdNY3uc9y1je5H3HWN9dJHu6sb1Zw
5JNw8itnfZP8x1nfJN9w1jf5vXbWN/n9ctY3s8p9t7O+uVDuf531Te4rnfXN
s3L/5axvct/hrG8682c4eZ2zvhkieZSzvkke4qxv8rvsrG9Olft3Z32T+2Jn
fbO23D8665vn5L7JWd905v/wtpLvOeub5EvO+ib5g7O+uVHu0531zf1yP+us
b3If56xvDnfcj+h+XsnTnPVN8hbn873Rcr/sfL7HfaLzeZ3zfgf+XvIf5/NA
7iudz/eOyf2Rsz9tvTyncvanlZHnSM5+LZ5fOfu1eL7k7Gvi+ZKzH4w81vl8
b37ApaOz89keXv49Tvj/AQNsCfE=
   "], {{
     {RGBColor[1, 0, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mgX4VMXbhs/uHuewIwaKXaBIiCCCCioIiIR0I6HSCCggBqEoooTYoqJi
UrYIdiN2d3d3d/K/n++Z77oY3nvnN6dn3py6Iyf3nVTOsmxyJcv4lzXKs+wj
5JbIY+jYE17DgF34vTO8HN69lGW/wZ/Tziuy7DPkHcjRjK8LL2VMW8b8BOvc
c/mvFnI7ztEwd5/OfyHHfAefhjyZYw+AH+SPp8Dt4IfghYWPHURfE87ZmPYL
v4chf8587R051+bIhYyfyrhm8Gr4X+TXtDq0bRhfoT0NH5Bb9kFG2jNwV47b
H75Pf4c7MzanvcXvVvTfi2xD/3zu53t4HvIg/l6mvcnvrZEl2lPw0YzbA3kL
9/A38ivaTrQzOWYzZD3kJ8hfM7/zeWX3b8919qbdA7fmD6cz7gd4AXI2v9vC
azWWMW/D/ejblGs2oH3A76H0f4zcDVmXY16AHy387mql77Azv1+ERzNmY46r
T3uf3wOQrWk703ZkzLP03Y2sQ3te3wK5I3/bqOTzbsHx7yEHcu4H+NsO9K9G
9qL/Sfr3Qb7E7+3oX4XcifYc/fcj98v9nnojX+H3/npvyIXVLDuMvrWR+YDc
if5+yL6576Fj7mN07L7IDXPfZzfu4WqOLxh/FfJl2j7w48iJyAm0urT9aHVo
L3HMhiXfs+6pity+5HPpHLrnZ9L80Dxpk3t+qO8oeHju8d3pG5H7PD3grZDr
Mz//5fwehnyXd36O3h28B3KP3HNWa2EwYzaAz2DMEDjAZ8HdgNpw/cLfUt90
K2Sz3GtO86Rx7jm0NXJg8NpsVngdbw9fwXnGwVvAZ8ODGLMLvCdjjqR/G/hi
+ifB28GXwUfB28KXwlPgHeCr4LEV38+Z8FCYU2TnwIfBfLLsQvhMeD99X/gs
rSX4AfgMeF/4PvhC+CD4MfgCuIPmJ3wcXA9eCQ+Da0ivwMdWfM8r4DHBukg6
aV/e85/wH7SR/N5I75sxI+Ca8BJ4OLwhfAl8OMyUyhbrWThPc3g/HmKjNK/0
7Y6gbQmfy5in4ZnwP/AafWP4Y/hWeCT8CXwDPBh+B14CHww/A18Gd4WfhS+F
D4HfgpfCfeCXy9YL0g+7cv3zC+tM6c4mWpPwlfz97MI6bdfC+vavzGtYulXj
6zL2C91jZt1xddl6rg794zUX4UX0LYf7wa/Cr8Bz4A2Qb9MWwjWRz9FmwesZ
8yx8Ivwf/Ax8AvwvvA4+Gv4Zfh2eC9dALqP1hV+h/x34DHgj5Gu007SekK/S
ToUD8mXaKXCOfIF2MlxCvkibDZeRz9NOyqwc36DN0xpFLqIdCD/CtWrznO9K
b9HXPPoZDuNdvUrbu2S99xqtZcm6bs/oZzuUvr+Qd2sOIFtEX+9w+p+mHai1
L/1H6yT9gLyX1gy+L+nShvCQ3PpKOkP6ch1tJH0PRevhRowZhryT/kORD9L/
J8feJd2F/J12B9wS+QftTtkZ2WCdA+6gdQY/BneGh3O+LrQatBG0XWiRNoMx
HaXjkMfROsBHIH/kmFVa78gHuYfm9K9F/sTvW+hvjvySdi3cCFmW3oUPlEGC
H0C0g0u6d7g9/DNtNdwC+QXtGrgh8ivadbI7mvu53/8orS2ud7DsReFvoG8x
BnlbYX0snb8q2Yi7kLcW1vnS22uSvXkEeQ/vrjvHrYRvpm2bznlXtC2/El4s
pUT/DcgbC9tjfccRjLlIuolvNRier/kCD4Sny07DN0f7DU3hm6LtdxNxYb9B
c2Aa12kPj9M3jfYVLqf/tmj/4FL4lMK2/gLkSckvkn90cmG9vQj5WLJNslFP
JtsnG/gwba/0vLdH28jL4BML6/+zkE+k+ax5fWu0r3AxfC78oXQY93wW/BI8
Br4Q/gE+Cr4MXg8fC59Q2Mc7Q8+n88Kn0T+Sc9ej1aQdktu36JZ7zZ7HmM2R
b9IuhrdBvkW7BN4WeW+wfpCeeEq+CxyRH9GugneWzcn/b2plp7N+r9E9wp/D
18Hj4C/hq7QW4Q/gK7Re4ffgK7W+4ffhlfBo+DP4ej03/BV8LTwW/iLpW+nt
j8p+b5pvmnf7JV+glp6x5Pm2idZWWncHcVyvkn0j+UU1c/sIsvX3FLb7tyD7
l2yHtqT1pfWhbUYbm35voXPIv+HYnhzbu+T3+UHmubwO2VH6sup70Ny/Tjof
vhZ5Pe2RzNwz9zdqLj+X9g7cn2Ovll6AP+QZb4KPhL+FazDmcbiL7HM69mB4
E851f2YfadPCa3xpYb+vdsnX3rCwbjyV+zqFYwfRdwxyE9qr9PfiPLXg1+E+
Ffv5B5Q8Rwcln7Iz8vbC/rnm2KzcPurg3P77j5nn36b8fg3Zm/PcSJsIf8P9
n5T7mxyMrFVY/yzTemfM8bL7jLkTPg7+Hb4bngb/Cd8DT4f/gm/W3Ie/g+/Q
3Id/k/9cWNct4BlX0T8J/l52GZ4M/wAHrv0o3Elzuep4R2vwY713eBfk7bRj
4F+Tn6D5/xO8Gp4C/wj3Z91N4HdjznE+sj39D9M/D94bvhM+Inp+t2fM2Gjf
sS28EH4CHgmfGb2uRsNnwE/Co+CpuefUichO9H+jays2gT/Xs8Fd4O/gqXBn
+FvdK9wR/lrPLLsHf6o5BHeAP9O7g0+HH9da4loL4Mc05+D58KNaq/A8+BGt
T/i86DU/Xs8bbScmwIui7c1E+FR4LTwMngM/CA+FL4i2JUfC3eBf9c24h4ui
7dkk+hdH27DJ8NnR+mgsfE60PhoHXxxtX6fAl0Tb16PhS5MNngqfBj8k/QJ3
hX/Rt+Ra7eFPdJ9wW/h93T88Cr4Ybs340fAlcBu4F/yv5hxjhsPnwfsqjoHP
gVtKr8KL4f3hofDp8F7wEHgB3ALuA+d8wxmc5/JoG3wc/Uui/ZVj4EHwDLgZ
fAg8E94THgBPhHeH+8IbcOxM2SP4AfqH0D8MXqg5Bx8Onwu3gltG+2cjZX+i
fbLhslHR/uIIuFW0PzcKHhPt1x7AsftG+4Kj5ePAZ8P70H8A/J7mAP1t4Hel
o6XH4H+0VuEe8N9az3B3+DetZ9nDaN90rPRStE85Tno72hccA0+J1vsHc62j
o3VHV62FaD3Yrer8QDvpXF7lkBT7Ke6TzZXcpbAPtUfyo2T39ky2b4fCsd6L
hWNb9StulT+j+G+d3nfuuP/43P5Yj5L18szc9mNKbnvas2Q/dWiKr1/OHBd3
K/n8k3PnGKbn9u+6JR9PPptiE8Xfh/O3piXHxgOT3dkks8/ZouTYvGuy17Lb
nZIelj6WX6F4XfmALdOxiptky/TsivGlk1slvSw/TfmBObnzLPqbdLX0n+KQ
WqlPuZhS5rhE/fJv5CfLVirWr5Peueyscgyjkz2VH9u95PyF8ivyXfX8x0fr
zV58u5Pge+FB8MnwffAh8Gz4fngwPCta1w+Ej43W4z3g46L1eE94XLQP0Q6e
EG0vO8CTo32OLvAx0XaiOzwp2ofoDB8Z7Wd0hMdH+yUHwkdF+y6dqo4RlB/Y
Xn5atB0aQP/0aNvQp+p8SutkW8fzTt9g/LG5/b42yU+Q/ZQdVV5sbO6ckOJ9
5c/aJts6M9rm9as65yRfVPNv28L5hrn0z4i2c33l40Xby/7i3P7H0bn9FPkn
H2b2lxUv6J4U+yivsl3h9XomvHHFtntMyfalb/JvdOzPyQ7Wq1hPL4PrV7ym
r9ecqHit3wA3Qf5Huwneo2JduxTeteJ1vxxuULGvq/mlnN+cZCvXla0jO8FP
lK3/WsJ3Kw/JPX2qd4CcVTgOVo5N+vhGuCnye9oVWkcV27dF8JYV27cL9J4r
jvn0PvVeO6U5qbm5OL1bveNJaX0emXs9Snf0z62z1zBmb+no4Nyj8nWK4xQr
7VWxTV4C71CxbTkf3qJiX0J+de2KbfWF8NYV2+rLtY4qttWXwTtWbKsv1XyT
PQvOISgPORVumjmPKtvSWXqO9zNXdga+o2x9fBa8CfID2jlwrYrtRkP4esbM
KXzOkcHvX/mWW8uOa3T+UfSfWnH+5Db6Z8GN4Zvh02TH4NvhE+BG8I3w8fCu
8DXwNLi+fFr4RHg3+Cb5e7Jd8Cp4QG593B55auH3OZrrzq46x6Vcl/wo5VJe
KtsOD4LfLNs+D4TfKNveDoBfL9vudYGfKttG9YCf03NV/YzKLclW94SfL9s2
9oJfgGcXzrecn+K4OvC5Kb5TTneA3lXVubL+wTa5lfRr2b5Ab9mRsmMu2aKu
jOlX8vrX2lcs2CDFBtLN0u/KbQ1K8ckmSeq39LJ0yYBkRzQfhyddqmP7J7vQ
PfXLjnSlHU4LJV9Xa3izpJtlF+um8w8uOQ4ZnH7rWvunYzR+VMXPrjxT39Sv
+1dcfFjJdlBrYkSyg4prlAN4INo2jkh2dledq+Tc8eaFYy7FXrKb6lfsIH0l
e6HYU3Z5ZLKhikeUy52d266qX/Z6HO2Iku2c5PjEerYJyQYpn6y/KaaYk2yc
znNFdI7j+Kpz2+PSsdKTY9KzqxZwWNIJyvkfmnTF/KrjCMUT86qOUxSvXKN4
Xmu8cP5nt5LrI7KxjZPdXJ6eXe/gfu6hZW4dvqRwDWJj+b2FawE1U25AdlR2
fWDu5+6Q2z89mzGbIlcUjitrF/YBb4X3of+SwvWLjQrnizQf5G/cx3Vb5I79
l0XHiifAN0bntdemGE6+1KZp7smPUawo30r9ynEo76R3Irt2Q3R+XLmy5fCe
uWPJ66PjxpPga6PjyRPhpdHx6kz4yug81DT4qugYbDp8dXQubAZ8DXxQ7tjt
uugYchbcDz5UOqXqHIu+r2odHwfrWOnaCXCDzP5zzWh9pPzPxGAdKF/62JRn
lv77UX52xTnYn6vO1zcoXI9Qbkr5vu2jc77d6N8hOh/avXCeqSPneZz10iw6
lzqM/lODa1uKEU4LtnHSZ8pF7QPfVbY+acq5/1HcWXVOXM91QrBukQ8/I3i8
YoeZwTZRMcUpcJvMfvjs4JqaYpDa0TGncl9zgmtJ8v+lV3fiWv9JRue1e2je
BsfCitGuD87PyLdZHZxnkA92a3B8rfjiuuDci/yNG4JzMvLNbgqO6+W/PRQc
gyt+fDA4dlb8uAqekNnfuz04Hlc8uG10zUC5u52TH9iLe9s6OhfcBd4uOv/e
VXo6+Y09lcMIjsEV3z1ccc65gtwmuvZwMGO2iK5PdJRvHF3D6KT1yLFTM8ez
DaNzWjrHVtG1jc6yBVX7HT9VPe+2ZvwFyYaq5qhc4qfBfo5iyR+C/R/F4N8F
+0WK09+EL8oc17we7JMoznoj2B9QbPV+sA+gGOrdYB9A8dEnwT6Y5vb3wT6P
4vr3gv0NxU3fBvtjivEncv8rGHtQ1XmkGsmHUY5LNbB2uWuLIfk5qqm1Rd4d
nQdRPqRHbv0mnap87Becf0XmPMPnwb6c8gbSRf+fV/ss2D9UbuGDYN9GseGH
wb6Z4utfgv0l+ZULgteO4uX/gnWXYsZ/g/WhYsb5ZecSVf8aGvz+Ff+Wo+sf
yrfIf/gmc81Itr6enjk6HyM9cB3n+J1jb8sce+ZJJ8t32yDpUsXjIelzxdS/
BetV5SV+Dfb9lDeYxnlvk72vWt+qFqzc7MPBeaoRSberBq1ccduKc3Gtc9sO
vfsV0Tl35eX03mVfDkSuVBwjnV5yzlms4+6gf+/o2onyvS8Hz3Pla3+tulbX
iLF/Vl0P2126q+Lc3V4c/3vVNbzdNP8Lf1/p5GrheoR0ciW6Xrg3fbFw/UI2
ohRdM9uLvq0K1ymkhzeK9v8O0DotnIeUzi8K1zukw2vAt2fW7evTe9D7UGHx
5sx5j7+DawrKe/wVXKdQ3kaFPNU1W2jOVF03bQj/UXWdrzH8V9W1wCZ6do5d
mTkXtL7qWmZzjQ+uXygvtGm0D9peej6tKc3DH+ErM+edfgrOYyvvpJy67rOZ
9Eh0jKEcu+oM/el/jXn1ZXCeXPmur4Pz5MprfQUvzpwTK6LrrPty3Y2jfeK2
mm/RddxW8NuMX5A5x/URfG7m3NqG0b51G62zaF+8Hdwu2r9XLSBG11ZbF64P
6FnqIt8Kzs8rV5ZH1333YUw1uua6v+ZadG24Jdw7On5T7aBSeJ1qjZQK15jk
O53LObtnzlueF+xLK595TrC/rRh8x+h6pPTPwuA4RTm004PjO+XWmkbnNodw
7jOC/XblmvaIrssOpb9JdF50cGF9Nooxn6qmHBwXKPe/KNj3Vrz/aHDeWHnU
3aPzmYdwbL2UH+sDP8OYGZnzq42j85yDNH+Dc8vKta4Mvpbi+muCaxCKta8N
rmUoNj8/OHZQrmBx8HxQDqFOdP1Y+mFZcN5euY4G0XnI/lyrfnRetB/cKDqn
OgDePDqWOwjeLDrW6iAdHB2PHQiXC9f15Dv9SxtT8X6Av6uukTeFd43OtfaF
r+QehmbOm+0WncsdSP+S4Jq1cmtXBddflBtZHlxPUZ57aXCNRjkW6TzZyl/K
rjtpfm6GvDq4XqOczMXBsZhyJrukHE5vrnVJcLymfMulwXGccjJXBO+dUB5P
NXrt1ZAeXB/sGyvXqv09ig3ry68PjnM1z18Kjm2Vw3wuuB4tv+uF4PhXNeIX
g31m1XznBdev5Uv0C947Ib2hWE4xnd7b88H5ENWOt0k5B+Ue+gbvnZBe1R6k
LzP7Ur2D91dIrz4bXGfXvH0suG6uuSe/WHtFVNN5iv75mef84FQrUZ1U9cLP
M+8N0P6rbzPbsCeCa+Ka//qbxmhviHzVTzLvDVkXXHPXN9Vc0F6BHXLXMlSX
XhO9F0X5O9WnpwfvzdAc6xO8D0S69IFkU+T/3BG8T0DrZXhwzN4q+ULaq6A9
C3cF1+41xw4LjvGlW+YH70OQ3zU3rVP5vYcG5wpkX+4J3g+g+T8kOFcg+3J4
cJ5BumhwcD5B+n9t8H4GrZE1wXsV5B/eFryHQXOse/AeGPntC8q+T72HRim/
pjp+j+C9H7IjPYP3Tshuym+Q/7Bz7r0ZypvKL785eH+I/Mz7gvctaP2OgJtk
1ufLys5X6Ni50e9PfuSs4L0i8jkfCd4jIT1zSPAeGNmmC9Nakx57LThnpfz8
FinuU/x3XHDsoDhF+/MUszSg/9Xg/JLy9qrBaa+C9iyobi6/TrVy7SvT2NXK
8QfHR/IZVgTXsLTGJwXv55E9mgK3zmwfxwfXrWR3Toa7ZfaHVStXfKya9eX0
j88cR8wtvMdPe/1UF/8qc239ouC9NIqVpgXvBZJOOyl4/4z88NopF6Sc0OTg
PUWycccH7wOR3jsreB+O/P+jgvcayffQPj3phltSbK14XfsizmbMkMzxmnxT
+aiqNyoOVmAuv2hccC5LdlA1Wfm890Y/i/bsrEoxqPIF2pP2P1a81Gw=
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1mgXYFsXXxvfdfdhxH1BQsEgVUFFAlFIJRRCQFJCSVBoREAWlBFEQ7ETA
TgQBA5Wwu7tbsbvjb373j3u+62J4594zu8/uzJkT95ndj53Sd3KaJMnP+q+k
v8OKJJmqvz8Jn1FOkrP0t4bwl2p1NaC22ufq/6a2SLJRGn+y+n+qf7bGT8yT
pJXwKVmSDBCuq/aJZMfq2lLJhmr8FPV/1LXTJesofKTwy8IThXfT878S/kvt
Wl0bIvlk9X9Qf4Hkw4WnCf8qvEj4UrXd9VtX80w9f6TkJ6n/u+SLJeuta7vw
XRrTT3i05DN5vuTncK9+72vhf9Su07WjJT9e/e/VP03yw4R7C78kPEF4hPCJ
fL/wmcIDhScKfyN8qnBn4f7CbwofL7xAv99L+Hz9/nDh+cI9hc8THiY8VuMX
C5eFzxOeLXkX4SXCQ4TnCHcVPkt4qHBLte3VP585k2yWWmf1F+va0ZIdobaf
+muZM8kOZU6FrxL+SPj03N9zga6NkKyG2uN6106smWRn5F6PCyUfKdlM4cOF
zxQeLNxF7ztA+C3dM1n4Bv2tL/ytWn3N5XEa31r9mRo/UPJz1TL1T9O1VyQb
oPvHq/+17psr2QVqO0h+ga5t4bckP0r9NySfJNkS/a0k/Knarnr+OMmXqF+Z
OeDbytbdE3TtRt0/WPJJ6n+na/Mlq6V7PkO/1RbqWvvC8/mM+mMkX6j2S2qd
uk/3P5L5Gv371SapHSjZLF0fpOs11V7T+H7MiWT99bxx6n+la3Mk61B4vV8U
Hs/759aHy3T/scJV1DZI1lLXJki2f/D8MY//6t5zg/fW9mpz1L9XrVmFnqvv
uEX3nqN7Bkm2IvP7n5V7PZYJjxK+THgUcyF8nPDZwgOFlwuPFm6m5+0hfL1+
7x/9XqprN6u/p64drbHns0fVv1Ljx0rWAqOg339Tf/rq2sWSj1D/msz74UU9
7wjJc7V16j+t1kb9HdTuVH+S7u+q/ju6Zwf1f9NvXqzf21m4F/om/CR9ye7V
8y5hD7P3M9uDhZI/Jdxb8vuEL5R8mPBVko8TrqPrX/Bs9oCeu1G/2VS/t43a
rep317ha6ge1yhq7TPeP1tibMuvXcuExwisz79dFwh2FLxHeVfgJPaOV7q2m
tl79K3Lr72rJp0q+Qnis8M2Z98OjGtNCY7dTu0P9y3PrxyrJp0i+Z7A9xa7+
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
mwufkdk/TxbeV3hu5v2RkRMJpyXHF/iA9vFb8A3sUfwz3BZ7lxyd3PjkzLn7
FWrNMtswFI98YFd1J+laxt7VtR1Z39T61C44Hrg79fsP1vidhMdrfIXwCOHa
wlOEc2y9cE3h44VL7PfczxuH0pfNZ8AN4A/2U78p/lj9q1Lvp+4l56pHqs0u
eT22YI/xwdg18vXE/AfrWRFs2wh48f8pPgeTU3K8B8dBfHNpZu6Db8a2/Zd5
LroK9xV+JfX6dRbuJvxsav1mv34s3F7vM5a4Mpg7eTV1ft2FHF34udT6MT84
nx+TmZ9oEjw/V6S2R42CuYMLUu/3lsHrz/5j/uEwkE/IzG0cJHkT4VslD8Qn
Jcf2xPj7qtMqWJ/WpJ7vA4P347rU6zEwd74+Vs/7j9wuN19zknCBvQvWr7Xw
VMIjc6/H1My/11jyWsIrUtvftsH75a7U9rNNsL7emfp5+wav/7LU9g6OZBvh
oZm5k72D9ee81PZsn2D9Y/9iLw8Its83pn7f5sH756bU+jM89/tMzvy+cLSr
0pjDspeD9X1lav2EgyVf2qfCOdC3GnO58Dfqd5a8kVopM78HX/ad2hX4J13r
UvYzeBbvgO6TA5MLw5HB5cARwS20jvkR78i78g3oPpwMXCocF1wN+SZcGfHc
/MI6Ao9BfIPuoCPoCt+IL2NPsDfQIXwPa8xaozPsNeboxshhstZ1gvkqciBy
Ifgr4rcj4rVT1N5OHB/MLJljwT6vT829DNB395KsitqOkp+kNox8Q22C+vNL
jrWIL09Tv5/Gd4v8GfzY+JLjR+6Zrv5RkveIfFZ14RlqbyWOH04uOd8lV0fn
FhT+Pbi6jvF+clByUThPuEA4Q/Y+NgAuEQ4HLgeOAu4PTg+uGw4Yrg8dQbfZ
I+jOJjgCPbu+Wt0Yn6IX6McG4p/gPjpDrk2+wFzsr3Z/cL5QrvAzNgfzXdin
vYXvCs5PieOI5x4OzonJjeHgiE+xz8RS+P9zsEXBz26gVo/7g+8lJtwtON4e
XjInCDf4WHDsRw67e/CeWRrjAfw5PoRYhJgE38IeZa+yR4l92JPsTfYcsQk2
HdvOnsZXsYfZy+gEtgIbgi3BRmDr4cjghuHg4c6wCdgG9jyxGjYMW0ZMgW8h
f7kjdUxwerBNwZZho7A16By6R7x4WmGfg+/BZhHbzNG3f5h4DueWHPNOqHAM
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
7e25uWtar0Q+hvySa9i6KzKP/T/db6GQ
          "]], Polygon3DBox[CompressedData["
1:eJwt13fcjvUaAPCHV+/redLQOSVOKUnDzk6ioVBESPbMDk17j9fKysyITmUV
DYWiNMxORX0KLY3T0LA6IQrne33u94+L+/re1+++n+d+79/1+z0lOvdr2jd/
KpX6UJwlSqdTqbZZqdQM+LholkmlyrEH2Yvy02pm5aRS94jNLNf5Tdmp1Fti
IatZIJVqIormS6VWyReL2vK7RTG2Wj5VHHedsmFihOtXErmut8491otWrttW
3fvslHxofEb3aM12sMnO75C/J65hrdkUdQ5TjVg1B33YfPYv1p41Z2+zscZu
kG8Uw923cHw+vlvdxfEd2Gz5VmO3iU7qB7D86m7hm9TlV/coS7Gb2BsO4+bD
2PnxDNinqAirInrIp7tWEdbafQepy1FXj2+JoWr6s3zsZvYmy8euFq3i+xpr
WKqhfwaqy1Z3O9/MCqqpJLrJH1N3IWuprjLrzqayi1gr1oDNinuyumw8a8P+
w/5mQ9gHrCnbxEb77uvk60Vd930mvpe63aK3c2XVdWRPyAsZ21RdOdaJLWDn
sGasDOvA5rKz2d2sPOvMFrFzWXNWld3P5rFirB27lrVh01hBdhdrwt5gI32G
NfJXRGnWns1Wh1NN2FCf+TzPqjH/hF2kZjAryOrH35il2RCWZg3YNpZhs3OS
9z3e+1LOjYt3OWrVPM9KO9fHPeqwoWwVK8P6spviXWCrWVnWj93MhrMXWDn2
AGvHPmCn2TC2k7VnH7IzbDjbxVqx7WySL7ZNvl3cysayV9VVUTeANWYb2Qh1
L8lfFl19t49YfpEV88S5Mqyn45nGzhLNWa14p9nS+L6u18PYG9gj7Fl2JevO
box3lS1jV7Ge7DY2mW1kNdkwdjt7LOYGu4ENZ9ezB9gSVpx1YnexDWy4z7BK
vlpUZ33ZQnWXqOvAWrJtbKK6LfKtoh6bEvNFXS11I9jd7E02St2r8rXiFjaG
vaKusrr+rD6bGXOI3cpy473yXNaw79kPYoBr1FDXjz0pv1Rdx5gLbBxby6qy
gawF28LGG/O2/B1xn+u9xzJigrr32VJ1Db1Pt7F32TJ5VXWT5O+5Xj02JJ4B
m8Z2skZsZPQ1NpV9yBqyUdnJ37IXW8GWi/zu34cdYpeLEjEnWBU20fEONbcb
Ozj+HmwG+4g1ZmOib7AJbDu7jQ1id/iMC9j77A42Jd5xdU+yfawtmxbvJHuK
fcs6sJmsBpvOdrG72OjspN+Pz0r6a/TZf2aS/vJsVvLc4/kXZz3YN6ywuCB6
aPQc1tvxSjVXu16bePbsdXYy/mbsOVaBDcxK1pNYVwoZW5ENYq/Jq6nrpe46
Npi9zqqz3uxt33dn9DN/p87inZykx0SvaZ1O3q8rM8m7Gu9sy3Qy767IJH0s
+lk548qL0c6NEdc5riS2O3e26zVn6435030fZSuMG8eqq+khbrVeFou1lr2m
7oS6/upWqmvG1rHj7BG2nI1llY2rIvawosa+yF8Q96aTOVbC56vjeJHjr4xt
o2569Ca2mH3N2rEZ7E7jF7IP2J1sKuuu7nNWLHo0+5xtFu+KTulkfpZ1j36O
f3dcKfqdut+zk3fysLyiqCAaqOvLjji+LnqluiN58zrmd+d00vPKZZK5FHOq
I9vKymSSvvZx3nsR70dV1o195rhorDWu94Uxr4vXotemk/X/anWPOD6d9zni
8yzMJD01emuXdLLHKJ9J9jWxv+mQTuZ2afaw45OOa8a75R5/Of8QOyG/PvYw
7CR7gB2XV48ezU6wB9mf8hrRO9if0U/ZE/LPPOcWbFL0XTaX7YnezCZkJ/uS
OVnJ2htrcDGfpTabzz6X36tucvQ6toR9w9qzx1ktNo/tZfewiXlrQ6wRrdLJ
Wloyk/TK6Jlt0sn6X4rtykn2bnfI+3i3dsYa7fwv8TzEctf7NTuZq9/m9Zvo
OzcZ25N9F/NCLFb3nbre7Gf5tbGGsJ9ZL7Zffk2sP+yXvD1H7D3aOvcWv8r1
mjpe6/iY7/Fw9M7o9+xVdpQ9xJbm9fFX2B/sf+JyY7v43LtZjhinbk+sjWyv
PB19m33GurEv5IXEZPZVvIvsU3m2GMt2R29ne+QFRS7bG+8BOyi/LNYLdjj2
eqyA51aVrYl9duxBxFmsWqxJLDvWWXE0vqd4hh0zdj6roe7GWFvZAvkacX78
PXgXMTn6kdo3Yu+QTvbl1/q+82Jdcb6WfIOxT8Q+VHwlP1dMYV8b8yg7FvNC
PMuOxzxju+T5xEj2ccxv9on8LDGGfRp/N/a1/HwxjX0b85z9KC8S6w77KfpP
TjJvJ2SSXhE9ozf7nl0oZqr7gd3PfpBfJGaxH2Mesd/kl8Y8ZQdZX/aT/GIx
h+1n/div8kvEAnYg+hX7Un6OeIztY7msguOXYv/i+YyXTxAV2cuxprCJ8p5i
n3HnianOfRPzlx2QFxeL2KHoDbFWyFNihP8+ylt7BmQl63Gsyy2ib6j7I+aU
eFrdUXUD2N/R48Tz7HTsm4xdJv/JuPvYvFh/2fPsN9aLLY7+zFaxA7EXZ0+y
jbEf9/kbZiW/6TbIG6t7SX5EXT/2dOzX2FL2I+vC5sY+jL3IDrO+7N9sSU7y
2yZ+49Rx3afkDdStlP+irnu8k+oK5yT3KxS/h0Sumgvy1tBz4ndTPOfYV4i6
sfcpkJyLmvpshev97Hrd2HzXK88eykr+RvG3Gq2uHlvO9rOu8T6rG8hPRa8W
q9gZtjwn+V0Uv48auc+K2G8Zu1p+0Nj7nVuSnfzWbZeV7H9jH3xM3kjtc+xL
eWt1i9QVZyXNtw6u1V5MUtef/aWurHhO3ansZE05E89J1BZN/M0bsRccH3K9
PuqeUjfF2P/GvsW12sa7Fv0tfjM5bpSVPJdN8hZq/+G4OL9MjFTXkD+t5pP4
be7cnNjfxnxzXEFNO7FO3iwn6ZljMsnaF2tgV3GFupJqrhSjXK+UupbqyhRI
fpPHb/OKomvMtwLJ/eNz/B9DLg90
          "]], 
         Polygon3DBox[{{1949, 1083, 830, 831, 1084, 1950}}]}],
       Lighting->Automatic]}, 
     {RGBColor[0, 0, 1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
GM9Tir/Vzvp7tkvzjt5rx3T9KCc+m7E+0N+fTPOT1nv7/5ez9L5aFvP70Ht5
upg/1y3Np7/k7Ee+Dp7TOWPfonel9XFlyl3Td9chfXdN0pzcLX2Gzuk71/U1
p0vGer11On5v+q71N+3PHdz3HeVQ7rs1Zx0yGd6Ss/aYBO/P2QfNDH6HN2vN
82625ex3pijH5eyJpsIrcvZo3wTvs47pOlyesy8bzfhlRV5H8oZt0+/WMv1+
T6fft0v6nPqO+3L2Uz/x2ZrB61brt1Kwhl9K3zM49v4izQIfDS/LO452ZU5v
ft8kWOcvpI/BOn8Rfa/gXL+c+a8H7xft+27RunMp4x8Ex5b18JtwdXiFNEtw
/F8CvxicIxbDCZ87Hj5XsYXxb7jXz7oPbaryuOYG+4XF9Adz9n1z4EywTpBe
KAz2GvPpiwd7kHn0tYJ90C/0dWk/6x3rWYK90hL6bLA3WRCcz84ucn4+kLNX
ms34Pzl721nwIfhj6Z/gvaW4rryt/H1WkfP5kcF6Sbppb87edgZja3L2pN/C
q3P25mPh84M18Cr6psEaeCX9XcE6c5vydbB+kI64O1iLbqe/MNjjrKa/M1if
b6W/ONjvrKG/mbZbeob+imA/NZfrXBbsp9bRXxrsidbSNw7W0iukGYL9iHTF
bcHeZ7N0RXAOlWZoTyudsQ55QHEB3q06RrC3+oP+kWAftJf+4WCvsYe+VbAn
kia5L9h/7aK/N9hP7aS/J1gnSC88HeyDpG1Oiq4RSAO0DvZT0jktg/2UtE2L
YB+3g75dcLySdro92NP9Tn9HsMfZQn9TsJf8lb6P7sH8HNd/IzjHac33DvYO
RfINwXq+UPk52Gtk4dNSDSO9uSlnbzuBsbZZ64DTuc6qnGsyYxhfm3Md47tg
fS+dP07rImcf9KPWRc6+eCLcI9ibFOdendP9qDzWJdjfFTDeNdgbFpM/C/Z6
itvXBfvWjfTXBPvlDfRXBXvq9fQ3BHvYTfQdg73kYfr3g/fsOuXVYL/5L/1H
wV4vYbwbXA3OyLsEe708/KnWJRzhD4NzmTxZv2C/FvLWRRcwVo3ftn+w3tjA
WN9g/bASHhCsMTbC1YL9yBD42mAtOgWuHOw1BsHnRftJaWlp6g8Ve4l1Vwd7
lsmMXx+sD6fCTYK1/fd57xPtl2L0d0RrUo1dzpxV+l2Yc2Ww/p8E3xisV6fB
f+Xs7/rqOwV7jfHwn4z3hvvAm3OOvb3gKswZozwLVwz2UB/CFYI91EC4dLD+
eR8uExwDFWfKB3u9AYyXg0fA/fPW8hMUVwutnXXfj+GG0bVCaemqwd5wMFws
WAMorl4dXbuRF5CmVW5sqjpZsP+awPglwd5qInwrvBGeDjcM9lBj4bOCvdW3
8JnBHmoMfFKw3h4BNwj2a6PhM4I93Tfw6fBc5X1pw2ANNjLVrdIP0nMTsv4t
dvO9Tg3Ofdp3pwTrtFH6XaLrYl/BJwbrpS/hesH6/wt4RNb32sB1agTHcOXQ
RsEecJzWUrAP/QFeJe8Fl6b/b3R9agbjzdMYq3hVPdhHD2W8VLAOfA8+Ptir
DofPgRdr72sdRtfyPtZeCP7tPoFrB+vST1VXCfbFn8H14Wl6Tmn4YA81LG+d
1S7VVM2ia7Xyj0XB6/8teFCwf9kE35u1flWNeWAa67Q3D2StE06ifyrY287L
uxahtdCba7fgb48xfmmRtfWj8CVFrrVK5zVLa93N0zmqgd+ZzpGfkQZULVa6
U2tPOfg57pUwviD1Jrqmrv18cB5UrHs2uo42n7+/HewpVsPvBHuTNfBbwR5k
lXxVdD1oLXw0fUPpKD7fPdir/sz4C3AZeBHcNs07yrlPBHv5uXq3cAaeA2/L
+jmr0beLrhPNYrxN8NqYDXcKrm8szLsmJh0nLS/fqPeveCf9LR0uDaEasWr+
0viqs6nvGa3pVfuVxlddSDpTerNm3tpe3rxG3u9T7/WFQmt45ZoHg33xTP6e
C/Ysb8MhuBb0DlwiuBbUDy4ZXAt6V/oQ3iNtqXhSaC8gfaualXyE6gOqg+m5
Xuc5uxfal+ic4vNg/7iDvw8L9qTb4OHBvm87PDjYO/+ad+1LfuONaL+h+rD+
r/qHYtpUeepgP7tTOTe6nrgl73eqdysP9XGwF/6d8aHBfnkzPCTYv/+mPci8
S+Db5c+C18NW5cromqzyXd90fcs/do2uqyq/Xxp9hiHdeEN0rVza8iZ4Wtba
6ZLosw3p0v/A07PWdedG176lCRtFn1XII5wTXd+U1zgr+sxG/uLs6LMc+Y7G
0Wce8hE3wzOy1o3XRdfWpXWvja7RSz/r99Dvotr+ZdHnNNL2l0efB0jba21p
jens6aXoGqXydY/oOqly+ivRdVXl7muizwPkKZpE1+7lO16Mrpkqj/eK1jo6
X3gtOr7IS54Zff4kPXNx9JmNtPpF0edG0tVbE9fsFLe7R9espbV+TVyPU6zb
krgOqFywKXH9TrH0gei6vzTwQ9G1funkh6PPDKQDNyeuJyr+/564Dqgc9GD0
OYH09gvRtXVpv42Ja4KKqxsS1wEVe8+PrkHLF1wQXaeWX7gw+qxLPuXI6JqL
fFbp6LqJfND6xLVLxfN1ieuVivOrEtehlIubRp+FyFeuTlyDkM5Zk7gGoZyy
PXH9UflRe0Z7RWdtV0Sfk8lPqbarmoM8Stk0VihmlEljhWKG6tXy2aon/5S4
riF90if6vEG1teOjz8O0Z0+IPq/Svq4TfUalvdMg+oxKWve46DMz7fe60Wdd
2rM6C1BtQHUnnR2oZqC60y3M+SlrL5OJzq/Kp0l0HlKc7xJ9biG9fTs8O2v/
chs8K2v/cis8M2vvk42O0YrJUxPX3KW16kWfraqe8E9iTSdtty2xnpBOWJtY
EygX148+l5U3PzH6rFT+fWbiero03jHRdTdp4xrRZ3iKabWjY41iVPXoc0Hl
3KrRtTnp2CrRtTZp3crRdTH56Kuiz9LkVY+KrsHJv1eKzmHKZWdEn9fKF1wZ
fQ4nv3x/9PmKfE3Z6Nqc/Hv56HqltPSp0ee78qSnRZ8ry4OcHn2uLA9SJtqr
y+OfEn0GLN96cvS5rPzLsdFnqIq3FaLrpMq55aLrpKoDHB1do1RerhV9zqqY
XDP6DFUxuWX0uZo8YMXoWqdy+srEdS7p+TsZn5e1T/mX8UVZ6/bi0TV35ami
6HMF5d+DzJmftT7/O/GakV4tFl0vll69K3qOfFAuun6t/F4YXdNX3mwbfRYo
D7sj8ZmH9OovievX0ucLE59zKG/uSlx3ltZdlPgMRrl1WeKzDWn1pYlrjtLq
8xOflygv/5z4rEVacXHi8xhp/hBdZ5cOyUfX1qXHdiauxUszl4yuvUrPHEj8
ruRT7ol+V/K290afmcnLt44+Q5Vn/y3x2Yb0cHPGF2btAfcn3pvSvX8krstL
2/+VeN/JCxyCF2Ttp0pF13lV59mduBYv/b83cR6Ulo7R5wHSeEdEnydJI5WI
rhdLgxXAP2ftp3QupVqm6i6HEz+bvN7d0feVn92XOCfKu/2ZOA7Ic+1JnJel
sVuk11Q9pE30ma5qEZ2jz1nlqVtFn+OqdtEp+sxAPvq56DNa+evlic+c5NE6
Rp/vyguvSHyuIB+3IPF5mPTVfdFnnKo5zEt8Picd/kj0ubVqHc9H11Xlnf8H
W5O6Rg==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmWgHdUVhd+9zNzMvAvFPQQNrkGKu1O8pZRSKNICLQ6ltLhLcVLci7u7
u0PwECEuJGhCcOj3sebHSWadfWbuyDl7r7XOW3D3A7bbv93T03M6/xT8P7zu
6VmY41XLnp65uj09E/v09JzY6un5J3hV8DjwceBDwKuAP2L8IoxfDTw3+Bza
NVzoTMbMSuxI8NLE5mTMkVVPz/2044mdxZhliLVo33I8lr4dic1Ku53jKzln
S2LTga8Anw3eGHw27WrGn0HfLFz/B+7nQo5PI74hsR7aN8RH07cD5/7c29Pz
NXgU+LfgMYw/huODGL8SYyeDTwH/G7wGeBL4ZPC/wKuDX+Y3poJrcAEezv9t
2if07cb1/kjfz1z/Y/Am4OnAVZlz9gK/xvltnn1O+voQ+5jrn0TscPBq4FeJ
fw+eGdwBH0FbiuM5OOcIzh/O+MOI/52+FXzf4H+C9wUPAI8AHw7eD7wieCz4
WPDB4JXBT3CNs8H/K/K8R9N/J8eX0jcHv/0t4wdyfDL96xF/lPF78Nt70uYj
vhv9JzB+F/Bidd759hwfWOZb/If2B989fTdy7j60r7jeOPoOILZBp6dnO47X
Ir4o5z5Y5fkv4JrLE3+oyvu+qMjz/YoxWzN2D845E7y91wH/jbYA1zqevtXp
6w8+nXO7tOs9n74tiB3XzVx0Tp5W5Z5W9rc7udeF61zr77T+HJ9A3xqMXxT8
H8b20q7jehfStzmxgbQTubfdiC/O+AeqrIeB9C1HbG7wveDrGb81eB7wfeAb
wNuAz6Kdytij6ZuR8+enbcu1DqEtwfG5xO8ifhnxOX2/nH8bx1dw/m+IHcD/
VxHfm/EL1pmDzkXfse/ad3Qy8aNaeXcFfVdyfA5jNiHWBl/uegNvBD6PdgXj
T6Xvc8bPTduSax/UfN+a8df6fRi/GWMfqTL2siLza17GbMXYg5v38XCV9XNJ
kfn4Ln2zGuP8GcHfM78uIH4qeAPwEOILEF8ZPDt4f9ocHPfQ9xeu9Q/wQuDp
vSfwYX4z8Az+Jvif4EXAv/Idgv8NXtJrgf8N/pTjBWld5yh4P+Kzg3/mHvYE
H+QzuNacA+CDwX1dm+B9wbuBO+DPGb89+A3fKbG56auJ/Yu2BMez0fcv4ruD
+4C/YPzvwIeA5wNXxPcDf+A75ng5+mYhti9tNo5/YvwexAcTn4f48vTNSuxD
8LzgFfwN8N6uCY6/ZfwujH+rzrP5jNMTGwTudW34zN2sOe/Ve3Z+/AXcBU/j
/D+C/wqeHvw1eGfXejOfpjb5d09wbzO/dgL/DTwL+Icm3w3l9xbk2quYo4i9
V+dd+E5mAh/oGuC4dM0y/nBwf+cC+FDwO85x55rfkNgw8ELgX1sjwHvRZuD4
G37vT4x/m/jMrl/nALEXyec3MNfOI/41c+s72n85PoX4+k1+NpeaU//M+b9r
6ssY8FpVcvJ0XG9MmVz9p27y+WTiWxDbEfwD48eD1wP/3jkMHgdep8o7sla9
V+bd7UorOP6Uvq2J/Rlcgj8Dbwt+neOW85u2czdz3Lkyuszc34n2E9efSN9G
xD7pk/V2BPE1uzn/O5558yr3N4X4WcSPMacS/wp8Dvg48DrmYtqPXG8CfRsw
fmqf5P9jia/dzTf1Wd4v862f5drnMf4E+iYwdvcqzzKC+N+7+Qbe24dlvo1z
0Fo3pMzcdA75W4PLzK0XuN7KndTnL7jeEsSf5fh+4tsT34H2XVPv1yD2DOPP
AR8KHsr4heh7jOPbGb9tN/cwK8c/tnJvzzN+JXM5+LM+WUO+65Fl1pZr3LU7
qszaf73O957LNdnNHLZ2f1Rmbv+aa/3BtUK7vcga8dt/UGbtvMT5U1qp6c6X
n8qsTdfosVVygHN9WpncsCHX29e1T9uI4+Vo+zsXwWtyvDztAJ8FvBbHv+Wc
L/jdofQNsPbQ1iO2ELEFiV0LXtf1Dl4AvB1tFONfY/zCxJalfz/XCmPW6GRN
XA0+ocxa2dRvzPg76CutDbTVGduXsfMRuwG8AXgR8MK+D9r1jD+X8eO51lXE
15ALEO9nDLw+eGHwQuDLwL82P4LnsbaAVwPPC+4Lvhy8Knge8LxyM655Ddc+
kft7iftbgfgQ8KPgSeAFwC+DbwEP7019fQZ8HfhD8CKuKfCd4BHgucBPg68F
DwYvBX4P/AB4HHh58IfgR8Afg5cBvw9+EDwevKw5GvwQeAK45B5navLHAcTm
pD0lf6LvA+J9wS+AbwQPAb9He473dSd9sxObn/YSxzcTH0ZsMm10kXtekdiC
tFc4vpX4R8ReK/P9vyyyzuUrcqn+vK9FuJd+4BcZfxPjhvYm/5ir3y3Dnftb
o8B3gUcSvx28OecvzflLEB/M+z6I+F+IL+16YMz9ReZIR34KXq0T/tGqco/D
OH6izL3LoeRSZSf5/dQq+qDopL67Zs0de5dZyxd5DeKzdaIfTqpSL9qd5O+z
wUuCp++k3p0DXgo8Qyf1biB4efDMnfCDC8ArgGfppN6cBV4C3O2knl4IHgCe
tZP6cUyVevpDUw/PBC8O7iU+czdr1rX7Y1M/B3TCnfaibz2OV6Ad6fsCr8vx
KVXq03Sd1KtlaecW0TBDePZXepNDLgH/ZC4mX/yunRxlrlqX8fcx/iri04jf
YR4nvgzxJa339B1M7K9l9NBtxDcjvhTxxcG3gjcFLwlerJs5/w7Xe6KVtXAz
bWP5FvH+xI+uwje+53q94IvBK4Fn70Sfvcr5q3bC/3uI3ULbxPpN36Ld1ABr
6z/K1IYPwAfKncBL+ew83w7t5HhzvfrwfOKHEX+uN/n+bfB94LHgRcFvgu8G
jwIvBh4Evgc8ujecy1o/sQwXkyPIBb8swx3kaHKVCWW42ym0zco8k892MngD
3x34PLkqePMynP8S8HFVuOPP9B3djQaVm31bRpvKUeRG48twF/XRKp3o1y+d
21W4S4u+Y7vhpNaiz8pwVTme3OzjMtxPjiq3+7wMd5Wjyj2/KMNdd6FNV6YG
bUns+CpctofrH9MNh5Wbfl2G26oB5abflNGGp3ejp9ak7+oq88z59lfalcyL
X4HXK7OmXFtn1tEam9J/fjfPsBLxfu08m7+5Ini+du7FdzQA3LeddyfHl+vv
XkYLPcFv3CyXpO8M+k6ib31zC/hcxj9O/Ca5o3qqzD36bebv5N778f+2ZWqK
tcX1t107+kqddTlNQ0INujaxx8A3tlKjTy/zzdV+c3QyF6x/6pedaas361d9
pV5VtzoH1HZzdjI3Dq+iT6Y2fMA185syNcy1NL/P00kO+p+1q4p38Kx52rUO
Hgl+Ro1g7qziNTwH/hLcB3wX+HzwG+AZwQ+pj8Bv9ybnWivOK5OLVwIPBz/p
nJA7gT8CPyWnBK8CHgF+Wk4JXhz8Fvhe8BjwHOAnwdeA3+9NDTI3XF2mNqnv
/wc+CfwyeCue723ey+P0zcbYmWmPqO+Iv9ubHLlsmRxi7mx3w18nN3zade/6
V4+qS635a5XJsXKBmWgPM/ZS+t5p6ofarNOJNneOONdm7GTuqOH1Ovo02n4Y
9/sPzv9bGX9AfqW++KqM/jqsin6YUsZPsUarfyaXqd1qeL2mqhNtrwZUL31S
xl/xGaztw8o82wzgB8EXg9/ifivw3eCB4Dd7o4fvAf8XPKg3OXX+Mr9prrX+
yV33KeMHPFmFj19bxH8xJ7nWZuokV8kH1c9H0Dbj+KkqXOu6In6aHEAuYA2W
86sBbivicakNijrzWQ/E9zVdnfWg5+H71bO6pYgm0svS07q1iAbX6xpeha+r
cdQ6elA3F/GA9KbkfNa2Q8twwbaeRTs5w9wxrAo/VhOpjYZW0RNyern9kCrc
Xs2l9hpdRU+Y88x9K3biH1lz9S3GVOHvaii11Of8/umt5LTZ+O0ziM/Fcc15
J3ajYe4p4gmqbUrGLNaOh+P3HlUlt6rp1HbmcHP5ju34K711vChzqPlIDXV3
EY9EbdWpk6/Wb3LbY1XO13PU7+qpM38HNPVkJPFJrXiAeoF6NK4N9cnMats6
2uLiVp5nH8bMqKYD71qF06il5RhyHTmNXoEcRq5jPh/Q5GfXjhxphSY/m9/l
UMs3ekRupSbyt12js/N7l1Z5P3NxndMYW9WpjdZQ86caTa32+3b8wDsZf2A7
Gka/To6ybVNv5C41fau0U2PNp3LMbZp8LvfsQ3zZdmryL7WZ9kgRT00vSI/2
0SKend6tmvXeIp6VWlaO5Ho4vgx30hPUG9Qz1Au9qcrvL6bG7MYjfquIZtQ7
Xo42mOOHOX8ia+nlKtzL3/C3xoO/bMWz0btxzQ5s9K9r+aUq9+Icc665Jl2b
rmm97+vr5Ms3i/D3W+rojw+K5OOb6+iF94vwm8e53m/b8Zz1nueqo9XMATNw
fGsdfTO4CF+6tk69eL2IfjCHmEvU8Hq719XJr28U0Ud6unq7ZzXXn6eO1tRD
1Q/s0jZqx6PV/+xbR3tu044fObnhL3ou6vtPqsxNPSf1vZ7wQ0VqiLVk12a+
Dy0zl++p8mx6nHqdejAPF/EQ9WburuJ9utb1KtW/3pua+CR984bfdRu9LefX
G1QzqAUmNfxQz0p/wT2Im4pwTrmnNUIvWU/W2qHGOaOIB672kbOeXuQe5bIT
G76nx6X/Ma6KH6Pnp/cnB3dvwj0OufmEKl6YHpl+z9gq/oIej17P+76TdjjI
9HU0iF6WGkltot8rNzOnzcTxR1X8FD0avRrX5BZl5rRr1Tm9U5lv5lzXP9dT
2KJZfx/S3vHZi/gpj8lDimhotbSegLX9jjJewZfgVjseq36TNV8v4KoyXOD9
Kv6M80//Wr9ZHaQeWoD7/abhzws1fPfHpl4v2fDTn5v8vHTDp90v2LiTOe5c
18MZybVfbcXb+bbhuws3/Fg/ep1O+J57D4OreBue47kfgJ/zWxTx0+Wwcln1
WT+ufxvXGVFEU6ut36jinz9VxO9+r3kf5ghzxf7N/J7EeYeCP2v4uh6TXtO7
VXLJoCL+u+/Yd62mUdtMa/RD30avfG1ObMfzlf+/A76fsa8U2Y94u8p+wMtF
9hPeqrJf8FIRf/2o5vzvOP8o8FcN35+30TtTqvhLerp6u6+Db2glh5pLv6ii
l/S49bverLJ/9nSR/bKpjZ6Yp9E3r1XJveZkc/OrVXKza9a1+0qVteuad+2X
Tf48t4yXNKiZP88U2V+4sQ7ffLeI/2DOMneZo/RCWnX4jxpDraEGlav0b/Tb
51X0kZ64/p1z4LRW9iicG3pSmzZ6T69KT2SzRt/plegxuFepR6H3IEdYs0zN
kzu8UKW2u8fiXosehl61nFRu+mkVPafHrR+op+HehZxTr0PPQu9ZzqmXMaKK
/6lnq3frHLTe7l9mbqqhtyzjeamt9Qz0utUcegmbdKKnzP/6ga6Vg5r8oX/n
3FavqWH0H+6qwpXURuovPX29/bFl9oK+l3O347Grl/XkNinjwejV6cGtU8Zz
0ZvTv3Qtz9Doux8afu470b90f0ctpgdifdLzW6/Rd+o1PcN1G32pl+j+kVrr
iFbyn/pO7iSHUvv91PDxpRr9as20dj7arFc9wbXLeDp6heov9/nco1ukjuex
VRlPUS9ET2TrMh6mXolaXe5yRsPR9LLUpvob7nNaf62N7km7N62HulEZT0lv
VY914zIekt7rd1X0vntM6nW9ErWs/s4d1sE6euG1In7cTXX013tF/A33wNwL
c0/TvVo9wleLnKN3qIZ4qKmPags9I/Wy2lYvSQ04poinpza8sI5f+mARPaIm
HFvEU1ErqgnHFfFU1IoX1anV/oa/dUEdr++BInrUe/be5Rh6i9aPkY2frP/8
E/FpRTTudq4N8FdFNOg2VTjV8CIerVxLzfl8Ec2rFtVj/ajJx3qveqrDinii
eq3yTb/NUWX8Iz3fEU19sH65f+dadE3qtejRDi3igerd6lHe0or3oHdpDjWX
3tO8TzmUtezZJl/LyeRmciy1s5p9fBENrZZX009o8rtaX894SBGPVy/5297U
V/35TatofOuBNVjtr4emH6LXobe2WZVx+rru96ipn2T8ra1obTXmY41HovbU
E3i88VT0CuTvzrUjy/iH5lRzq3NMr9c55lyTY+qtXeOedCtzzLl2eZnaZw10
L1kNrmfjO1Obn1/H37uxiP+up+77sybptQ+sw63kWPoFz1TRkmpEteKzVbSk
GlOtqQd6CHivMt7omWVyrTnXvef7qnApOZncTI4xuPke/p4eyzrtrHnX/tg6
3otr1LU6rs5adY26VuW8cl85uHsFz1XRxmpcta6ejns95ki9Hj0Da6c1VC/h
xSraUc2n9pNTfNjMF/fun3cNtaK51d5PV9HGvg+5pzV6mTKcx9oth+hXpobL
Le6twj3lnHJP15xrzzWsNzS+Tq4xR5urP62Ty9RQaqlJdbwoa4i1ZHKdWmIO
NBd+UicXmgPNhXoa7ne6P6vX8VkdLaZmU7u5J/Jisz7cK3EP44UiHod7G+aU
Bxt+XzX1Uq1szlQPOwduavwB+f/oOrXEGmAtGFOnFlgjrBV6Mv6ti3tuejXf
c/6UIh7Xb8Aj63hF5nxz/4Q6tcoab60fVacWWLOsXc7RGxu+797RxDpcQA4g
F5BTvdzMX/92Q82l9lKT6TU/VcdL8R68l+fq5Db/Jsi/DXq+jr/n3wz5t0PP
1sl15kBz4TN1/DhzoLlQvaN2OrDREz/QN7XImK2qrHn3etVI5oLH6uwvfcKY
aYx9us678BzPfaTOftUk8NTejHGsGnb9Kvx2UKNv5c+P1tm/mkzfV4y9s05u
NSebm++uk3vNqebWh8Hvgj8GTwHfVSd3m6PN1ffW2Zuy5lh73BP55W8L2tkr
eaLO/tlnxL8hPopnPqrhJ+oZ+Y9cXA9Xv+OKOv6mNcHaoIZQS+j5+LdDl9XJ
ReZEc+PoPtGHamT/XuzSOrnQnGXuerzOu/gU/HVv/gbFv0Xxb07826er68xt
c5i57Mk6Wsicbe6+o07tsAZZi9yjGNjoRfXjbcSfbyXnm/uvqrM2XDOunSvr
1DbXjGvnkjq525xt7r6vTq22JlubraHW0sfL7O3eXqeWWMOsZWqKQQ3/MT+b
r99s8pn1wW/qt3XOrFuFY8u15fT+bY+c/ukmv/u3cb4T343faMMqe16//C1I
O3thfnO/vXNsdfBDdWqdNcxa5pxz7jmn1q6imZ5q6pX5++w63ojvzHenplHb
qGn82yvnhHPDd74x+P463EROIjd5oc7fXugHul/5YJ3aa8219j5Qh7tYk63N
F9fx+62R1krryZNN/bL2/x9XvUeD
          "]], Polygon3DBox[CompressedData["
1:eJwt13m4TtUaAPDP8B3fOUdzUSjJkBDdq+gqpZQ0qesmTeiqNOsWSfMcypBZ
yJCpjJFZ1zyljEXmKVMOoigZ0u999vnjfZ71/r537WHttddeX5nmzzVsWTCV
Si0RaTE5k0q10OhUOJVqVSCV2lAklVrGOrAxrA87yVawLuwrNpAVlk8Sj7GP
2AtsvbqV7GM2kQ1iaflE8SjrwJ5n69T1yU6lerLFbALLqFnMNqaTCysgCuam
Up1Za+2u6rqJ+Tmp1AK1r7D+8vb67ne83up6sEVsPCuiZiybyvLYGlaZzRLP
sw/ZW2ynvjPYs6wfe5ltY7307c4Wsi9ZlprvRDs2ivVix9XNZy+zvqwd28fG
6DuF7WWrWRU1c8VLrBd7n+1Vt5x1ZhPYAFZI/oW+E9hOtpyVZ7PFC6wje5vt
0ncea8v6sA9YHhuk71D2I5vDiqsZzIaxtWwuO599I95iQ9nH7Ii+n6j7hH3H
prDT1fwohrMlbBIrEaYuOyuVupxXFWd5RnN4K+3O6t5Rt9vxPlU3mP3AvhcN
1PVj/dgy+TR1Z+j3g+jDvmYjWFH596I3m8GGs1x5f337s+VsOjuTfcVmsu3s
J7HP3FjBjrGLRGmR47yr1Q7QnqtmrL7nyNeKEexbNpmVlK8Svdh0NozlyLc6
3vnu91peW5RwvDV8oPY8dePUnRvHV/cZW81msfPYXnapvrfzO0R5fZfwt7WH
qeuq7ndjtZC9ygawDuwAG63vJLaHrWIV1YxiE9lutpJdyqaKp1hP1oZt1ncx
e5MNYV3YYTaFPcm6sxfZJjaNPc16s5fYFvatc+SxM8SZIu2aB7Ih2mvUzVZX
TL++rC9byqay09i34gM2kvVkxxxvKWvPRrPe7ASbzp5hn7C2bCvr6Xjd2IJ4
x0V95z2sbjfLFX+oe1reTd078uExX8Riz3wym8uOyLeou0rdFDaP/c62shqx
XrE57DDbzK5k28Vydtxx7tC+U2yLd539yepr3yquEbXEDMdY5Ld7Xd+/5XeL
+WwVe5jVll8rprOFrBH7Tnu/9sUxHy2+z/l9XaxP8lWuZaZrKSv/j2goFqj/
3m//1Xeq9vy4f3Xb1NX0+zS2gB1l29nVMU9j/MNccz3tW8RPYgU7wRpo3yW2
iCVxPHaT9s3i/+J/rLq5+obj/eR5bI51IsZP3Y3adfMj2jOzk2Pcn5v0j+PM
yk7O/0Bu8g4ez18fYp14nX3MXtMe65qfNAaXZCfXGNc6OzsZ7wdzk/m3L//d
jXe4NbtBTZ24zuzkmu5jt8tvE3Oyk+fXhF0vv058zRazxmxDJnkOv+Ukz++a
/Gccz3pudjI+TXOTsYkxmsdWsmZsYyZ51odzkuPG8TdlkmMfyUmuKa5tvZjM
1ru3BcavUswpxznCKopz3G9btpT9Jq8Q6yZ7KdaIWIviGem7R9+H5IdiXrIs
cYg9Jv81nqe8iPiVtZDvFxvkp/TNY83kB2P+xnsrDrJH5X+Jo/JSIuO8r8l/
iTkjLyx+UfeIfFcmmXen3Ns92o1EXsxVdtI5flbXRH5C/B5rYVyj470iPyn+
kJeMa2Svyndmkvfir5xkXsf83iPWsGOOt8vxHpD/HN+VeAfZbvZgvPfxbYi9
gOdwr3Zj0dX4vc7Gqesba6z8QMxpVkgcYM3lv8W9xLsW85c9lX8vcU8Ls5Pj
NnfcRdqrY0xifqi73+87MsnzP5mTvNvxjn+jbgcrLgq6tyfYMnZYfqk4m7WJ
MY5xjecd9+x4L8hPiT/lF4psda/Lj8Uzlp8X98dax9jFXJCfHmOjb0v58Xju
8mKigLoX41jxjOXnxnNS10p+JMZVXjTef/ZMvOOub6f8/BgbfR+PZxZjLT8t
1jZ1z2aSPdem/LU+1vwnjUseu8xa8JC8nr4j1aXYKXnZuEb2Tsw/VlldU1af
jc4k63hX+aT4roplOcl+KvZV16m9XhyMPYQorn1NjKG+/fTNYaVZ3Vg72Ges
LKumfRO70W/l5LmigvZtrIbfvlA3XjSX38IfZiXUZEQxea1451hfNelwViXG
hnVkWewMVj3WHNaNFWFnsitjLWLdWWFWhFWOucA+YgVYKq4rxo+9ywqyAqx8
jCt7jxViWaxSPE/2Ycxbdh6rH2sv68NGsHHpZM8Ue6etxm8imx1zVL7JOFZX
N4F9He8uW8+uYJ+z8WxHjDsrx0ayr9gutoJVYF+y6Ww/W8uqsnFsGtvHfmSX
syHsC7aRLWKl4rziEVbbdTd3zaVi3yM+ZxvULVR3oZqhbCTbFN9odlEm2a/N
ivWLHRL35Cb7xEHp5Jsf3/417nc8mxHvs3ydvtX0Hc5Gsy1sCbuYDWOj2Gb2
DSudP35fppP9YOwLGzpHR/Y46xL7XTHPOTazc93DLfyf7qO3vhvZ2exmdgXr
EWsBOyGvJi5gb2SSPXBOVrIfjH3he86xk5Vh98ivVzck1vWYq+y6+A6wTrGW
sqLxHrDLWOdMsk+syB6M76foGHtMlmZXxzunrr26fawSaxLznI2K95mVZ/ex
umwEO8CqsGbsVjYm1iV2ebwb7DY2NtZIdglrxOqwobHusrLsXnYDGxZrCyvH
Gsc7yIazTqylfKDxbMEui3VEnKOuHv8H66VuNSvMarJLWLv4xrCC7Cp2Mfsg
vm2sFLuL/YsNiLWYXcjuZrXYQNaFtZF/Hv8HPfM91pZtrIS6O3lNdf3ju8jO
ykrWjVg/esY3lZVkDdjV7NP4xrBCrAYrw97PJHv+C7KSPXvs3Tt4Ht3Ze9pT
nHew8/7hvKvYyZgr8S3U981MMteeSCf/VeM/a1V917PTHK8Or6SuSyb5X/ti
OtnDxl62Zm6yt303naybsX7WYT3Y+2yq/DPnPeq8+2LPEd8Ytpc1lf8NMIU/
mg==
          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0r1PU1EYwOFXKhUV0UEdQWFhqbMDNQwmJljLh7SDncSEpJJYdYLJOBVC
/EygMcYwwUBMdMC/QBeNk19YC4KbcTMxId18TsLw9vmdm3vPvSfp2anaxK0D
EfHYnBepc37+cSQbcYLD1iXdp2/wHO8yz/sspOdZ4Qpv8hVfmzn9kfNsscE/
XGObb9h1KOId13nSuyrms3WJ/aaYifhiPcqvHOM3jnOTE/zO6sGIi+5v6hl9
Sf/QNT2ir7qvZV3Qk3pLX0ln09u6qMv6p77tmVHrHX1Hj+nddG49rn/paZ4y
eTPg2z+5diZd0291lhvcc85V/uYym6zzA9+bWf2SVb7gNT7kZd7jUPoe5nid
vXxk7zbL3neckzxtVjoietI+PMbn7OYzHmWDR7jEw3zKJ6Yr7UnbxgN6TSyy
kwt07Kgzk85tccG7LGNQ/93/7/wHptJDwQ==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LlFEYBuBnhsoEEVuHVAs3IblWKvvSmmqVNtPoVCISgc2MfcyMNVTa
hzJGKMhQg7Rpo8tW9QvyFxjts7WIraOuFxc31/1szuE5nBOT5RulVEQsSi0d
8cBQ5V352RZRNz/Xf+lL+i5b/McNdh6O+MZubrKXP3iaZ+S3nucf3mfaWTUe
4QKPs8k+9rRHTPOVnJWXUpaRgxGDHOU53uR5ZnmBOV7kLV5inkMc47gM6wVe
5m1e4R1mkj15lRO8xqFDEUW+lusyJzPyJdmHn3mKqzzGN+xihSne455dc8zK
tt7PLZ7kdx7lV3ZwnX+95UfusJG8pXeYcta8PDO/YEk+HYh4al7jLFus8QOr
bLLCVT7hCpflsf6ej/iOD9ngDBdZ5lsmHyFj/7q7ivqAXkjv/4v/N9I/aA==

       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1610, 1915, 1931, 1973, 855, 1930, 1916, 1933, 2441, 2738, 
       1828, 1932, 1917, 2545, 1829, 1934, 2431, 2546, 1830, 1611, 2547, 1831,
        1612, 2548, 1832, 1613, 2549, 1833, 1614, 2550, 2346, 2643, 1615, 
       2551, 1834, 1616, 2552, 1835, 1617, 2553, 1836, 1618, 2554, 1837, 1619,
        2555, 1838, 1620, 2434, 2556, 1839, 1935}], 
      Line3DBox[{1621, 1918, 1937, 1974, 1975, 2751, 1936, 1919, 1939, 868, 
       1938, 1920, 2557, 1840, 1622, 2432, 2558, 1841, 1623, 2559, 1842, 1624,
        2560, 1843, 1625, 2561, 1844, 1626, 2562, 2347, 2644, 1627, 2348, 
       2645, 1628, 2563, 1845, 1629, 2564, 1846, 1630, 2565, 1847, 1631, 2566,
        1848, 1632, 2567, 1849, 1633}], 
      Line3DBox[{1635, 1921, 1940, 2349, 2733, 1634, 1922, 2350, 2734, 1636, 
       1923, 883, 1637, 2433, 2568, 1850, 1638, 2569, 1851, 1639, 2570, 1852, 
       1640, 2571, 1853, 1641, 2572, 2351, 2646, 1642, 2352, 2647, 1643, 2353,
        2648, 1644, 2573, 1854, 1645, 2574, 1855, 1646, 2575, 1856, 1647, 
       2576, 1857, 1648}], 
      Line3DBox[{1650, 1924, 1941, 1925, 2735, 1649, 1926, 1927, 2736, 1651, 
       1928, 1929, 2737, 1652, 898, 1653, 2577, 1858, 1654, 2578, 1859, 1655, 
       2579, 1860, 1656, 2580, 2354, 2649, 1657, 2355, 2650, 1658, 2356, 2651,
        1659, 2357, 2652, 1660, 2581, 1861, 1661, 2582, 1862, 1662, 2583, 
       1863, 1663}], 
      Line3DBox[{1665, 2358, 2653, 1664, 2359, 2654, 1666, 2360, 2655, 1667, 
       2361, 2656, 1668, 914, 1669, 2584, 1864, 1670, 2585, 1865, 1671, 2586, 
       2362, 2657, 1672, 2363, 2658, 1673, 2364, 2659, 1674, 2365, 2660, 1675,
        2366, 2661, 1676, 2587, 1866, 1677, 2588, 1867, 1678}], 
      Line3DBox[{1680, 2367, 2662, 1679, 2368, 2663, 1681, 2369, 2664, 1682, 
       2370, 2665, 1683, 2371, 2666, 1684, 930, 1685, 2589, 1868, 1686, 2590, 
       2372, 2667, 1687, 2373, 2668, 1688, 2374, 2669, 1689, 2375, 2670, 1690,
        2376, 2671, 1691, 2377, 2672, 1692, 2591, 1869, 1693}], 
      Line3DBox[{1695, 2378, 2673, 1694, 2379, 2674, 1696, 2380, 2675, 1697, 
       2381, 2676, 1698, 2382, 2677, 1699, 2383, 2678, 1700, 946, 1701, 2592, 
       2384, 2679, 1702, 2385, 2680, 1703, 2386, 2681, 1704, 2387, 2682, 1705,
        2388, 2683, 1706, 2389, 2684, 1707, 2390, 2685, 1708}], 
      Line3DBox[{1712, 2593, 1870, 1710, 2594, 1871, 1714, 2595, 1872, 1716, 
       2596, 1873, 1718, 2597, 1874, 1720, 2598, 1875, 1722, 2599, 1876, 1724,
        2600, 963, 1726, 2601, 1877, 1728, 2602, 1878, 1730, 2603, 1879, 1732,
        2604, 1880, 1734, 2605, 1881, 1736, 2606, 1882, 1738}], 
      Line3DBox[{1737, 2699, 2403, 1735, 2698, 2402, 1733, 2697, 2401, 1731, 
       2696, 2400, 1729, 2695, 2399, 1727, 2694, 2398, 1725, 2693, 962, 1723, 
       2692, 2397, 1721, 2691, 2396, 1719, 2690, 2395, 1717, 2689, 2394, 1715,
        2688, 2393, 1713, 2687, 2392, 1709, 2686, 2391, 1711}], 
      Line3DBox[{1740, 2404, 2700, 1739, 2607, 1883, 1741, 2608, 1884, 1742, 
       2609, 1885, 1743, 2610, 1886, 1744, 2611, 1887, 1745, 2612, 1888, 1746,
        2613, 2405, 2701, 1747, 979, 1748, 2614, 1889, 1749, 2615, 1890, 1750,
        2616, 1891, 1751, 2617, 1892, 1752, 2618, 1893, 1753}], 
      Line3DBox[{1755, 2406, 2702, 1754, 2407, 2703, 1756, 2619, 1894, 1757, 
       2620, 1895, 1758, 2621, 1896, 1759, 2622, 1897, 1760, 2623, 1898, 1761,
        2624, 2408, 2704, 1762, 2409, 2705, 1763, 995, 1764, 2625, 1899, 1765,
        2626, 1900, 1766, 2627, 1901, 1767, 2628, 1902, 1768}], 
      Line3DBox[{1770, 2410, 2706, 1769, 2411, 2707, 1771, 2412, 2708, 1772, 
       2629, 1903, 1773, 2630, 1904, 1774, 2631, 1905, 1775, 2632, 1906, 1776,
        2633, 2413, 2709, 1777, 2414, 2710, 1778, 2415, 2711, 1779, 1011, 
       1780, 2634, 1907, 1781, 2635, 1908, 1782, 2636, 1909, 1783}], 
      Line3DBox[{1785, 2416, 2712, 1784, 2417, 2713, 1786, 2418, 2714, 1787, 
       2419, 2715, 1788, 2637, 1910, 1789, 2638, 1911, 1790, 2639, 1912, 1791,
        2640, 2420, 2716, 1792, 2421, 2717, 1793, 2422, 2718, 1794, 2423, 
       2719, 1795, 1027, 1796, 2641, 1913, 1797, 2642, 1914, 1798}], 
      Line3DBox[{1800, 2424, 2720, 1799, 2425, 2721, 1801, 2426, 2722, 1802, 
       2427, 2723, 1803, 2435, 2724, 1942, 1804, 2739, 1944, 1945, 1805, 2740,
        1946, 1947, 1806, 2743, 1949, 1950, 2742, 1807, 1952, 1953, 2745, 
       1808, 1954, 2725, 2438, 1809, 1955, 2726, 2439, 1810, 2440, 2727, 1956,
        1811, 1096, 1957, 1812, 2746, 1958, 1959, 1813}], 
      Line3DBox[CompressedData["
1:eJwVzklOQkEUBdBnQkJ0AQj26I50B8axbkAZ4QQX4MTEqdhhm6Airb1iC6zH
U4OTe3Pr51cVVzeW18ciYoWlbMQrA9644oURa5mIRfnEH89csjMe0ZyIGOqP
FOnxwAUdZ92ULNCizbH9XDa5Z547Ghw5O5O33DBHxT1te12v8csPs3TtX/Kb
U/ap22Zkn09O2OPaPi3f+UjvSPfbtv1/St9N96d32Mq2gn6ol/S8XtW39En9
QN/Uc+ntejVt6Xv+AdDZNr4=
       "]], 
      Line3DBox[{2007, 2316, 2329, 2343, 1377, 2328, 2317, 2331, 2344, 2964, 
       2225, 2330, 2318, 2957, 2226, 2332, 2319, 2958, 2227, 2008, 2859, 2228,
        2009, 2860, 2229, 2010, 2861, 2230, 2011, 2862, 2444, 2755, 2012, 
       2863, 2231, 2013, 2864, 2232, 2014, 2865, 2233, 2015, 2866, 2234, 2016,
        2867, 2235, 2017, 2544, 2962, 2236, 2333}], 
      Line3DBox[{2018, 2320, 2335, 2345, 2445, 2963, 2334, 2321, 2337, 1391, 
       2336, 2322, 2959, 2237, 2019, 2323, 2960, 2238, 2020, 2868, 2239, 2021,
        2869, 2240, 2022, 2870, 2241, 2023, 2871, 2446, 2756, 2024, 2447, 
       2757, 2025, 2872, 2242, 2026, 2873, 2243, 2027, 2874, 2244, 2028, 2875,
        2245, 2029, 2876, 2246, 2030}], 
      Line3DBox[{2032, 2324, 2338, 2448, 2758, 2031, 2325, 2449, 2759, 2033, 
       2326, 1406, 2034, 2327, 2961, 2247, 2035, 2877, 2248, 2036, 2878, 2249,
        2037, 2879, 2250, 2038, 2880, 2450, 2760, 2039, 2451, 2761, 2040, 
       2452, 2762, 2041, 2881, 2251, 2042, 2882, 2252, 2043, 2883, 2253, 2044,
        2884, 2254, 2045}], 
      Line3DBox[{2047, 601, 2763, 2046, 602, 2764, 2048, 603, 2765, 2049, 
       1421, 2050, 2885, 2255, 2051, 2886, 2256, 2052, 2887, 2257, 2053, 2888,
        2453, 2766, 2054, 2454, 2767, 2055, 2455, 2768, 2056, 2456, 2769, 
       2057, 2889, 2258, 2058, 2890, 2259, 2059, 2891, 2260, 2060}], 
      Line3DBox[{2062, 2457, 2770, 2061, 2458, 2771, 2063, 2459, 2772, 2064, 
       2460, 2773, 2065, 1437, 2066, 2892, 2261, 2067, 2893, 2262, 2068, 2894,
        2461, 2774, 2069, 2462, 2775, 2070, 2463, 2776, 2071, 2464, 2777, 
       2072, 2465, 2778, 2073, 2895, 2263, 2074, 2896, 2264, 2075}], 
      Line3DBox[{2077, 2466, 2779, 2076, 2467, 2780, 2078, 2468, 2781, 2079, 
       2469, 2782, 2080, 2470, 2783, 2081, 1453, 2082, 2897, 2265, 2083, 2898,
        2471, 2784, 2084, 2472, 2785, 2085, 2473, 2786, 2086, 2474, 2787, 
       2087, 2475, 2788, 2088, 2476, 2789, 2089, 2899, 2266, 2090}], 
      Line3DBox[{2092, 2477, 2790, 2091, 2478, 2791, 2093, 2479, 2792, 2094, 
       2480, 2793, 2095, 2481, 2794, 2096, 2482, 2795, 2097, 1469, 2098, 2900,
        2483, 2796, 2099, 2484, 2797, 2100, 2485, 2798, 2101, 2486, 2799, 
       2102, 2487, 2800, 2103, 2488, 2801, 2104, 2489, 2802, 2105}], 
      Line3DBox[{2109, 2901, 2267, 2107, 2902, 2268, 2111, 2903, 2269, 2113, 
       2904, 2270, 2115, 2905, 2271, 2117, 2906, 2272, 2119, 2907, 2273, 2121,
        2908, 1486, 2123, 2909, 2274, 2125, 2910, 2275, 2127, 2911, 2276, 
       2129, 2912, 2277, 2131, 2913, 2278, 2133, 2914, 2279, 2135}], 
      Line3DBox[{2134, 2816, 2502, 2132, 2815, 2501, 2130, 2814, 2500, 2128, 
       2813, 2499, 2126, 2812, 2498, 2124, 2811, 2497, 2122, 2810, 1485, 2120,
        2809, 2496, 2118, 2808, 2495, 2116, 2807, 2494, 2114, 2806, 2493, 
       2112, 2805, 2492, 2110, 2804, 2491, 2106, 2803, 2490, 2108}], 
      Line3DBox[{2137, 2503, 2817, 2136, 2915, 2280, 2138, 2916, 2281, 2139, 
       2917, 2282, 2140, 2918, 2283, 2141, 2919, 2284, 2142, 2920, 2285, 2143,
        2921, 2504, 2818, 2144, 1502, 2145, 2922, 2286, 2146, 2923, 2287, 
       2147, 2924, 2288, 2148, 2925, 2289, 2149, 2926, 2290, 2150}], 
      Line3DBox[{2152, 2505, 2819, 2151, 2506, 2820, 2153, 2927, 2291, 2154, 
       2928, 2292, 2155, 2929, 2293, 2156, 2930, 2294, 2157, 2931, 2295, 2158,
        2932, 2507, 2821, 2159, 2508, 2822, 2160, 1518, 2161, 2933, 2296, 
       2162, 2934, 2297, 2163, 2935, 2298, 2164, 2936, 2299, 2165}], 
      Line3DBox[{2167, 2509, 2823, 2166, 2510, 2824, 2168, 2511, 2825, 2169, 
       2937, 2300, 2170, 2938, 2301, 2171, 2939, 2302, 2172, 2940, 2303, 2173,
        2941, 2512, 2826, 2174, 2513, 2827, 2175, 2514, 2828, 2176, 1534, 
       2177, 2942, 2304, 2178, 2943, 2305, 2179, 2944, 2306, 2180}], 
      Line3DBox[{2182, 2515, 2829, 2181, 2516, 2830, 2183, 2517, 2831, 2184, 
       2518, 2832, 2185, 2945, 2307, 2186, 2946, 2308, 2187, 2947, 2309, 2188,
        2948, 2519, 2833, 2189, 2520, 2834, 2190, 2521, 2835, 2191, 2522, 
       2836, 2192, 1550, 2193, 2949, 2310, 2194, 2950, 2311, 2195}], 
      Line3DBox[{2197, 2523, 2837, 2196, 2524, 2838, 2198, 2525, 2839, 2199, 
       2526, 2840, 2200, 2527, 2841, 2201, 2951, 2312, 2202, 2952, 2313, 2203,
        2953, 2528, 2842, 2204, 2529, 2843, 2205, 2530, 2844, 2206, 2531, 
       2845, 2207, 2532, 2846, 2208, 1566, 2209, 2954, 2314, 2210}], 
      Line3DBox[{2224, 2342, 1603, 2223, 2858, 2543, 2222, 2857, 2542, 2221, 
       2856, 2541, 2220, 2855, 2540, 2219, 2854, 2539, 2218, 2853, 2538, 2956,
        2217, 2315, 2955, 2216, 2852, 2537, 2215, 2851, 2536, 2214, 2850, 
       2535, 2213, 2849, 2534, 2212, 2848, 2533, 2211, 2847, 2340, 2339, 
       2341}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{647, 1048, 1067, 856, 2545, 648, 1053, 869, 2557, 675, 1058, 
       883, 690, 1063, 2737, 897, 705, 2655, 912, 720, 2664, 927, 735, 2675, 
       942, 750, 2688, 957, 2595, 765, 972, 2608, 780, 987, 2619, 795, 2708, 
       1002, 810, 2714, 1017, 825, 2722, 1032, 840, 2729, 1040, 848}], 
      Line3DBox[{649, 1049, 1068, 1050, 2546, 650, 1054, 1055, 2558, 676, 
       1059, 1060, 2568, 691, 898, 706, 2656, 913, 721, 2665, 928, 736, 2676, 
       943, 751, 2689, 958, 2596, 766, 973, 2609, 781, 988, 2620, 796, 1003, 
       2629, 811, 2715, 1018, 826, 2723, 1033, 841, 2730, 1041, 849}], 
      Line3DBox[{651, 857, 2547, 652, 870, 2559, 677, 884, 2569, 692, 899, 
       2577, 707, 914, 722, 2666, 929, 737, 2677, 944, 752, 2690, 959, 2597, 
       767, 974, 2610, 782, 989, 2621, 797, 1004, 2630, 812, 1019, 2637, 827, 
       2724, 1073, 1074, 1102, 2748, 1075, 1076, 850}], 
      Line3DBox[{653, 858, 2548, 654, 871, 2560, 678, 885, 2570, 693, 900, 
       2578, 708, 915, 2584, 723, 930, 738, 2678, 945, 753, 2691, 960, 2598, 
       768, 975, 2611, 783, 990, 2622, 798, 1005, 2631, 813, 1020, 2638, 828, 
       1077, 2739, 1078, 1103, 2749, 1079, 1128, 1141, 1140, 1129}], 
      Line3DBox[{655, 859, 2549, 656, 872, 2561, 679, 886, 2571, 694, 901, 
       2579, 709, 916, 2585, 724, 931, 2589, 739, 946, 754, 2692, 961, 2599, 
       769, 976, 2612, 784, 991, 2623, 799, 1006, 2632, 814, 1021, 2639, 829, 
       1080, 2740, 1081, 1104, 1082, 2741, 1127, 1143, 1142, 1131}], 
      Line3DBox[{657, 860, 2550, 659, 873, 2562, 680, 887, 2572, 695, 902, 
       2580, 710, 917, 2586, 725, 932, 2590, 740, 947, 2592, 755, 962, 2600, 
       770, 977, 2613, 785, 992, 2624, 800, 1007, 2633, 815, 1022, 2640, 830, 
       1083, 2743, 1085, 1105, 1086, 2744, 1130, 1145, 1144, 1135}], 
      Line3DBox[{661, 862, 2551, 662, 2645, 875, 682, 2647, 889, 697, 2650, 
       904, 712, 2658, 919, 727, 2668, 934, 742, 2680, 949, 757, 2694, 964, 
       2601, 772, 979, 787, 2705, 994, 802, 2710, 1009, 817, 2717, 1024, 832, 
       1087, 2745, 1035, 843, 2752, 1118, 1119, 1108, 1043, 852}], 
      Line3DBox[{663, 863, 2552, 664, 876, 2563, 683, 2648, 890, 698, 2651, 
       905, 713, 2659, 920, 728, 2669, 935, 743, 2681, 950, 758, 2695, 965, 
       2602, 773, 980, 2614, 788, 995, 803, 2711, 1010, 818, 2718, 1025, 833, 
       2725, 1088, 1036, 844, 1120, 2731, 1089, 1109, 1044, 853}], 
      Line3DBox[{665, 864, 2553, 666, 877, 2564, 684, 891, 2573, 699, 2652, 
       906, 714, 2660, 921, 729, 2670, 936, 744, 2682, 951, 759, 2696, 966, 
       2603, 774, 981, 2615, 789, 996, 2625, 804, 1011, 819, 2719, 1026, 834, 
       2726, 1090, 1037, 845, 1121, 2732, 1091, 1110, 1045, 854}], 
      Line3DBox[{667, 865, 2554, 668, 878, 2565, 685, 892, 2574, 700, 907, 
       2581, 715, 2661, 922, 730, 2671, 937, 745, 2683, 952, 760, 2697, 967, 
       2604, 775, 982, 2616, 790, 997, 2626, 805, 1012, 2634, 820, 1027, 835, 
       2727, 1092, 1093, 1106, 1122, 2753, 1094, 1111, 1095, 1146, 1136}], 
      Line3DBox[{669, 866, 2555, 670, 879, 2566, 686, 893, 2575, 701, 908, 
       2582, 716, 923, 2587, 731, 2672, 938, 746, 2684, 953, 761, 2698, 968, 
       2605, 776, 983, 2617, 791, 998, 2627, 806, 1013, 2635, 821, 1028, 2641,
        836, 1096, 1150, 1097, 1151, 1107, 2750, 1123, 1098, 1112, 1099, 1147,
        1137}], 
      Line3DBox[{671, 1069, 1070, 2556, 672, 880, 2567, 687, 894, 2576, 702, 
       909, 2583, 717, 924, 2588, 732, 939, 2591, 747, 2685, 954, 762, 2699, 
       969, 2606, 777, 984, 2618, 792, 999, 2628, 807, 1014, 2636, 822, 1029, 
       2642, 837, 1100, 2746, 1139, 1153, 1152, 1154, 1124, 1125, 1113, 1149, 
       1148, 1138}], 
      Line3DBox[{846, 1038, 2747, 1101, 838, 1030, 2720, 823, 1015, 2712, 808,
        1000, 2706, 793, 985, 2702, 778, 970, 2700, 763, 2593, 955, 2686, 748,
        940, 2673, 733, 925, 2662, 718, 910, 2653, 703, 895, 2735, 1061, 688, 
       881, 2733, 1056, 673, 867, 2751, 1117, 1071, 1051, 645, 855, 1114, 
       1065, 1046, 1064}], 
      Line3DBox[{847, 1039, 2728, 839, 1031, 2721, 824, 1016, 2713, 809, 1001,
        2707, 794, 986, 2703, 779, 2607, 971, 764, 2594, 956, 2687, 749, 941, 
       2674, 734, 926, 2663, 719, 911, 2654, 704, 896, 2736, 1062, 689, 882, 
       2734, 1057, 674, 868, 1072, 1052, 646, 2738, 1116, 1115, 1066, 1047, 
       1126}], Line3DBox[{851, 1042, 1132, 1134, 2754, 1133, 842, 1034, 2742, 
       1084, 831, 1023, 2716, 816, 1008, 2709, 801, 993, 2704, 786, 978, 2701,
        771, 963, 2693, 756, 948, 2679, 741, 933, 2667, 726, 918, 2657, 711, 
       903, 2649, 696, 888, 2646, 681, 874, 2644, 660, 861, 2643, 658}], 
      Line3DBox[{1157, 1584, 1597, 1379, 2957, 1158, 1587, 1392, 2959, 1185, 
       1590, 1406, 1200, 1593, 2765, 1420, 1215, 2772, 1435, 1230, 2781, 1450,
        1245, 2792, 1465, 1260, 2805, 1480, 2903, 1275, 1495, 2916, 1290, 
       1510, 2927, 1305, 2825, 1525, 1320, 2831, 1540, 1335, 2839, 1555, 1350,
        2849, 1570, 1365}], 
      Line3DBox[{1159, 592, 2958, 1160, 596, 2960, 1186, 600, 2961, 1201, 
       1421, 1216, 2773, 1436, 1231, 2782, 1451, 1246, 2793, 1466, 1261, 2806,
        1481, 2904, 1276, 1496, 2917, 1291, 1511, 2928, 1306, 1526, 2937, 
       1321, 2832, 1541, 1336, 2840, 1556, 1351, 2850, 1571, 1366}], 
      Line3DBox[{1161, 1380, 2859, 1162, 1393, 2868, 1187, 1407, 2877, 1202, 
       1422, 2885, 1217, 1437, 1232, 2783, 1452, 1247, 2794, 1467, 1262, 2807,
        1482, 2905, 1277, 1497, 2918, 1292, 1512, 2929, 1307, 1527, 2938, 
       1322, 1542, 2945, 1337, 2841, 1557, 1352, 2851, 1572, 1367}], 
      Line3DBox[{1163, 1381, 2860, 1164, 1394, 2869, 1188, 1408, 2878, 1203, 
       1423, 2886, 1218, 1438, 2892, 1233, 1453, 1248, 2795, 1468, 1263, 2808,
        1483, 2906, 1278, 1498, 2919, 1293, 1513, 2930, 1308, 1528, 2939, 
       1323, 1543, 2946, 1338, 1558, 2951, 1353, 2852, 1573, 1368}], 
      Line3DBox[{1165, 1382, 2861, 1166, 1395, 2870, 1189, 1409, 2879, 1204, 
       1424, 2887, 1219, 1439, 2893, 1234, 1454, 2897, 1249, 1469, 1264, 2809,
        1484, 2907, 1279, 1499, 2920, 1294, 1514, 2931, 1309, 1529, 2940, 
       1324, 1544, 2947, 1339, 1559, 2952, 1354, 1574, 2955, 1369}], 
      Line3DBox[{1167, 1383, 2862, 1169, 1396, 2871, 1190, 1410, 2880, 1205, 
       1425, 2888, 1220, 1440, 2894, 1235, 1455, 2898, 1250, 1470, 2900, 1265,
        1485, 2908, 1280, 1500, 2921, 1295, 1515, 2932, 1310, 1530, 2941, 
       1325, 1545, 2948, 1340, 1560, 2953, 1355, 1575, 2956, 1370}], 
      Line3DBox[{1171, 1385, 2863, 1172, 2757, 1398, 1192, 2761, 1412, 1207, 
       2767, 1427, 1222, 2775, 1442, 1237, 2785, 1457, 1252, 2797, 1472, 1267,
        2811, 1487, 2909, 1282, 1502, 1297, 2822, 1517, 1312, 2827, 1532, 
       1327, 2834, 1547, 1342, 2843, 1562, 1357, 2854, 1577, 1372}], 
      Line3DBox[{1173, 1386, 2864, 1174, 1399, 2872, 1193, 2762, 1413, 1208, 
       2768, 1428, 1223, 2776, 1443, 1238, 2786, 1458, 1253, 2798, 1473, 1268,
        2812, 1488, 2910, 1283, 1503, 2922, 1298, 1518, 1313, 2828, 1533, 
       1328, 2835, 1548, 1343, 2844, 1563, 1358, 2855, 1578, 1373}], 
      Line3DBox[{1175, 1387, 2865, 1176, 1400, 2873, 1194, 1414, 2881, 1209, 
       2769, 1429, 1224, 2777, 1444, 1239, 2787, 1459, 1254, 2799, 1474, 1269,
        2813, 1489, 2911, 1284, 1504, 2923, 1299, 1519, 2933, 1314, 1534, 
       1329, 2836, 1549, 1344, 2845, 1564, 1359, 2856, 1579, 1374}], 
      Line3DBox[{1177, 1388, 2866, 1178, 1401, 2874, 1195, 1415, 2882, 1210, 
       1430, 2889, 1225, 2778, 1445, 1240, 2788, 1460, 1255, 2800, 1475, 1270,
        2814, 1490, 2912, 1285, 1505, 2924, 1300, 1520, 2934, 1315, 1535, 
       2942, 1330, 1550, 1345, 2846, 1565, 1360, 2857, 1580, 1375}], 
      Line3DBox[{1179, 1389, 2867, 1180, 1402, 2875, 1196, 1416, 2883, 1211, 
       1431, 2890, 1226, 1446, 2895, 1241, 2789, 1461, 1256, 2801, 1476, 1271,
        2815, 1491, 2913, 1286, 1506, 2925, 1301, 1521, 2935, 1316, 1536, 
       2943, 1331, 1551, 2949, 1346, 1566, 1361, 2858, 1581, 1376}], 
      Line3DBox[{1181, 1598, 1599, 2962, 1182, 1403, 2876, 1197, 1417, 2884, 
       1212, 1432, 2891, 1227, 1447, 2896, 1242, 1462, 2899, 1257, 2802, 1477,
        1272, 2816, 1492, 2914, 1287, 1507, 2926, 1302, 1522, 2936, 1317, 
       1537, 2944, 1332, 1552, 2950, 1347, 1567, 2954, 1362, 1603, 1604, 
       1605}], Line3DBox[{1363, 1568, 2847, 1602, 1348, 1553, 2837, 1333, 
       1538, 2829, 1318, 1523, 2823, 1303, 1508, 2819, 1288, 1493, 2817, 1273,
        2901, 1478, 2803, 1258, 1463, 2790, 1243, 1448, 2779, 1228, 1433, 
       2770, 1213, 1418, 2763, 1591, 1198, 1404, 2758, 1588, 1183, 1390, 2963,
        1608, 1600, 1585, 1155, 1377, 1606, 1595, 1582, 1594}], 
      Line3DBox[{1364, 1569, 2848, 1349, 1554, 2838, 1334, 1539, 2830, 1319, 
       1524, 2824, 1304, 1509, 2820, 1289, 2915, 1494, 1274, 2902, 1479, 2804,
        1259, 1464, 2791, 1244, 1449, 2780, 1229, 1434, 2771, 1214, 1419, 
       2764, 1592, 1199, 1405, 2759, 1589, 1184, 1391, 1601, 1586, 1156, 2964,
        1378, 1607, 1596, 1583, 1609}], 
      Line3DBox[{1371, 1576, 2853, 1356, 1561, 2842, 1341, 1546, 2833, 1326, 
       1531, 2826, 1311, 1516, 2821, 1296, 1501, 2818, 1281, 1486, 2810, 1266,
        1471, 2796, 1251, 1456, 2784, 1236, 1441, 2774, 1221, 1426, 2766, 
       1206, 1411, 2760, 1191, 1397, 2756, 1170, 1384, 2755, 
       1168}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxcu3k4VO//P54KZSukPUvWKImkBXckoRApSyWJKCVRtkih7Ix938mWfSee
1mzZ1+z7MmbmVFJJ6Td8Xuf3va73X/c1Z+bcc8/jPJ+P5cy5eQyfaBpv3rRp
UxDjpk1bqCPvmr9V+8tpYBIcHVofH8L84iDnELqByHKl9O1w06tjXq6SAn3C
uT9uKVejGvHyuai2athS1H+kPxSDh6eiDn/NzkeeDRft3jeVwOtXfu3ZrRj8
tk/4LmiegW5GhrQvLeWBqem+sYBJDGbG1SaeMiUjNkZlGtqYLNivOSdeR8Lg
xoVCoRN74tHDRE637fFpYJs7z+/wDQMZdOW8e2sUcvvEGzO8lgy5nSp6m39g
ED1sPtNJDEMz46hh8EwinOP2Q9d/YeDinj3eshqMCqytEg0Z4sHNb5bx2woG
v9CSW3ZuINI6V3vtkkcMBK7SCB5cxSApUOPHvWF/JPqhazA6LBLa24Ke/aYe
v+mEBmduEZDF4yfRfgfDYfmJWXrSHwzWuh2lkqV9UaWH5wO93yFg+tZz7shf
DC5ctD0gxueNEh8ojGdyBgNfTrdoEPW4j7MRjeNNT9Q9vfvVozAK5O2nJNHH
dYBVq/PJGL1qlHSdZL5mNQurBkXc16NnYVG1JO6JTDGyLrklGHNjDEYYJLi/
di/CtnPVv9VEctCmf594itT7QXhn6KBDLRkszB1vuxxKReEpgkWMul0ws7BZ
QDKBAh9mJEq9WRNR0oDmYfZdbaB7XEAgYTcGya4W102fxaL6XZcc5+42gez+
2xI2ehg0x4idjYcI9Ic3xvnQZD3UJGMNsm8wqCLnR45dDEV7so+XhR+thYAR
22NT8dTr+Dvj8OmoIHSTnXs7zZZqcNLREv9diEGQZi6x3DkAMT4XP9r0ohIc
61YOR9RhYB7ySoalk4CCylwG9N6WgwPtQGRgOwYeW69GsH72RQl7Xx4ZoikF
ugta/bQDGBTbyJ/ueOONLhZDZW9PEYzFqPxMG6XO/5Hdw9XXE216yne+kFQA
7IdLAlanMPjDnXTLfNwdMfodGitzwyCMq6zqwcNa6BJRbe9hKUC1A03LBxoW
4d1IV5Gjyxjwt+kHMEnnoMLkLbyrEbMQV6KeNBcyC8vB6lZSuunomc+91+4K
k7CgZMSpLkME64Q1j0mdZNTd2i/XtmMU+Ln/ebqfJcF3Ia5zycnxKCnvnYKv
4md4Ufzgp5IhGWzX3NPeDkejxl5BVdn0XnA2EdMP2UeBy5E3JZ60hKMcqdOs
FqNd8PSU6PF6fwq8eWKg9vh9CCKI7bMfSO6AlAjbB9rTFFjRHxB7cjoIBTkq
Nbhmt8IxJy6KGhcGQ7AlRP98AGKwP6txMrcZCK3k9BYVDHTz/366n0RAHrqt
QVbCjUCvEX4AzDAI3mwQ8yPKFzmU+i+t/auHbNPLMZep13fF/sAr0m1vFMAn
zPPjUB2QtZ1uvQrHIDIgrubnM09k6RdLcH9eAxOGv9/UpGFAsM/nVeh0Rw+S
fLaz12PAOnM+zU2qHM672ow8E3uPulYySRzVZHCaCeWQvtkPJtrzw2EqqWgq
JNbBVpUInuxta4LHJiHVu/5Z8INkpH/G6nhWziwE5vQ+nHefBVN21v551wSU
fSAvepfrFPzOcv28T3sBrm7axjq5KQ7ZK7eaJMyMw+4d9Y8uHlmEj+aPRv5N
RiJd1oDMf54jUPuPzUPLgASGr21zc/zD0E0L3jtnOAbh06u6tJpTZHBYXVLM
mw5GGpW5DO+k++GaerqvdjsZGDvfeygWB6I3TXWfrUZ6QBXaDPciChhcihF0
JfkjfR3M78VwF/xQGB5nDaTALY3zLwPNCejGO9WOm/ydcGREjzuqmwK0E/Up
Z/V80TgbSfuZRjvoPjz/6yQdBvsfjjFUSHkjy8wkhc7CT3Bm9fFsgCgGNRMH
bnDe80SNl8/bths3Q+g3dn8ldQy206koirS5I4tLEYVyIxjE7Y9WYJssgH/n
dJc4G5NR2Ela3vYkCly821cBil0Qqc5rln8pEZUjQ7r3GiRY4LuArRSPgDl3
VvVMbTwiuu2vmvFYgFgl/Xt35KZAzMs2anFHHCoqkx3/0zAL44jpkP6zWXAR
PRjo1xyFfu5soPujOA1reZc8tlXOQ+6F4wGszeHozat9nuQ9k0AxwrZKGxLh
QH2gtOKJUPSju3NqRWocDF2Zf44GLgJzmdCZ3tUg1L5kdfvx2RFgaMjpPmlN
AvcUA3f+Q4HILd5Q+rvtINz492t4Ow8Z/mg9ylFx80dO3DW2XHsGIMry2Wvj
JDKctrfdn3iMgNK6LMTSt/TBFhban8cYKdBr4fLmAKMvcmLzSjUX6wHpz/av
529RILai8GotkzdCej62K/5doDrlNTcUQ4GYj6PiVzU90dwjeikGrk4gs04J
fOqhQDrfrYXwDndUdT1vWniByi8n1TznZ3JAxXfN9W5bPAo+XxEjeBCD2q7S
/h1FrbDNs59zcCkW2Wf4ssi/JIN0ur2+Q80A2C9zdv0Qj0FizDTng40W4UDL
GdEC13E4f8FptoozCkmfiBJ241qArtqWXe9ap0BtS5xA6EI4ak9qZnw3Mws1
kq4NYdqz8EPju7NBXSj6PUZfmN89DYymRA565Xnwmt2e/a8pGLEOXgvK/D4J
OqdOLXB8XIDiL8KL8VuD0NahfLso5Ql4S1a9to9EBI2xpUTiswBUq1djmBA9
BlyeFVdvdC6CUafk9ZXd/mgfb1ho1t9h0Mp4dlzqLQnCN1mxezX7oZCOE59G
Uwbh4uCdTYW7ybA3zaLkYIEPstaT9HniPwA1z36tenqR4Q7XyZXfY16I5ef3
k905fTA26SXPvUiGbTxbhGoVPNGOujXVj397oFfulNiJsxSYcCFuNx90R98v
/WCbxjA4o+KeHK/+HjhClY5kn41BHjov+WgMMeDwjIrxamyEgwEv5lu0IpH0
NQtwPUPtQ8ynlPy9B9KKe54lS0egncar7IKJJJA9X3X4jOsw3LSm2flnMQzV
WfwauNtBhMsfv2atWk4Ab9ZQ0jnLUFReZDd2gTgPjoVs37JZp+HMnxGjNVIw
aq25QfuVaQ40VOtMx4/PQrCcpckFyyB04F++TKnSDMw+/xqlPjUHyYTUhDWW
QOR/LI1BOXkKJuN2z8+cXwBmUZa3Mk3+6KxI681OvkmQ2X7RP1qPCAacjgfj
EwjIeUuWpfHHcSDXBW/bgRbBkJPSRzjphyjkj9eZdozBNas0wdKVRci1n8sW
uOWD4lSiAw80D0PKhd7TboEk6PhVXdRQ5IUslviijIsH4WDbbwM9djKMaB0R
YEOe6PZO8WfBHQNwLFg04BW1HrmRxp9FzB1pKCIr5u8YkD643vO6nAomJVrJ
pvoRiJvvyosHvhg4fPTpcaOvh5wp7m9nvocikcykOctCCvAv53vzf+mk9vuR
J+FnQ9FFWvkghtdkaP47esqtYgAEMlLOe98JQeXlWStNLCToorcvrKwchUfd
vYRBg2Aks/Wu4Cd7Ivz4QmPZ8H0CIpKanV+oBaGhCQpdw9A89C/7nrrKNw2r
7hyjplKBSK+XafOc3BxMG75j6P81A38kf11LEwhA1wMkuR8Vz8DI4ZmC005z
IDaT1a3E648GxSsb/spNwxXahC+CdfNw4jpHtdAJAuqd+s7LOD0JAqfKtfZ0
L8CvneYeY4m+iLuW5h05egIm0Gm9nkIiJKAjummMPujh8TMaFebj8Ai59bg8
W4SpsM8tJmFeaDFmrKMqbRQOGO+IaOEggebdf6bES57o7Mkrd9qihuHxbuNo
xlgStN5Tywzf44FeklTV2qh+1H3Q+Ya/FNWfOuyt2u8YisqEqvII7zH4wl94
CdHVADAnWcqYBiOBnw0HaJgw4NJN3xUz0wZXxlfU9s4FobHdkRpNPBRo6XB4
pOncCwrNjSpsN4JQsD3rS/F/JFA8ecrnFcMQqNZrabKkB6LqVDU/jaJFIPUH
B//8PQbx1rl7XxAD0HchCWN/bSI8nSwynRSahE52dkZL7gCkkpa0Re/LPHRV
GpoixmkY27uj8vM1f2QmoeCU4zkHu28U5u7PmIFP059oSzwJiO/cqILtsVkY
knzJe3TnHJwn9wRaBfih13fFuTeNTIPc4m15Dfl5iIxVs/zH64saxh3cYyOn
gPghdt9XpQV4b2Ke/OuTN0qLdjVReDgJfeyX87OFieB8T0Y32NcLSRykU5hR
moB7GRMBWmQinNZLNSeaeiJWicSqvlPj8GIg6FVb8CIsBXtw3bjpgdQPc9aU
UP09Axfjv9D6BPAmVx5YvhSMfsCco3QNBm5myhIP/lXC/he8rx5bBqIo5Uca
EZcxIHfdG3SKbIbyso9pdbsCkd8u0TbxSAq4/jP9ejW5Cw45l6e9LAhAHG80
LcvKyJClM1/j/q4fNN1o11rlAlCoFPMLrkISmGml/aORGwYj1gdKa5X+iHE+
eug0dX0HAxRUW6jrtdHkOv1NzB9tsaLt7zYiwqYAHrfvHJPw+fSbqKQoAvLb
I8ojcnQBvp8nyolXTUHGyxj1x3QE9ET2/ubSr3NQJBf3XObMDBgMa3b6Tvmi
9Oxjw0pls7Ajc4Un6s0sEGtPx8bW+KDg1nf8Rz1moGsfpXd/+hxweewr+JDp
jY4U71pxMKDmt11MUZYZ8xC9VeyQZooX2neX1cKAqvffP4q7sfkuwEhs71xH
jiea2v5PVe7oJBwfczDccoMIk/lk7S/NHuiC9tGWA78xwJgZO43q4+BvRIaW
ll8gKnrZnprThcFSLSfpn3MZhCr4XqRQfZGW8mOlCQcMhMT1SufyP8IxFWbN
e+/8UbfDiT1GqxQoqbRltP/eDq9vm+9qNPFHoWzJonLXKFDleEK+yaQHuJfT
/jpz+qM4m8u8Tp5kcP2qrZkdNADfWsYCG5sIyD5ThNkthQT5tZpSn2yH4VOg
fn2qGQFJc1iJJ+QsQoDdlPeBbePApmRt20nFc5NjoU9YBhGUz2qio5kTcLxG
l2XonB/Sjzt2zyp6AW7ljh31PToF4zEkppb7vuihW/MtA895IEvs0tvvPg1h
HqeTvQOoemfu1JL5fA7IU4lxZ2tmoM0sVta6xhs59XQl99+dhdLxgn0pI7Nw
2idugG/FC11o+NMefXUGNsXKx0uMzIGNEWXO/7QXeksvuXrowjR0uCh8y6id
B4/uuOBjzp6ItOUgNz81Z75u5orNEI2Bin8voi9KBiCNpx9sVsaoOU3bLJj1
TBEMHU+XiqwmoK3D4VhQMgZOy1sGeAdrQPmwyhETap9GnGyWs7yCQZ923FxT
QDNM5AkOPDAioBfST2or+iiQQ3xk0MbcCT7BsWHTZwnoaJW/hswlClxvLNLx
yO6h+tLX+ZyMBDTJZMnJFk8GjZjGuVzBAWgTU/XJTvdDTR//mrjOkUCCzWG0
6ekQ9Oe3npGQ9EPv5b8q9h4iQcjHglBxr1FI1S1t1y7xRWc8Lg3vvbQIj+/7
H3tcOg4H6eYEq0/5orOmHUf23yfCDua7V+x3TUL3mB3vzzwfNC6c+UjJcQEK
70R+09OeAqYfTHtUj/ugn58po+9954HYd0yEwWUaTHy3vuij1nlrzOXZ2cg5
mD/qbdsQNgN26VcMjcS80eDgKv2xd7NgQmdivhY+C/Fi1mLuJV7IY5Ql6wsV
Z/udW70oKpFQcJm8XCPgjzyJc0bhixiM2ne9+xiVC9V2kt/2t/uhlU8VwurN
GDgOyyhs+fcBpo67bC575oeEaCKl9oViwPOw0HbftTrgOX/Hp0zdD93yFp52
0sSA5UynexJPM1zQf+N9XNwPnet7zqr+lwLOck5X3AbbIVdIPG6NnTpP6blz
9mEUgLiIb3vKusDLqWvWbskXrUxrJbPwUyBt8TgD67NeaGEJ9Mvt8EU/Kfp9
AlQfTHho2DC+dwBi/FgE9N77ok+P+mxGqf4sI/zGLsq7QRBfNbpm5eaL9r7c
Oqn4kgTtOe2fpA6NAPGysiXfPV+0Gi738NbQIlxzlTwg/2IM7PmeXHp/3hdp
mF15/0d0ERiGLrx2GR+HwbT3VTo8vqjZpSttxI4I95QyeJ79nIDL4q6pLnS+
aNbiuc2bDwsQ/Kp5Z+fmKWA48pcz4KsPEvp6XIHwB4Ob91kYBCAMHP6aX5XX
IaDUk8c2/6TqIy12TR3VvwO0cuDw9T5f5GgSvMWE6gMlS5llzmZkQ1FEZkc4
df32i2XindQ8H3eL+Gp1tACMJ8YdSC6+SOHS/tcSPRiUDrZLxAuVAbeklKhq
uC+6pOaTlFqFwdrBQJsLngBrBH55jQpfZGqHjDWpeTXc4uXqNdsaWPp4eVKD
7IvUPHRXtan+Z/tghZ6vUD0Y5jqIzQv5oUeNBOuZJxhYoKodD7oa4EGORU+Y
hR9SZf/LI6KGQd03PjVHq2aws6jstaj3Q7K70/tvHcGg/vm9fb+3t4LHe6u9
z3cRUA0z+XIuDQaZAu1/ngS1Q86XXSXP1ah81WJ55m4/Bfrnwv2HtnXCXGPs
D6I/AWnHR7u/S6fAFmK7i8X5LoioHJ5WHyegwLA7OuUvKEDRj4Ewi25Qjljh
dzznjzxSa6N2/KXyw+kua9WnITCj6az0zJ3qJzdn7HlJPW6i9Pe9S1sgqqKd
LjYO9UPaiqWhLXoYsIUtDWe8akLV087Pf7P5IfotjOXZMiSIes/gbsgxivpb
ra6+O+yN4JbsqRSnWRBplCnOq5pF1ueH2CUD3qLnQdpH/saMQ8OALd+y9iLS
ZP/zRaTrFTpuZ/hBTW4A0rjSpsqjyOh2U8zHuTZbFPlqIUOLpgtO5PTNMhRS
0IN/k5unky3Rg/zjsbX3WkD4snKKhDyG1G+flq1tfIQmhzo172rWQ2QKg62L
D4aOvCDHKzbdRxILqqHFlCrISgm88KcYQ3luzIndTw1RylaJWn3tcogaTtPg
6cTQOyv1BJ0n+shjy7dbL+8UweruEfnkcQwtOfUFnnuji2Ilum5Gvc6DCs7s
835EDPG4DJkW511HLjdftKaNZ0FKbOJzjq8YSh99Z2aSoYmKNC2P0kjMgpKr
ieQ/n1koW2B4JvizBgXnGk+VTH8GtStrVQK8ZDC/R+eyWlOI3jzsC/z9phOk
KcuivSUUMHuxVVfOJhP5TOnZZZxqBvlc+5N+KhgYKFnsFuB8h05f/HajgJYM
NLaWh/yNB8FmWYH2CakQtR1+T1PkPQsC+ndC/CJn4QU5o1ilJQfRLzxONkYT
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
oyIyu/R7OmhYlSmyPS6DnEHWfQWfsf3V+BEs8YoOF2T6MglNFSC26HHX+et/
eKRsf+1vwU6FW2LzNNiqbttmptYCMu0VJT13iGhPSsLJNd7LxMO9Wmu8l9nF
01xrvJfLG72sHpPp4CqYk9srlIfCiul+dvxERI3lTzg6hsXNXLwJlgVoXIBX
GXeeiAom7P7h3YWq5RHWeHcyBko6a/u4Wqy8PqeWDj7y1z1TRT6ik/mHrV92
ENH28XLh3EI6tJKfNJl1lqFpmWguZ1HMf/LSn9jE06HyyA1SyY1KtP617fwh
+0D0oFpXTDVhHCT6Xgo5MM3A1iN3IuXjPqAnsZdfs24chNv3H5us8coUPyWV
rvHK/MwPf2PH4sm3e+rXY3GPn0Gaa3Ehqel9DHtnwcdx7LRDxQjAFjt5YMpH
X4wJyWv8sfD9j2W3sxXDyaf3ytf4Y6oil/LX4ufncU5bsPiRcZXPa/EMRH6c
EUyHy3VPU7a9qoJHhlK2zPuIKOn06OW173dqpMLLay40wTmbZs+173cyVcgf
vDBdStiuXNyE6dKl3Vk+9klE5G50LmDtXLGVik0wtJRCqp7Qh7VzdZCnZew7
5vfyXx72adOuAxFZk59FpwLR44VYP3nsnM/9YPgxleKDCBTHdbdfBaJ3PTvX
LR6vgtWn5aM0ezqMGH9rZ7F8h+iRq1eElukgzzr9+YdzEiqb+aIrIUlAxx+m
vSjH9DdjY7ZAkmAs2vxGa9uvGTyy/qLXfqBzCJoslo7cYqOgM4zPrBo03P6P
u6XxF3frrUbwu5t3sbq/k9VW/TMV4RHH0VPLT9ENuUdJH79g/cUVmYXdh94g
tnWH+YzqCYiJb2dJcA4d/L/1mRRklMOc4o/LiaEEZCsCfmLYc1W/VzXiHAyA
pid3fX52Yfrwh/uq8If7evcP91VOaavs42vFUKy/5VV+Nx3t9BoMGLG/jt5Z
W4YpXimAwurX9bbjdOR3JmZpxv0yWjwieI9RIA829ll/c56lo5U6q7t3tAwQ
hyEDc/RZrK6fsU5tHh8E5y8rdoKRBHTRID/35SE6CG6aOKSg2IDqXu6RX+NE
+VGGhNb4UfwqoyVSWFzoIsl3LT5j0LPsOUqCK+LvN7FrTSJ/ta9HjD96o6e1
i4IHMD9vLVCzcqm9Eimy/aR+wvK8+Oe5JP48V8Wf5wr4k+dj+v9vnvWSxyxu
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
cs+OrEGRKcgb3X7uglob3PtS7s4sWIT6JePdFW4MweVK87fgOAYfKJJ62tzf
UG6BmpQ2UxcMmiyoMaSSQfldXVFyeRIae/RvTZArBcS55tI7BRugIs9GjZcv
HcXc2hPC8WQcDrvWUyrvDwL3+aawT7HJiOVqoiV5wxC4pZb9VB0ag+/bWZ/f
OhWLHBQp39OZqXCa23WaerkGRrs0khLfJ6CNWUJt1ZmTkLG7WZezthd+bjjz
deBDDMpg2uS8KWwUmpICBy7bDUO7mFnF1/RI9PNfQmOPJBWs3G89LQyqBCfe
n5+UjKNQy8dtGdj6HXlB72LauuVI0lVs3WnJz81yjgy3zdZFl7F1whaFBIqs
dQRqOXBbDVt3DF1vV05b32lmX4Stc0w8fVrSNQ661HlmndoBqPhiKux3Kwx1
y4acwtZ3RDTextbn515uxtbvS/ypXLt3GL72hHIIdY7Cq3yXPgO3TMT01BN9
6B4H7g7p1K8vBmBQ1lgupiwf9fSKTtk0dQEz5XH9W3My7Gi81M7nmYw0Nbqv
BUv3wyFvbhPV+gmgFjVtfzedimSXk5gWrzTD+R1OZNkjFEgKCaiaM4pGnevO
JpdRUuA+HZfqb1r9IyhwxaJ53A458FMlIlom4Gi784V2mX74wFGZ+q38K+K1
2az5yHMKzuzfevXPaCsIesyOsfWmot6Zpvs+vMPAfeulw6+pUZBW9LK50ROH
Ej2fGz8fGYXY8S98S6eH4eZub1aKdRKtTv7E0V9CAT0xqUe3BeqByrHn1p+S
eKRwvaYEu/4djdKWRbTrz7/+wH3s+htMx/Sv0Kr08ylKoq/eVcGto8x/Rmdd
0E0t0sHoXlo9ZxTBVfIkAxzUbm39QOsv7uvf/Ik5ilXGBpODudWgJDPjgzmK
uRZD8h7TFNB4IBnkJ10HSucmc+6NuSA2f7nS3EoKvN5xoUfvcT08P3CA6xxt
nXq5+lsNrW/6oiKayVTaACHXGXSiulzQjaytsZiX2L7te5bmjiyQ5I4ZwbzE
4G2tNz9oUyBFI6ipq6sRHrAurNR0u6CLrM79anwU8Fe1NtlxrhkO3Q0LP9Tg
gkZ+66WY/qACT9xnCeknuRBPfRB+WdcV3T6aHD6yMgW2z+O3Ll5pgdl3y7WT
tH7kH2eNOuYluv7TP+dLqzctlNLWulW4oLJvoTyRdlNQeSw/7V1wG5xSeTCr
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
bLl/87po5Dh83XnP9cAbDyQrnt/ZbtkPTXtENz0unwADo9rq8jXuKNNaQpV/
Ux+4JF8O9kqYhPVR1Y1XM0nok+9U9pJVN9RfkQtY85gMjLtzH1BPu6IZoVLn
m/ydYNjgnN81RztPYgtf5gg4ozfbNU7k7m0HvzH38Bf6U2AuO60TbuKIyvZr
3mQbp9VLispuAtFfIWnruaW8N0HIMo2XcfI6FVo6trtEn6qEAHXtKIMmf3SU
TVHpKG3fYfvBIHLJoBlUB2vUnxf5oQpyVq6QGxnWhcXl8v7ogoVex8m973yR
2fwB24bSCVgJLTSW+9gPRsx/jPo3+aDi0A1hr8fG4Grk0x3rdgyBXEDQkJy3
F/rBRK8Qc3sYRFm5VMdbRkG+LFMuuN4dLWRcvLYhaxDeNHGctOYfB+6CxeMP
vd3Qqc1isRSRAfARvwsLVydAIf2sc7YJCQ23H2Fy7+8DD34HPqlTk+DuoqjQ
Q3VBflUZWspXe8FZlF3dbHwSTDnBcd8RZ3RNc3OWFWM3zIxfvIasybBouHL3
jj1t/5HxXjGd7YD8hfBm8XVTsObPgX12exz+P79Pl/dffv/Jan6fcAAs/8cB
IPL73P+T3ydy+lX/k9PPWc3jN67m8XVW8/iiq7n7uf/J3Xeu5utbV/P1i6v5
+turufie1Vw832ouvnM1/y7/P/n35tWcO9dqzn1+Ned+8H/y7KGreXbt1dy6
7mpufWA1t07+n3y68mo+/WjLKxlJ2nN3ySajKXEiC2a4k/vPmniiotOfrsnt
H4csAQ1DxsZB6O96It2iQkI5c+vjLw9TIU2u/1oLexrYeq2L/8zvgS7tfUr5
7UeFTefo/t2iLwF1jof9cTfdEa/qXBhymwAOBeX1vk39sJO/oIhjyRV1kkVf
qL0ch8Ihl5eCjwfBuqRNy3GdK/qqc5/E8pMKezYmNQ0FJwJ9gks91wl3xC0Q
Nrk3nwomvq9/dm0uAB73fK1sETf06+qyQPATKrz5pp21N6Ic0K4V4Yl1bkhS
8o7f8OgkbBTkOWek0AuXzftUcjRdkattVI/u4gQITm7dskQ7f08dU9OxzXZB
aV13usUZJuAYg2MOKXQA8nu0sj02u6B8+mO6NXNU2LE7e14pMgo+uieNke+6
oZ71LOm2bVQQkJpIaivOBMniG8wiD0joA49OkHQIrZ7JdHb01CoG3j0aItYC
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
kP4o46//D7EtcxE=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{380.2548882102545, 191.42419009358971`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{0.01, 
      Rational[1, 2]}, {0.01, 
      Rational[1, 2]}, {0., 37.250135570223094`}}, {{0.01, 0.5}, {0.01, 
    0.5}, {0., 37.250135570223094`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8745502827950413`, -1.6109900286811278`, 0.7692020535418089},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.8011875377772293`*^9, 3.801187555315782*^9}, {
  3.801187595249415*^9, 3.801187654339395*^9}, {3.801187710640066*^9, 
  3.8011878561655703`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c0", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox["4"]}], "+", "0.1"}]}], ";", 
  RowBox[{"c1", "=", 
   RowBox[{"1", "/", 
    SqrtBox["4"]}]}], ";", 
  RowBox[{"c2", "=", 
   RowBox[{"1", "/", 
    SqrtBox["4"]}]}], ";", 
  RowBox[{"c3", "=", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["c0", "2"], "-", 
     SuperscriptBox["c1", "2"], "-", 
     SuperscriptBox["c2", "2"]}]]}], ";", 
  RowBox[{"cp", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{"Fg11", ",", "Fg12"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "c3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"c0", ",", "c1", ",", "c2", ",", "c3", ",", "cp"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.801187911493412*^9, 3.801188228904789*^9}, {
  3.801188309218854*^9, 3.801188383183385*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9915482734522292`", ",", "0.9897128015652583`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.801187946194145*^9, 3.801188005777568*^9}, {
   3.801188086618864*^9, 3.801188094900784*^9}, {3.801188132907525*^9, 
   3.801188184558159*^9}, 3.801188232447363*^9, {3.801188312698977*^9, 
   3.801188384191792*^9}}],

Cell[BoxData["0.37416573867739417`"], "Output",
 CellChangeTimes->{{3.801187946194145*^9, 3.801188005777568*^9}, {
   3.801188086618864*^9, 3.801188094900784*^9}, {3.801188132907525*^9, 
   3.801188184558159*^9}, 3.801188232447363*^9, {3.801188312698977*^9, 
   3.801188384209766*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]W", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SqrtBox["a"], 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "d"}], "]"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["b"], 
       RowBox[{"(", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", "d", ",", "u"}], "]"}], ")"}]}], ")"}], "+", 
     RowBox[{
      SqrtBox["c"], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", "u", ",", "u"}], "]"}], ")"}]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", "a", "-", "b", "-", "c"}]], 
      RowBox[{"(", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", "u", ",", "u"}], "]"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Psi]W", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]WT", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "\[Psi]W", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "a", "<", "1"}], ",", 
       RowBox[{"0", "<", "b", "<", "1"}], ",", 
       RowBox[{"0", "<", "c", "<", "1"}], ",", 
       RowBox[{"0", "<", 
        SqrtBox[
         RowBox[{"1", "-", "a", "-", "b", "-", "c"}]], "<", "1"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]W", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"\[Psi]W", ".", "\[Psi]WT"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]W", "]"}]}], "Input",
 CellChangeTimes->{{3.796814258496827*^9, 3.79681429328439*^9}, {
  3.7968145483301287`*^9, 3.7968145719862413`*^9}, {3.796814723996895*^9, 
  3.7968147757432947`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox[
       RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]},
     {
      SqrtBox["a"]},
     {
      SqrtBox["b"]},
     {"0"},
     {
      SqrtBox["c"]},
     {"0"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796814294456615*^9, 3.7968143333623*^9, 
  3.796814574371873*^9, 3.796814778401094*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "a", "-", "b", "-", "c"}], 
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]}], 
      RowBox[{
       SqrtBox["b"], " ", 
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]}], "0", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]], " ", 
       SqrtBox["c"]}], "0", "0", "0"},
     {
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]}], "a", 
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox["b"]}], "0", 
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox["c"]}], "0", "0", "0"},
     {
      RowBox[{
       SqrtBox["b"], " ", 
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]}], 
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox["b"]}], "b", "0", 
      RowBox[{
       SqrtBox["b"], " ", 
       SqrtBox["c"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", "a", "-", "b", "-", "c"}]], " ", 
       SqrtBox["c"]}], 
      RowBox[{
       SqrtBox["a"], " ", 
       SqrtBox["c"]}], 
      RowBox[{
       SqrtBox["b"], " ", 
       SqrtBox["c"]}], "0", "c", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796814294456615*^9, 3.7968143333623*^9, 
  3.796814574371873*^9, 3.7968147784248123`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", 
         SqrtBox[
          SqrtBox[
           RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]]}], "0"},
       {"0", 
        RowBox[{
         SqrtBox[
          SqrtBox[
           RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]], "/", 
         SqrtBox["c"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"y2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", 
         SqrtBox[
          SqrtBox[
           RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]]}], "0"},
       {"0", 
        RowBox[{
         SqrtBox[
          SqrtBox[
           RowBox[{"1", "-", "a", "-", "b", "-", "c"}]]], "/", 
         SqrtBox["b"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"y3", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", "a", "-", "b", "-", "c"}]], "/", 
         SqrtBox["a"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.796814362484874*^9, 3.796814403944613*^9}, {
  3.796814502749936*^9, 3.796814527382942*^9}, {3.7968148676081038`*^9, 
  3.796814956242646*^9}, {3.796815062117638*^9, 3.7968150835523043`*^9}, {
  3.796822737149118*^9, 3.796822856904237*^9}, {3.796822984964294*^9, 
  3.7968230115335627`*^9}, {3.7968232230209007`*^9, 3.7968233425986958`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"y1", ",", "y2", ",", "y3"}], "]"}], ".", "\[Rho]W", ".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"y1", ",", "y2", ",", "y3"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]5", "]"}]}], "Input",
 CellChangeTimes->{{3.7968144326827183`*^9, 3.7968144707026777`*^9}, {
  3.796814685787869*^9, 3.796814690596677*^9}, {3.7968231861438503`*^9, 
  3.796823195002513*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "0", "1", "0", "0", "0"},
     {"1", "1", "1", "0", "1", "0", "0", "0"},
     {"1", "1", "1", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"1", "1", "1", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.796814471916542*^9, 3.796814691721764*^9, 3.796814787502268*^9, 
   3.796814927640925*^9, 3.796814961514388*^9, 3.7968150861737328`*^9, {
   3.796822748029961*^9, 3.796822859576276*^9}, {3.7968230135558167`*^9, 
   3.796823023191361*^9}, 3.796823196447598*^9, 3.79682323782204*^9, 
   3.7968232980272627`*^9, 3.796823345095703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Alice", " ", "and", " ", "bob", " ", "measurements"}]], "Code",
 CellChangeTimes->{{3.778160050913267*^9, 3.778160060471734*^9}}],

Cell[BoxData[
 RowBox[{"Alice", " ", "and", " ", "bob", " ", "measurements"}]], "Output",
 CellChangeTimes->{3.778993204292696*^9, 3.779582043439351*^9, 
  3.798701687788415*^9, 3.7999253650387287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"A", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.778250864544713*^9, 3.778250886023018*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"0", ",", "0"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.778250888323515*^9, 3.7789028809649067`*^9, 
  3.778993222473134*^9, 3.778993757676629*^9, 3.7795820568048077`*^9, 
  3.796181938717863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
     RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.778160099438538*^9, 3.778160165142014*^9}, {
  3.7782508934012117`*^9, 3.7782509081781263`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.778160135500558*^9, 3.7781601660283003`*^9}, 
   3.77825090968812*^9, 3.7789028868156767`*^9, 3.778993226486435*^9, 
   3.7789937666758947`*^9, 3.779582058188818*^9, 3.796181940326294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"0", ",", "1"}], "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
     RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", "[", 
   RowBox[{"0", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"1", ",", "0"}], "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
     RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", "[", 
   RowBox[{"1", ",", "0"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"1", ",", "1"}], "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
     RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.778160172972253*^9, 3.778160213418281*^9}, {
  3.778250915518392*^9, 3.778250964297533*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7781601858507767`*^9, 3.778160214301977*^9}, 
   3.778250929615501*^9, 3.7782509653524313`*^9, 3.778993770333332*^9, 
   3.779582059602922*^9, 3.7961819412364283`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7781601858507767`*^9, 3.778160214301977*^9}, 
   3.778250929615501*^9, 3.7782509653524313`*^9, 3.778993770333332*^9, 
   3.779582059602922*^9, 3.7961819412465*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7781601858507767`*^9, 3.778160214301977*^9}, 
   3.778250929615501*^9, 3.7782509653524313`*^9, 3.778993770333332*^9, 
   3.779582059602922*^9, 3.796181941254809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"B", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.778250970049288*^9, 3.778250991201188*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"0", ",", "0"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7782509917688828`*^9, 3.778993234491496*^9, 
  3.779582061472951*^9, 3.796181945759276*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"0", ",", "0"}], "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
       RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"B", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], "+", 
       RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"B", "[", 
     RowBox[{"0", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"1", ",", "0"}], "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
       RowBox[{"\[Sigma]", "[", "3", "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"B", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", "[", "0", "]"}], "-", 
       RowBox[{"\[Sigma]", "[", "1", "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"B", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "u", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7782505953678093`*^9, 3.778250629105824*^9}, {
   3.77825099597771*^9, 3.778251049117607*^9}, {3.778997114385043*^9, 
   3.778997121797844*^9}, {3.778997160151774*^9, 3.778997161148075*^9}, 
   3.796181947116095*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778250631701116*^9, 3.778251052936681*^9, 
  3.778993237062685*^9, 3.778997162455043*^9, 3.779582062738535*^9, 
  3.796181949780003*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778250631701116*^9, 3.778251052936681*^9, 
  3.778993237062685*^9, 3.778997162455043*^9, 3.779582062738535*^9, 
  3.796181949791873*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778250631701116*^9, 3.778251052936681*^9, 
  3.778993237062685*^9, 3.778997162455043*^9, 3.779582062738535*^9, 
  3.796181949799905*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778250631701116*^9, 3.778251052936681*^9, 
  3.778993237062685*^9, 3.778997162455043*^9, 3.779582062738535*^9, 
  3.7961819498081284`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778250631701116*^9, 3.778251052936681*^9, 
  3.778993237062685*^9, 3.778997162455043*^9, 3.779582062738535*^9, 
  3.7961819498163853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"1", ",", "1"}], "]"}], ",", 
    RowBox[{"B", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7789934435723743`*^9, 3.778993482040411*^9}, {
  3.778997204658579*^9, 3.7789972203756247`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "4"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "4"]},
     {
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "4"], 
      FractionBox["1", "4"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "4"], 
      FractionBox["1", "4"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}]},
     {
      FractionBox["1", "4"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7789934833092003`*^9, {3.778997209979621*^9, 3.7789972214501457`*^9}, 
   3.77958206623936*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"L0", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]", ".", 
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"L0", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7961821081963263`*^9, 3.796182198583749*^9}, {
  3.796182253772377*^9, 3.7961822681566668`*^9}, {3.796301230482004*^9, 
  3.796301234912797*^9}, {3.79630127296481*^9, 3.796301280587985*^9}, {
  3.7963013276338654`*^9, 3.796301331634725*^9}, {3.796301941314082*^9, 
  3.796301947633276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "\[Rho]1", "]"}]], "Input",
 CellChangeTimes->{{3.796182201472995*^9, 3.796182211405949*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "1"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"1", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796182212385305*^9, 3.796182271385833*^9, 
  3.796301239738549*^9, 3.796301284090385*^9, 3.796301334225808*^9, 
  3.796301949999982*^9, 3.796301989919921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"L1", ",", "L1"}], "]"}], ".", "\[Rho]", ".", 
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"L1", ",", "L1"}], "]"}], "]"}]}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]2", "]"}]}], "Input",
 CellChangeTimes->{{3.796182449075038*^9, 3.796182483366242*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "1"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"1", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796182484494195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]3", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"L1", ",", "L1", ",", 
        RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]g", ".", 
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"L1", ",", "L1", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]3", "]"}]}], "Input",
 CellChangeTimes->{{3.796300836765161*^9, 3.796300870391173*^9}, {
  3.7963009108798237`*^9, 3.79630092183219*^9}, {3.796301146691497*^9, 
  3.796301164018283*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.796300871732744*^9, 3.796300922861974*^9, 3.796301132498118*^9, {
   3.796301165583456*^9, 3.796301178251484*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"L0", ",", 
    RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
    RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.796300967234851*^9, 3.796300972749291*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Sec", "[", "\[Theta]", "]"}], "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", 
      RowBox[{"Sec", "[", "\[Theta]", "]"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"Sec", "[", "\[Theta]", "]"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"Sec", "[", "\[Theta]", "]"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.796300974089575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P0000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"A00", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P0000", "]"}]}], "Input",
 CellChangeTimes->{{3.778160448831431*^9, 3.778160516436584*^9}, {
  3.77816524790012*^9, 3.7781652495510406`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778160517365994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P00", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P0000", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P0000", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P00", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q00", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"K0", ".", "P00", ".", "K0"}], 
    RowBox[{"(*", 
     RowBox[{"+", 
      RowBox[{"K1", ".", "P00", ".", "K1"}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Q00", "]"}], "\[IndentingNewLine]", 
 RowBox[{"q00", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"K0", ".", "\[Rho]B", ".", "K0"}], "+", 
     RowBox[{"K1", ".", "\[Rho]B", ".", "K1"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7781605230828323`*^9, 3.778160566179345*^9}, {
   3.778160600084201*^9, 3.778160653201542*^9}, {3.7782062917067747`*^9, 
   3.7782063879069233`*^9}, {3.778206444197919*^9, 3.778206462311219*^9}, 
   3.778207720814002*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778160653998065*^9, {3.7782063718029013`*^9, 3.778206388627305*^9}, 
   3.77820646446102*^9, {3.778207709147647*^9, 3.778207721831773*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778160653998065*^9, {3.7782063718029013`*^9, 3.778206388627305*^9}, 
   3.77820646446102*^9, {3.778207709147647*^9, 3.7782077218334703`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.778160653998065*^9, {3.7782063718029013`*^9, 3.778206388627305*^9}, 
   3.77820646446102*^9, {3.778207709147647*^9, 3.77820772183436*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P0100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"A01", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P0100", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P01", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P0100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P0100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P01", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q01", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"K0", ".", "P01", ".", "K0"}], 
    RowBox[{"(*", 
     RowBox[{"+", 
      RowBox[{"K1", ".", "P01", ".", "K1"}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Q01", "]"}]}], "Input",
 CellChangeTimes->{{3.778165263300063*^9, 3.778165272993676*^9}, {
   3.7781653407620277`*^9, 3.77816543215685*^9}, {3.778165462227545*^9, 
   3.778165510047868*^9}, {3.77816554405546*^9, 3.778165555252993*^9}, {
   3.778206508552882*^9, 3.7782065771716547`*^9}, 3.778207756160137*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778206588217496*^9, {3.778207757469043*^9, 3.778207766933226*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778206588217496*^9, {3.778207757469043*^9, 3.778207766936594*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778206588217496*^9, {3.778207757469043*^9, 3.7782077669384193`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P1000", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"A10", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P1000", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P10", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P1000", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P1000", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P10", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q10", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"K0", ".", "P10", ".", "K0"}], 
    RowBox[{"(*", 
     RowBox[{"+", 
      RowBox[{"K1", ".", "P10", ".", "K1"}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Q10", "]"}]}], "Input",
 CellChangeTimes->{{3.778165263300063*^9, 3.778165272993676*^9}, {
   3.7781653407620277`*^9, 3.77816543215685*^9}, {3.778165462227545*^9, 
   3.778165510047868*^9}, {3.77816554405546*^9, 3.778165555252993*^9}, {
   3.778206508552882*^9, 3.778206582443225*^9}, 3.778207800504767*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778206599361148*^9, 3.778207801749819*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778206599361148*^9, 3.778207801752459*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.778206599361148*^9, 3.778207801754428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P1100", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"A11", ",", 
       RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], ".", "\[Rho]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P1100", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P11", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"u", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P1100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"u", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"d", ",", 
          RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}], "]"}], ".", "P1100", 
       ".", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"d", ",", 
         RowBox[{"\[Sigma]", "[", "0", "]"}]}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P11", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q11", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"K0", ".", "P11", ".", "K0"}], "+", 
     RowBox[{"K1", ".", "P11", ".", "K1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Q11", "]"}]}], "Input",
 CellChangeTimes->{{3.778165263300063*^9, 3.778165272993676*^9}, {
   3.7781653407620277`*^9, 3.77816543215685*^9}, {3.778165462227545*^9, 
   3.778165510047868*^9}, {3.77816554405546*^9, 3.778165555252993*^9}, {
   3.778206508552882*^9, 3.778206582443225*^9}, 3.778207810633795*^9, {
   3.778210055479762*^9, 3.77821007827693*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778165556321554*^9, 3.778206604028514*^9, 3.7782078120060053`*^9, {
   3.778210064849663*^9, 3.778210087491459*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778165556321554*^9, 3.778206604028514*^9, 3.7782078120060053`*^9, {
   3.778210064849663*^9, 3.778210087494195*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778165556321554*^9, 3.778206604028514*^9, 3.7782078120060053`*^9, {
   3.778210064849663*^9, 3.778210087496551*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"m", ".", "mt"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778166360810466*^9, 3.77816636771227*^9}, {
  3.7781664112416887`*^9, 3.778166463939887*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.778166448421023*^9, 3.778166464994904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]B", "=", 
   RowBox[{"Simplify", "[", 
    FractionBox[
     RowBox[{"P00", "+", "P01", "+", "P10", "+", "P11"}], 
     RowBox[{"Simplify", "[", 
      RowBox[{"Tr", "[", 
       RowBox[{"P00", "+", "P01", "+", "P10", "+", "P11"}], "]"}], "]"}]], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "\[Rho]B", "]"}]}], "Input",
 CellChangeTimes->{{3.778205323290442*^9, 3.778205355665854*^9}, {
  3.7782068748254957`*^9, 3.778206932172607*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0"},
     {"0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7782053575681973`*^9, {3.7782068839774933`*^9, 3.778206892912942*^9}, 
   3.778206933321868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Tr", "[", 
   RowBox[{"K0", ".", "\[Rho]B", ".", "K0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778205389201261*^9, 3.7782054101787148`*^9}, {
  3.7782066944515333`*^9, 3.778206697562223*^9}, {3.778206727796348*^9, 
  3.778206730843504*^9}, {3.7782067652694693`*^9, 3.778206767980777*^9}, {
  3.778206949322671*^9, 3.77820695281773*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.778205412923897*^9, 3.778206698154894*^9, 3.7782067314119387`*^9, 
   3.778206768550709*^9, {3.7782069366095667`*^9, 3.7782069534976807`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "\[Theta]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7782067713108397`*^9, 3.7782067956141243`*^9}, {
  3.778206969275137*^9, 3.778206972707024*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.778206796813538*^9, 3.77820697356981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", " ", "Matrix"}]], "Code",
 CellChangeTimes->{{3.778250649511642*^9, 3.778250657327037*^9}}],

Cell[BoxData[
 RowBox[{"Correlation", " ", "Matrix"}]], "Output",
 CellChangeTimes->{3.778993204410858*^9, 3.7795820435729*^9, 
  3.798701687854192*^9, 3.799925365106229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7782507711226397`*^9, 3.7782508303646917`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "]"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "]"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}]}], "}"}]}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.778250804846298*^9, 3.778250831749647*^9}, 
   3.778993258866*^9, 3.778993352580698*^9, 3.778993502754757*^9, 
   3.77900249305442*^9, 3.779582343177164*^9, 3.793237675328454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{"B", "[", 
     RowBox[{"1", ",", "0"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778293047507758*^9, 3.778293112088603*^9}, {
  3.778993620744256*^9, 3.77899367080046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.778293073999188*^9, 3.778293112640593*^9}, {
   3.778993268042508*^9, 3.778993276825197*^9}, 3.778993374868457*^9, 
   3.778993510061483*^9, {3.778993622736281*^9, 3.77899365806835*^9}, 
   3.779002532590403*^9, 3.779582352259521*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "2"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "0"}], ",", 
     RowBox[{"j", "<", "2"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "0"}], ",", 
       RowBox[{"k", "<", "2"}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"l", "=", "0"}], ",", 
         RowBox[{"l", "<", "2"}], ",", 
         RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c", "[", 
           RowBox[{"i", ",", "k", ",", "j", ",", "l"}], "]"}], "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Tr", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], ",", 
                RowBox[{"B", "[", 
                 RowBox[{"k", ",", "l"}], "]"}]}], "]"}], ".", 
              RowBox[{"(", "\[Rho]", ")"}]}], ")"}], "]"}], "]"}]}]}], 
        "]"}]}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.778251129788726*^9, 3.778251256500998*^9}, {
  3.778251298408972*^9, 3.778251356401999*^9}, {3.778251433484424*^9, 
  3.778251438214374*^9}, {3.778252435243157*^9, 3.77825243955371*^9}, {
  3.778252472291395*^9, 3.778252605527623*^9}, {3.778252651040925*^9, 
  3.7782526878898783`*^9}, {3.778290972782641*^9, 3.778291000242855*^9}, {
  3.77829105134044*^9, 3.778291140957309*^9}, {3.7782912385127773`*^9, 
  3.7782913114672337`*^9}, {3.778292096932585*^9, 3.778292103324366*^9}, {
  3.778311566279151*^9, 3.77831157263946*^9}, {3.778311755989491*^9, 
  3.778311761653844*^9}, {3.7783120193586693`*^9, 3.7783120862336206`*^9}, {
  3.7783366615486727`*^9, 3.778336666990941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MatrixForm", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}]},
       {
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "]"}]},
       {
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]},
       {
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "]"}], 
        RowBox[{"c", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778311526619928*^9, 3.778311532547773*^9}, {
  3.778311579887927*^9, 3.7783116215443993`*^9}, {3.7783118152204742`*^9, 
  3.7783119678716*^9}, {3.778816727529356*^9, 3.7788167414134903`*^9}, {
  3.778816954030891*^9, 3.778816968431931*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0", "0", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7788167183404827`*^9, 3.7788167421905003`*^9}, 
   3.778993296941083*^9, 3.778997288534025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}]},
      {
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "]"}]},
      {
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]},
      {
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "]"}], 
       RowBox[{"c", "[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "3", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "3", "]"}]}], "]"}], "."}], "*)"}], 
   TagBox[
    RowBox[{"\[IndentingNewLine]", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}], 
         FractionBox["\[Delta]", "2"], 
         FractionBox["\[Delta]", "2"], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}], 
         FractionBox["\[Delta]", "2"], 
         FractionBox["\[Delta]", "2"], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}], 
         FractionBox["\[Delta]", "2"], 
         FractionBox["\[Delta]", "2"], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Delta]", "2"]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Epsilon]", "2"]}], 
         FractionBox["\[Epsilon]", "2"], 
         FractionBox["\[Epsilon]", "2"], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Epsilon]", "2"]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   RowBox[{"(*", 
    RowBox[{".", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", "3", "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "3", "]"}]}], "]"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.780114154914143*^9, 3.780114247226039*^9}, 
   3.780114314758189*^9, {3.7801143488117533`*^9, 3.780114349701507*^9}, {
   3.7801145671888227`*^9, 3.780114576129262*^9}, {3.793239956692844*^9, 
   3.7932399667486486`*^9}, {3.793240119862612*^9, 3.793240242011655*^9}, {
   3.793328649532708*^9, 3.793328671708405*^9}, {3.793328760029949*^9, 
   3.793328797984767*^9}, {3.7933288456169977`*^9, 3.7933288489259567`*^9}, {
   3.793328990809823*^9, 3.793329068793291*^9}, {3.793329133680228*^9, 
   3.7933291595100803`*^9}, 3.793329213156046*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox["\[Delta]", "2"], ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Delta]"}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", "\[Epsilon]"}], "2"], ",", 
     FractionBox["\[Epsilon]", "2"], ",", 
     FractionBox["\[Epsilon]", "2"], ",", 
     FractionBox[
      RowBox[{"1", "-", "\[Epsilon]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780114355233445*^9, 3.7801144241294127`*^9, 
  3.780114577214993*^9, 3.793239970771139*^9, 3.79324024341461*^9, 
  3.793240473035872*^9, 3.793328854935985*^9, 3.7933290732021027`*^9, 
  3.793329161110544*^9, 3.793329214399459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"\[Pi]", "/", "4"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   FractionBox["1", "10"]}], " ", ";", 
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c00", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}], "+", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c01", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "]"}], "+", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c10", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "]"}], "+", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c11", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "]"}], "-", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "]"}], "+", 
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c00", "+", "c10"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c01", "+", "c11"}], ")"}], "^", "2"}]}], "]"}], "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c00", "-", "c10"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c01", "-", "c11"}], ")"}], "^", "2"}]}], "]"}]}], "]"}], "//",
   "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "\[Epsilon]"}], "}"}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "\[Delta]", ",", "\[Epsilon]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.778815495432461*^9, 3.7788155357237043`*^9}, {
   3.778815569659651*^9, 3.778815849497745*^9}, {3.778815943643409*^9, 
   3.778815953807837*^9}, 3.778816590659528*^9, {3.778816750887661*^9, 
   3.77881679836308*^9}, {3.778816891337771*^9, 3.7788169367105627`*^9}, {
   3.778816973130357*^9, 3.7788170031535788`*^9}, {3.7788172590228853`*^9, 
   3.778817279227373*^9}, {3.779582169320479*^9, 3.779582181794256*^9}, {
   3.7795822168218403`*^9, 3.779582225383934*^9}, {3.779582260771784*^9, 
   3.779582323214101*^9}, {3.7795824405672407`*^9, 3.779582464703207*^9}, {
   3.7795828562218847`*^9, 3.779582929632826*^9}, {3.7795829800978203`*^9, 
   3.779583039040514*^9}, {3.7801143766803226`*^9, 3.7801144640104103`*^9}, {
   3.793239976281838*^9, 3.793239976991991*^9}, {3.79324039963783*^9, 
   3.7932404541727552`*^9}, {3.793240510141597*^9, 3.7932405108056602`*^9}, {
   3.793240565580923*^9, 3.7932405798449373`*^9}, {3.793328874456067*^9, 
   3.793328947056796*^9}, {3.7933291063780622`*^9, 3.793329109937895*^9}, {
   3.7933291862963343`*^9, 3.7933291911142597`*^9}}],

Cell[BoxData[
 FractionBox["4", "5"]], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.793329217361071*^9}}],

Cell[BoxData[
 FractionBox["4", "5"]], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.793329217369779*^9}}],

Cell[BoxData[
 FractionBox["4", "5"]], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.793329217375648*^9}}],

Cell[BoxData[
 FractionBox["4", "5"]], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.793329217380803*^9}}],

Cell[BoxData["2.2627416997969525`"], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.7933292173876543`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.1`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.778815808472745*^9, 3.778815850367573*^9, {3.778815944728654*^9, 
   3.7788159550061817`*^9}, 3.7788165925434513`*^9, {3.778816780921324*^9, 
   3.778816799474001*^9}, {3.778816899051517*^9, 3.778816937889245*^9}, {
   3.778816986598549*^9, 3.778817004002254*^9}, {3.7788172686990223`*^9, 
   3.778817283361115*^9}, 3.779582326737059*^9, 3.77958236345896*^9, {
   3.7795824415950527`*^9, 3.779582465531705*^9}, 3.7795829341979523`*^9, {
   3.77958303341928*^9, 3.779583040620509*^9}, 3.7801143607856417`*^9, {
   3.780114399080159*^9, 3.780114465230413*^9}, 3.780114582026168*^9, 
   3.793239978152664*^9, 3.793240250718912*^9, {3.7932404553509407`*^9, 
   3.793240475834874*^9}, 3.793240511886705*^9, {3.793240567745111*^9, 
   3.793240580919636*^9}, 3.793328612585573*^9, {3.793328859110043*^9, 
   3.793328950508143*^9}, 3.793329077281128*^9, 3.793329110852676*^9, {
   3.793329162555406*^9, 3.793329217394987*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Epsilon]"}], ")"}], "2"]]}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"4", " ", "\[Delta]"}]}], ")"}], "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Delta]", "+", "\[Epsilon]"}], ")"}], 
         "2"]}]}]]}], "\[Equal]", 
    RowBox[{"2", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Delta]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.79324027110776*^9, 3.7932403036229486`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Delta]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox["2"], "-", 
        RowBox[{"2", " ", "\[Epsilon]"}], "-", 
        SqrtBox[
         RowBox[{"11", "+", 
          RowBox[{"6", " ", 
           SqrtBox["2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]"}], "-", 
          RowBox[{"12", " ", 
           SqrtBox["2"], " ", "\[Epsilon]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox["2"], "-", 
        RowBox[{"2", " ", "\[Epsilon]"}], "+", 
        SqrtBox[
         RowBox[{"11", "+", 
          RowBox[{"6", " ", 
           SqrtBox["2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]"}], "-", 
          RowBox[{"12", " ", 
           SqrtBox["2"], " ", "\[Epsilon]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        SqrtBox["2"], "-", 
        RowBox[{"2", " ", "\[Epsilon]"}], "-", 
        SqrtBox[
         RowBox[{"11", "-", 
          RowBox[{"6", " ", 
           SqrtBox["2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]"}], "+", 
          RowBox[{"12", " ", 
           SqrtBox["2"], " ", "\[Epsilon]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        SqrtBox["2"], "-", 
        RowBox[{"2", " ", "\[Epsilon]"}], "+", 
        SqrtBox[
         RowBox[{"11", "-", 
          RowBox[{"6", " ", 
           SqrtBox["2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]"}], "+", 
          RowBox[{"12", " ", 
           SqrtBox["2"], " ", "\[Epsilon]"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7932403049227343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"\[IndentingNewLine]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", "\[Delta]"}], 
        RowBox[{
         FractionBox["1", "2"], "-", "\[Delta]", "+", 
         SuperscriptBox["\[Delta]", "2"]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", "\[Epsilon]", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Epsilon]"}], ")"}]}], " ", 
         "\[Epsilon]"}], 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Epsilon]"}], ")"}]}], " ", 
         "\[Epsilon]"}], 
        RowBox[{
         FractionBox["1", "2"], "-", "\[Epsilon]", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}], 
      FractionBox["\[Delta]", "2"], 
      FractionBox["\[Delta]", "2"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}], 
      FractionBox["\[Delta]", "2"], 
      FractionBox["\[Delta]", "2"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}], 
      FractionBox["\[Delta]", "2"], 
      FractionBox["\[Delta]", "2"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Delta]", "2"]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Epsilon]", "2"]}], 
      FractionBox["\[Epsilon]", "2"], 
      FractionBox["\[Epsilon]", "2"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["\[Epsilon]", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{3.7933290978315887`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.780114672792029*^9, 3.780114676216839*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Delta]"}], ")"}]}], "+", 
   RowBox[{"\[Delta]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "-", 
      RowBox[{"\[Delta]", "/", "2"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.793328530847168*^9, 3.793328578517971*^9}, {
  3.793328703421404*^9, 3.793328732691936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], " ", 
  "\[Delta]"}]], "Output",
 CellChangeTimes->{3.793328582365408*^9, 3.793328735634399*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "0"},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "0", "0", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]},
        {
         FractionBox[
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
        {
         FractionBox[
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
        {
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}], "0"},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778312818777382*^9, 3.7783128302111692`*^9}, {
  3.778312861291546*^9, 3.77831286945403*^9}, {3.778817105328162*^9, 
  3.778817208636956*^9}, {3.7788975227478857`*^9, 3.778897552233363*^9}, {
  3.778897582332509*^9, 3.778897761756321*^9}, {3.778897816141285*^9, 
  3.77889784020965*^9}, {3.778897883468557*^9, 3.778898037113665*^9}, {
  3.778898327307959*^9, 3.778898406063487*^9}, {3.7788990624733877`*^9, 
  3.7788990717473*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "0", "0", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"], 
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.778312830689996*^9, 3.778312869970969*^9, {3.778817127006978*^9, 
   3.7788171454866743`*^9}, 3.778817177039631*^9, 3.778817209936358*^9, 
   3.77889755457517*^9, {3.7788975862536163`*^9, 3.7788976689275093`*^9}, {
   3.778897706287671*^9, 3.778897762838073*^9}, 3.778897841182763*^9, {
   3.7788978983211613`*^9, 3.778897925924193*^9}, {3.7788979847001343`*^9, 
   3.778898038689848*^9}, 3.778898351255094*^9, {3.778898390276321*^9, 
   3.7788984077345123`*^9}, 3.778899074210634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", "0", "]"}], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a1", "a2"},
        {"a3", "a4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.778336320509883*^9, 3.778336336196073*^9}, {
  3.778336424345838*^9, 3.778336447657669*^9}, {3.77889737605231*^9, 
  3.778897467809663*^9}, {3.7788981198805723`*^9, 3.778898132138007*^9}, {
  3.778898164707892*^9, 3.778898181784533*^9}, {3.778898224085472*^9, 
  3.778898288551372*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "0", "0"},
     {"a3", "a4", "0", "0"},
     {"0", "0", "a1", "a2"},
     {"0", "0", "a3", "a4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.778336321438566*^9, 3.7783363370038633`*^9}, {
   3.7783364252085943`*^9, 3.778336451009364*^9}, 3.778897427668445*^9, 
   3.778897468786178*^9, {3.77889813282411*^9, 3.778898145730948*^9}, {
   3.778898182697151*^9, 3.7788981941577663`*^9}, {3.778898225232332*^9, 
   3.778898237970725*^9}, 3.778898289555345*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.778251461838627*^9, 3.7782516569896393`*^9}, {
   3.7782926325118313`*^9, 3.778292748984724*^9}, {3.778293268669284*^9, 
   3.7782932872509403`*^9}, {3.7782933598513517`*^9, 3.778293379085202*^9}, {
   3.778293425977849*^9, 3.7782934995445957`*^9}, {3.778336458738742*^9, 
   3.778336623269409*^9}, {3.778336689563846*^9, 3.778336766456098*^9}, {
   3.77833682368443*^9, 3.77833684067985*^9}, {3.778336946011424*^9, 
   3.778336949924432*^9}, {3.778336990774556*^9, 3.77833699438247*^9}, {
   3.7783370376084414`*^9, 3.778337096054186*^9}, 3.778337131417119*^9, {
   3.778337280790544*^9, 3.778337284959556*^9}, {3.778337315551631*^9, 
   3.778337318140646*^9}, {3.7783373697927837`*^9, 3.778337407856615*^9}, {
   3.778998000886169*^9, 3.778998085861656*^9}, 3.78011452654011*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7801145332598124`*^9, 3.780114533282733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c0011", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0111", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1011", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1111", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.77829318643655*^9, 3.778293216224715*^9}, {
  3.778293309888454*^9, 3.778293350480424*^9}, {3.778293393427527*^9, 
  3.7782934181131773`*^9}, {3.7782934574196167`*^9, 3.7782934661414843`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7782932170184717`*^9, {3.778293338242619*^9, 3.778293351325715*^9}, 
   3.778293419720901*^9, 3.778293467168274*^9, 3.778997497732937*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7782932170184717`*^9, {3.778293338242619*^9, 3.778293351325715*^9}, 
   3.778293419720901*^9, 3.778293467168274*^9, 3.7789974977547617`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7782932170184717`*^9, {3.778293338242619*^9, 3.778293351325715*^9}, 
   3.778293419720901*^9, 3.778293467168274*^9, 3.7789974977714653`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7782932170184717`*^9, {3.778293338242619*^9, 3.778293351325715*^9}, 
   3.778293419720901*^9, 3.778293467168274*^9, 3.778997497787822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c0000", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0100", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1000", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1100", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0001", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0101", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1001", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1101", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0010", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0110", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1010", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1110", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0011", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c0111", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1011", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"c1111", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ".", "\[Rho]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.778251745689639*^9, 3.778251888880814*^9}, {
  3.778251924518428*^9, 3.778252028342823*^9}, {3.778296186625211*^9, 
  3.778296431055155*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505212133*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505224092*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052299633`*^9}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505234439*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052386923`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505242626*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052461853`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052518272`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052574863`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505261031*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505264529*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505268116*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052718487`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.778997505275571*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052792788`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.778251762305437*^9, 3.778252029378666*^9, 3.778296300403492*^9, {
   3.7782963350582523`*^9, 3.7782963481800413`*^9}, 3.778296432603963*^9, 
   3.7789975052829103`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1386, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 162, 2, 52, "Subsubsection"],
Cell[744, 26, 2423, 61, 255, "Input"],
Cell[CellGroupData[{
Cell[3192, 91, 299, 8, 43, "Input"],
Cell[3494, 101, 117, 2, 43, "Output"]
}, Open  ]],
Cell[3626, 106, 3305, 100, 319, "Input"],
Cell[CellGroupData[{
Cell[6956, 210, 952, 28, 119, "Input"],
Cell[7911, 240, 1561, 39, 225, "Output"]
}, Open  ]],
Cell[9487, 282, 1067, 30, 119, "Input"],
Cell[CellGroupData[{
Cell[10579, 316, 1151, 34, 144, "Input"],
Cell[11733, 352, 1438, 36, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13208, 393, 1463, 40, 144, "Input"],
Cell[14674, 435, 2532, 60, 433, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17243, 500, 1382, 40, 144, "Input"],
Cell[18628, 542, 2533, 60, 450, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21198, 607, 2056, 58, 151, "Input"],
Cell[23257, 667, 2169, 49, 492, "Output"]
}, Open  ]]
}, Open  ]],
Cell[25453, 720, 290, 7, 76, "Subsubsection"],
Cell[CellGroupData[{
Cell[25768, 731, 159, 2, 41, "Subsubsection"],
Cell[CellGroupData[{
Cell[25952, 737, 8065, 210, 685, "Input"],
Cell[34020, 949, 1691, 42, 149, "Output"]
}, Open  ]],
Cell[35726, 994, 3342, 96, 214, "Input"],
Cell[CellGroupData[{
Cell[39093, 1094, 144, 2, 108, "Code"],
Cell[39240, 1098, 127, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39404, 1105, 22119, 573, 2856, "Input"],
Cell[61526, 1680, 790, 21, 132, "Output"],
Cell[62319, 1703, 720, 19, 126, "Output"],
Cell[63042, 1724, 722, 19, 126, "Output"],
Cell[63767, 1745, 789, 21, 132, "Output"],
Cell[64559, 1768, 1208, 33, 174, "Output"],
Cell[65770, 1803, 1256, 35, 174, "Output"],
Cell[67029, 1840, 1256, 35, 174, "Output"],
Cell[68288, 1877, 1208, 33, 174, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69533, 1915, 22171, 574, 2856, "Input"],
Cell[91707, 2491, 793, 22, 150, "Output"],
Cell[92503, 2515, 793, 22, 150, "Output"],
Cell[93299, 2539, 795, 22, 150, "Output"],
Cell[94097, 2563, 795, 22, 150, "Output"],
Cell[94895, 2587, 795, 22, 150, "Output"],
Cell[95693, 2611, 793, 22, 150, "Output"],
Cell[96489, 2635, 793, 22, 150, "Output"],
Cell[97285, 2659, 793, 22, 150, "Output"]
}, Open  ]],
Cell[98093, 2684, 5756, 169, 730, "Input"],
Cell[103852, 2855, 5422, 156, 325, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109311, 3016, 304, 5, 78, "Subsubsection"],
Cell[CellGroupData[{
Cell[109640, 3025, 205, 4, 108, "Code"],
Cell[109848, 3031, 165, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110050, 3039, 2013, 55, 403, "Input"],
Cell[112066, 3096, 1284, 28, 126, "Output"],
Cell[113353, 3126, 1288, 28, 126, "Output"],
Cell[114644, 3156, 1363, 31, 150, "Output"],
Cell[116010, 3189, 1363, 31, 150, "Output"],
Cell[117376, 3222, 833, 16, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118246, 3243, 191, 4, 108, "Code"],
Cell[118440, 3249, 187, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118664, 3258, 1758, 51, 414, "Input"],
Cell[120425, 3311, 801, 22, 135, "Output"],
Cell[121229, 3335, 801, 22, 135, "Output"],
Cell[122033, 3359, 833, 23, 135, "Output"],
Cell[122869, 3384, 831, 23, 135, "Output"],
Cell[123703, 3409, 332, 9, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124072, 3423, 195, 4, 108, "Code"],
Cell[124270, 3429, 161, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124468, 3437, 4570, 134, 819, "Input"],
Cell[129041, 3573, 1043, 25, 144, "Output"],
Cell[130087, 3600, 1046, 25, 144, "Output"],
Cell[131136, 3627, 1098, 27, 150, "Output"],
Cell[132237, 3656, 1141, 28, 156, "Output"],
Cell[133381, 3686, 1037, 27, 94, "Output"],
Cell[134421, 3715, 1098, 27, 144, "Output"],
Cell[135522, 3744, 1098, 27, 144, "Output"],
Cell[136623, 3773, 1127, 28, 189, "Output"],
Cell[137753, 3803, 1171, 29, 189, "Output"],
Cell[138927, 3834, 1125, 30, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140089, 3869, 198, 3, 108, "Code"],
Cell[140290, 3874, 142, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140469, 3881, 613, 16, 64, "Input"],
Cell[141085, 3899, 300, 6, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141422, 3910, 484, 12, 64, "Input"],
Cell[141909, 3924, 301, 6, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142247, 3935, 1053, 26, 103, "Input"],
Cell[143303, 3963, 418, 8, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143758, 3976, 147, 2, 108, "Code"],
Cell[143908, 3980, 130, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144075, 3987, 1154, 30, 178, "Input"],
Cell[145232, 4019, 224, 5, 67, "Output"],
Cell[145459, 4026, 224, 5, 67, "Output"],
Cell[145686, 4033, 224, 5, 67, "Output"],
Cell[145913, 4040, 224, 5, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146174, 4050, 132, 2, 108, "Code"],
Cell[146309, 4054, 108, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146454, 4061, 513, 14, 64, "Input"],
Cell[146970, 4077, 176, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147183, 4086, 1183, 30, 141, "Input"],
Cell[148369, 4118, 254, 5, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148660, 4128, 4703, 124, 553, "Input"],
Cell[153366, 4254, 393, 8, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153796, 4267, 163, 3, 64, "Input"],
Cell[153962, 4272, 70, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154069, 4278, 163, 3, 64, "Input"],
Cell[154235, 4283, 117, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154389, 4290, 213, 4, 64, "Input"],
Cell[154605, 4296, 123, 2, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154777, 4304, 235, 3, 78, "Subsubsection"],
Cell[155015, 4309, 3266, 102, 531, "Input"],
Cell[CellGroupData[{
Cell[158306, 4415, 772, 20, 117, "Input"],
Cell[159081, 4437, 759, 22, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159877, 4464, 308, 9, 93, "Input"],
Cell[160188, 4475, 463, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160688, 4496, 1166, 32, 288, "Input"],
Cell[161857, 4530, 627, 20, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162521, 4555, 308, 9, 93, "Input"],
Cell[162832, 4566, 500, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163369, 4587, 1615, 29, 178, "Input"],
Cell[164987, 4618, 1146, 17, 64, "Output"],
Cell[166136, 4637, 1143, 17, 64, "Output"]
}, Open  ]],
Cell[167294, 4657, 122, 2, 108, "Code"],
Cell[167419, 4661, 4941, 85, 1057, "Input"],
Cell[172363, 4748, 125, 2, 108, "Code"],
Cell[CellGroupData[{
Cell[172513, 4754, 1865, 33, 178, "Input"],
Cell[174381, 4789, 379, 6, 64, "Output"]
}, Open  ]],
Cell[174775, 4798, 6127, 102, 1057, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180939, 4905, 283, 3, 78, "Subsubsection"],
Cell[181225, 4910, 5842, 190, 981, "Input"],
Cell[CellGroupData[{
Cell[187092, 5104, 2003, 65, 516, "Input"],
Cell[189098, 5171, 442, 16, 97, "Output"],
Cell[189543, 5189, 696, 24, 129, "Output"],
Cell[190242, 5215, 694, 24, 129, "Output"],
Cell[190939, 5241, 467, 16, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191443, 5262, 925, 20, 253, "Input"],
Cell[192371, 5284, 165, 2, 64, "Output"],
Cell[192539, 5288, 162, 2, 64, "Output"],
Cell[192704, 5292, 179, 4, 70, "Output"],
Cell[192886, 5298, 156, 3, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193079, 5306, 2900, 89, 388, "Input"],
Cell[195982, 5397, 16227, 280, 550, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212246, 5682, 2235, 59, 249, "Input"],
Cell[214484, 5743, 7372, 129, 525, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221893, 5877, 1244, 39, 186, "Input"],
Cell[223140, 5918, 99, 1, 64, "Output"],
Cell[223242, 5921, 158, 3, 64, "Output"]
}, Open  ]],
Cell[223415, 5927, 161, 3, 108, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223613, 5935, 159, 2, 78, "Subsubsection"],
Cell[CellGroupData[{
Cell[223797, 5941, 9513, 237, 1477, "Input"],
Cell[233313, 6180, 2069, 50, 399, "Output"]
}, Open  ]],
Cell[235397, 6233, 4645, 116, 750, "Input"],
Cell[CellGroupData[{
Cell[240067, 6353, 666, 17, 64, "Input"],
Cell[240736, 6372, 203, 5, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240976, 6382, 641, 15, 64, "Input"],
Cell[241620, 6399, 154, 4, 67, "Output"]
}, Open  ]],
Cell[241789, 6406, 2545, 70, 124, "Input"],
Cell[CellGroupData[{
Cell[244359, 6480, 692, 14, 64, "Input"],
Cell[245054, 6496, 2401, 56, 663, "Output"]
}, Open  ]],
Cell[247470, 6555, 400, 7, 108, "Code"],
Cell[247873, 6564, 6774, 175, 828, "Input"],
Cell[CellGroupData[{
Cell[254672, 6743, 274, 5, 64, "Input"],
Cell[254949, 6750, 1072, 27, 366, "Output"]
}, Open  ]],
Cell[256036, 6780, 184, 3, 108, "Code"],
Cell[CellGroupData[{
Cell[256245, 6787, 852, 22, 93, "Input"],
Cell[257100, 6811, 491, 17, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257628, 6833, 803, 21, 93, "Input"],
Cell[258434, 6856, 525, 17, 97, "Output"]
}, Open  ]],
Cell[258974, 6876, 354, 7, 108, "Code"],
Cell[259331, 6885, 12383, 288, 1242, "Input"],
Cell[CellGroupData[{
Cell[271739, 7177, 201, 4, 64, "Input"],
Cell[271943, 7183, 2123, 66, 234, "Output"]
}, Open  ]],
Cell[274081, 7252, 184, 3, 108, "Code"],
Cell[CellGroupData[{
Cell[274290, 7259, 1205, 34, 163, "Input"],
Cell[275498, 7295, 466, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276001, 7316, 1205, 34, 163, "Input"],
Cell[277209, 7352, 464, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277710, 7373, 1204, 34, 163, "Input"],
Cell[278917, 7409, 466, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279420, 7430, 1202, 34, 163, "Input"],
Cell[280625, 7466, 504, 16, 97, "Output"]
}, Open  ]],
Cell[281144, 7485, 303, 6, 108, "Code"],
Cell[281450, 7493, 18653, 410, 1713, "Input"],
Cell[CellGroupData[{
Cell[300128, 7907, 395, 7, 64, "Input"],
Cell[300526, 7916, 2368, 68, 159, "Output"]
}, Open  ]],
Cell[302909, 7987, 184, 3, 108, "Code"],
Cell[303096, 7992, 2225, 57, 382, "Input"],
Cell[CellGroupData[{
Cell[305346, 8053, 251, 5, 64, "Input"],
Cell[305600, 8060, 2096, 62, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307733, 8127, 2147, 61, 295, "Input"],
Cell[309883, 8190, 442, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310362, 8211, 2149, 61, 295, "Input"],
Cell[312514, 8274, 442, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312993, 8295, 2146, 61, 295, "Input"],
Cell[315142, 8358, 442, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315621, 8379, 2195, 62, 295, "Input"],
Cell[317819, 8443, 442, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318298, 8464, 2146, 61, 295, "Input"],
Cell[320447, 8527, 444, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320928, 8548, 2147, 61, 295, "Input"],
Cell[323078, 8611, 444, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323559, 8632, 2197, 62, 295, "Input"],
Cell[325759, 8696, 442, 16, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326238, 8717, 2172, 62, 295, "Input"],
Cell[328413, 8781, 500, 16, 97, "Output"]
}, Open  ]]
}, Open  ]],
Cell[328940, 8801, 100, 1, 78, "Subsubsection"],
Cell[CellGroupData[{
Cell[329065, 8806, 159, 2, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[329249, 8812, 8468, 221, 1177, "Input"],
Cell[337720, 9035, 1605, 46, 241, "Output"],
Cell[339328, 9083, 1157, 29, 193, "Output"]
}, Open  ]],
Cell[340500, 9115, 3832, 111, 348, "Input"],
Cell[CellGroupData[{
Cell[344357, 9230, 144, 2, 108, "Code"],
Cell[344504, 9234, 127, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344668, 9241, 22214, 574, 2856, "Input"],
Cell[366885, 9817, 987, 27, 117, "Output"],
Cell[367875, 9846, 987, 27, 117, "Output"],
Cell[368865, 9875, 989, 27, 117, "Output"],
Cell[369857, 9904, 796, 21, 100, "Output"],
Cell[370656, 9927, 1962, 56, 133, "Output"],
Cell[372621, 9985, 2013, 58, 133, "Output"],
Cell[374637, 10045, 1962, 56, 133, "Output"],
Cell[376602, 10103, 2010, 58, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378649, 10166, 22267, 575, 2856, "Input"],
Cell[400919, 10743, 1540, 43, 133, "Output"],
Cell[402462, 10788, 1590, 45, 133, "Output"],
Cell[404055, 10835, 911, 25, 117, "Output"],
Cell[404969, 10862, 911, 25, 117, "Output"],
Cell[405883, 10889, 1540, 43, 133, "Output"],
Cell[407426, 10934, 913, 25, 117, "Output"],
Cell[408342, 10961, 1588, 45, 133, "Output"],
Cell[409933, 11008, 911, 25, 117, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[410893, 11039, 186, 2, 78, "Subsubsection"],
Cell[CellGroupData[{
Cell[411104, 11045, 205, 4, 108, "Code"],
Cell[411312, 11051, 162, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411511, 11059, 3774, 110, 778, "Input"],
Cell[415288, 11171, 1297, 32, 123, "Output"],
Cell[416588, 11205, 1274, 28, 117, "Output"],
Cell[417865, 11235, 1274, 28, 117, "Output"],
Cell[419142, 11265, 1380, 32, 160, "Output"],
Cell[420525, 11299, 1425, 33, 160, "Output"],
Cell[421953, 11334, 1295, 32, 123, "Output"]
}, Open  ]],
Cell[423263, 11369, 536, 15, 100, "Input"],
Cell[CellGroupData[{
Cell[423824, 11388, 130, 2, 108, "Code"],
Cell[423957, 11392, 130, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424124, 11399, 583, 13, 64, "Input"],
Cell[424710, 11414, 380, 8, 106, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425139, 11428, 179, 2, 78, "Subsubsection"],
Cell[425321, 11432, 3345, 105, 585, "Input"],
Cell[428669, 11539, 964, 26, 222, "Input"],
Cell[CellGroupData[{
Cell[429658, 11569, 2916, 87, 367, "Input"],
Cell[432577, 11658, 2781, 85, 250, "Output"]
}, Open  ]],
Cell[435373, 11746, 2015, 51, 414, "Input"],
Cell[CellGroupData[{
Cell[437413, 11801, 3215, 88, 268, "Input"],
Cell[440631, 11891, 3093, 88, 214, "Output"]
}, Open  ]],
Cell[443739, 11982, 1168, 37, 121, "Input"],
Cell[CellGroupData[{
Cell[444932, 12023, 2881, 61, 267, "Input"],
Cell[447816, 12086, 178856, 2916, 661, 143648, 2339, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[626687, 15005, 202278, 3295, 327, 167566, 2725, "CachedBoxData", \
"BoxData", "Input"],
Cell[828968, 18302, 3838, 73, 700, "Input"],
Cell[CellGroupData[{
Cell[832831, 18379, 338, 8, 64, "Input"],
Cell[833172, 18389, 463, 12, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833672, 18406, 399, 9, 64, "Input"],
Cell[834074, 18417, 2274, 73, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836385, 18495, 1427, 35, 216, "Input"],
Cell[837815, 18532, 1909, 46, 343, "Output"],
Cell[839727, 18580, 2211, 53, 343, "Output"],
Cell[841941, 18635, 1567, 38, 343, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843545, 18678, 168, 2, 64, "Input"],
Cell[843716, 18682, 1376, 35, 343, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845129, 18722, 137, 2, 64, "Input"],
Cell[845269, 18726, 692, 24, 325, "Output"]
}, Open  ]],
Cell[845976, 18753, 164, 2, 64, "Input"],
Cell[CellGroupData[{
Cell[846165, 18759, 2786, 70, 345, "Input"],
Cell[848954, 18831, 1182, 29, 130, "Output"]
}, Open  ]],
Cell[850151, 18863, 4090, 97, 100, "Input"],
Cell[854244, 18962, 2905, 80, 180, "Input"],
Cell[CellGroupData[{
Cell[857174, 19046, 788, 21, 117, "Input"],
Cell[857965, 19069, 324, 11, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[858326, 19085, 1187, 26, 216, "Input"],
Cell[859516, 19113, 2681, 69, 370, "Output"],
Cell[862200, 19184, 1635, 39, 343, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863872, 19228, 720, 16, 103, "Input"],
Cell[864595, 19246, 12196, 285, 1360, "Output"]
}, Open  ]],
Cell[876806, 19534, 85, 1, 64, "Input"],
Cell[876894, 19537, 2751, 71, 142, "Input"],
Cell[CellGroupData[{
Cell[879670, 19612, 641, 15, 103, "Input"],
Cell[880314, 19629, 2764, 76, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883115, 19710, 288, 7, 64, "Input"],
Cell[883406, 19719, 386, 10, 64, "Output"]
}, Open  ]],
Cell[883807, 19732, 446, 8, 108, "Code"],
Cell[CellGroupData[{
Cell[884278, 19744, 2693, 73, 142, "Input"],
Cell[886974, 19819, 5192, 143, 846, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892203, 19967, 137, 2, 64, "Input"],
Cell[892343, 19971, 162, 4, 90, "Output"]
}, Open  ]],
Cell[892520, 19978, 7280, 191, 904, "Input"],
Cell[CellGroupData[{
Cell[899825, 20173, 324, 6, 64, "Input"],
Cell[900152, 20181, 2119, 64, 441, "Output"]
}, Open  ]],
Cell[902286, 20248, 184, 3, 108, "Code"],
Cell[CellGroupData[{
Cell[902495, 20255, 852, 22, 93, "Input"],
Cell[903350, 20279, 4515, 124, 442, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907902, 20408, 803, 21, 93, "Input"],
Cell[908708, 20431, 4200, 115, 355, "Output"]
}, Open  ]],
Cell[912923, 20549, 2015, 59, 337, "Input"],
Cell[CellGroupData[{
Cell[914963, 20612, 954, 28, 166, "Input"],
Cell[915920, 20642, 181990, 2957, 463, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097947, 23604, 902, 27, 213, "Input"],
Cell[1098852, 23633, 350, 7, 64, "Output"],
Cell[1099205, 23642, 285, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099527, 23651, 1799, 51, 328, "Input"],
Cell[1101329, 23704, 868, 30, 361, "Output"],
Cell[1102200, 23736, 2111, 68, 361, "Output"]
}, Open  ]],
Cell[1104326, 23807, 2909, 82, 309, "Input"],
Cell[CellGroupData[{
Cell[1107260, 23893, 567, 13, 103, "Input"],
Cell[1107830, 23908, 1283, 29, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109150, 23942, 153, 2, 108, "Code"],
Cell[1109306, 23946, 202, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109545, 23954, 255, 7, 64, "Input"],
Cell[1109803, 23963, 565, 17, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1110405, 23985, 484, 14, 144, "Input"],
Cell[1110892, 24001, 796, 20, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1111725, 24026, 1208, 38, 384, "Input"],
Cell[1112936, 24066, 875, 24, 130, "Output"],
Cell[1113814, 24092, 771, 20, 100, "Output"],
Cell[1114588, 24114, 919, 26, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115544, 24145, 255, 7, 64, "Input"],
Cell[1115802, 24154, 516, 16, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1116355, 24175, 1900, 55, 583, "Input"],
Cell[1118258, 24232, 743, 20, 100, "Output"],
Cell[1119004, 24254, 843, 24, 130, "Output"],
Cell[1119850, 24280, 743, 20, 100, "Output"],
Cell[1120596, 24302, 891, 26, 130, "Output"],
Cell[1121490, 24330, 735, 20, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122262, 24355, 361, 9, 64, "Input"],
Cell[1122626, 24366, 1363, 46, 235, "Output"]
}, Open  ]],
Cell[1124004, 24415, 848, 19, 64, "Input"],
Cell[CellGroupData[{
Cell[1124877, 24438, 135, 2, 64, "Input"],
Cell[1125015, 24442, 839, 22, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125891, 24469, 595, 15, 103, "Input"],
Cell[1126489, 24486, 701, 20, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127227, 24511, 798, 19, 141, "Input"],
Cell[1128028, 24532, 1066, 26, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129131, 24563, 281, 6, 64, "Input"],
Cell[1129415, 24571, 1304, 33, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130756, 24609, 441, 11, 103, "Input"],
Cell[1131200, 24622, 882, 25, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132119, 24652, 1715, 45, 253, "Input"],
Cell[1133837, 24699, 819, 22, 106, "Output"],
Cell[1134659, 24723, 821, 22, 106, "Output"],
Cell[1135483, 24747, 191, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135711, 24755, 1851, 48, 291, "Input"],
Cell[1137565, 24805, 1726, 49, 271, "Output"],
Cell[1139294, 24856, 1164, 33, 148, "Output"],
Cell[1140461, 24891, 1066, 31, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141564, 24927, 1849, 48, 291, "Input"],
Cell[1143416, 24977, 904, 25, 181, "Output"],
Cell[1144323, 25004, 719, 20, 106, "Output"],
Cell[1145045, 25026, 719, 20, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145801, 25051, 1870, 48, 291, "Input"],
Cell[1147674, 25101, 1928, 56, 253, "Output"],
Cell[1149605, 25159, 1262, 36, 148, "Output"],
Cell[1150870, 25197, 1218, 36, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152125, 25238, 239, 5, 64, "Input"],
Cell[1152367, 25245, 1061, 30, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153465, 25280, 507, 12, 151, "Input"],
Cell[1153975, 25294, 846, 24, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154858, 25323, 396, 7, 64, "Input"],
Cell[1155257, 25332, 279, 6, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155573, 25343, 346, 9, 75, "Input"],
Cell[1155922, 25354, 91, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156050, 25360, 129, 2, 108, "Code"],
Cell[1156182, 25364, 174, 3, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156393, 25372, 299, 7, 64, "Input"],
Cell[1156695, 25381, 2445, 69, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1159177, 25455, 354, 9, 64, "Input"],
Cell[1159534, 25466, 626, 14, 64, "Output"]
}, Open  ]],
Cell[1160175, 25483, 2005, 45, 216, "Input"],
Cell[CellGroupData[{
Cell[1162205, 25532, 2374, 57, 175, "Input"],
Cell[1164582, 25591, 2543, 75, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1167162, 25671, 4793, 126, 436, "Input"],
Cell[1171958, 25799, 1341, 38, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1173336, 25842, 3941, 97, 370, "Input"],
Cell[1177280, 25941, 991, 15, 99, "Output"],
Cell[1178274, 25958, 991, 15, 99, "Output"],
Cell[1179268, 25975, 991, 15, 99, "Output"],
Cell[1180262, 25992, 991, 15, 99, "Output"],
Cell[1181256, 26009, 991, 14, 64, "Output"],
Cell[1182250, 26025, 1022, 16, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183309, 26046, 800, 26, 96, "Input"],
Cell[1184112, 26074, 2380, 72, 186, "Output"]
}, Open  ]],
Cell[1186507, 26149, 4516, 136, 312, "Input"],
Cell[1191026, 26287, 92, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[1191143, 26292, 472, 14, 64, "Input"],
Cell[1191618, 26308, 219, 7, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191874, 26320, 4758, 125, 588, "Input"],
Cell[1196635, 26447, 3351, 92, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200023, 26544, 1088, 26, 100, "Input"],
Cell[1201114, 26572, 1004, 24, 175, "Output"]
}, Open  ]],
Cell[1202133, 26599, 830, 11, 64, "Input"],
Cell[1202966, 26612, 94, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[1203085, 26617, 1616, 47, 178, "Input"],
Cell[1204704, 26666, 346, 9, 97, "Output"],
Cell[1205053, 26677, 398, 10, 97, "Output"],
Cell[1205454, 26689, 398, 10, 97, "Output"],
Cell[1205855, 26701, 346, 9, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1206238, 26715, 5765, 179, 628, "Input"],
Cell[1212006, 26896, 279, 6, 67, "Output"],
Cell[1212288, 26904, 219, 4, 64, "Output"],
Cell[1212510, 26910, 221, 4, 64, "Output"],
Cell[1212734, 26916, 279, 6, 67, "Output"],
Cell[1213016, 26924, 303, 7, 103, "Output"],
Cell[1213322, 26933, 301, 7, 103, "Output"],
Cell[1213626, 26942, 303, 7, 103, "Output"],
Cell[1213932, 26951, 303, 7, 103, "Output"],
Cell[1214238, 26960, 303, 7, 103, "Output"],
Cell[1214544, 26969, 301, 7, 103, "Output"],
Cell[1214848, 26978, 301, 7, 103, "Output"],
Cell[1215152, 26987, 301, 7, 103, "Output"],
Cell[1215456, 26996, 376, 10, 97, "Output"],
Cell[1215835, 27008, 424, 11, 97, "Output"],
Cell[1216262, 27021, 426, 11, 97, "Output"],
Cell[1216691, 27034, 376, 10, 97, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
